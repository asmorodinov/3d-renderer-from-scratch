<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2786px" preserveAspectRatio="none" style="width:10682px;height:2786px;background:#FFFFFF;" version="1.1" viewBox="0 0 10682 2786" width="10682px" zoomAndPan="magnify"><defs><filter height="300%" id="f6pk6owyqu5u0" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[b4dd6975a13623a4f022e67948f2c86e]
cluster eng--><polygon fill="#FFFFFF" filter="url(#f6pk6owyqu5u0)" points="16,644,49,644,56,667.6094,10665,667.6094,10665,2779,16,2779,16,644" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="16" x2="56" y1="667.6094" y2="667.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="27" x="20" y="660.5332">eng</text><!--MD5=[b7ba1f4ac382f1ed1b5abd6db674aa7c]
class eng.Assets--><rect codeLine="63" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="214.0313" id="eng.Assets" style="stroke:#A80036;stroke-width:1.5;" width="580" x="7017" y="721.5"/><ellipse cx="7283.75" cy="737.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7286.5156,733.375 Q7286.6719,733.1563 7286.8594,733.0469 Q7287.0469,732.9375 7287.2656,732.9375 Q7287.6406,732.9375 7287.875,733.1953 Q7288.1094,733.4531 7288.1094,734.0625 L7288.1094,735.5156 Q7288.1094,736.125 7287.875,736.3906 Q7287.6406,736.6563 7287.2656,736.6563 Q7286.9219,736.6563 7286.7188,736.4531 Q7286.5156,736.2656 7286.4063,735.75 Q7286.3594,735.3906 7286.1719,735.2031 Q7285.8438,734.8281 7285.2344,734.6094 Q7284.625,734.3906 7284,734.3906 Q7283.2344,734.3906 7282.6016,734.7188 Q7281.9688,735.0469 7281.4766,735.7969 Q7280.9844,736.5469 7280.9844,737.5781 L7280.9844,738.6719 Q7280.9844,739.9063 7281.875,740.7266 Q7282.7656,741.5469 7284.3594,741.5469 Q7285.2969,741.5469 7285.9531,741.2969 Q7286.3438,741.1406 7286.7656,740.7031 Q7287.0313,740.4375 7287.1797,740.3594 Q7287.3281,740.2813 7287.5313,740.2813 Q7287.8594,740.2813 7288.1172,740.5391 Q7288.375,740.7969 7288.375,741.1406 Q7288.375,741.4844 7288.0313,741.8906 Q7287.5313,742.4688 7286.7344,742.7969 Q7285.6563,743.25 7284.3594,743.25 Q7282.8438,743.25 7281.6406,742.625 Q7280.6563,742.125 7279.9688,741.0547 Q7279.2813,739.9844 7279.2813,738.7031 L7279.2813,737.5469 Q7279.2813,736.2188 7279.8984,735.0703 Q7280.5156,733.9219 7281.6094,733.3047 Q7282.7031,732.6875 7283.9375,732.6875 Q7284.6719,732.6875 7285.3203,732.8516 Q7285.9688,733.0156 7286.5156,733.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="38" x="7304.25" y="742.4102">Assets</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7018" x2="7596" y1="753.5" y2="753.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7025" y="761.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="7037" y="768.9189">cubemapTexture : CubemapTexture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7025" y="775.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="7037" y="782.7549">texture : Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7025" y="789.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="7037" y="796.5908">shadowMappingInfo_ : std::optional&lt;ShadowMappingInfo&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7018" x2="7596" y1="803.0078" y2="803.0078"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7025" y="811.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="7037" y="818.4268">Assets()</text><ellipse cx="7028" cy="827.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="74" x="7037" y="832.2627">get() : Assets&amp;</text><ellipse cx="7028" cy="841.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="213" x="7037" y="846.0986">getCubemapTexture() : CubemapTextureRef</text><ellipse cx="7028" cy="855.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="554" x="7037" y="859.9346">getCubemapTexture(std::string filename, bool defaultFormat, const std::string&amp; imageFormat) : CubemapTextureRef</text><ellipse cx="7028" cy="869.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="370" x="7037" y="873.7705">getMeshData(std::string filename, float scale, bool in, bool ov) : MeshDataRef</text><ellipse cx="7028" cy="883.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="7037" y="887.6064">getTexture() : TextureRef</text><ellipse cx="7028" cy="897.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="7037" y="901.4424">getTexture(std::string filename) : TextureRef</text><ellipse cx="7028" cy="910.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="307" x="7037" y="915.2783">getShadowMappingInfo() : std::optional&lt;ShadowMappingInfo&gt;&amp;</text><ellipse cx="7028" cy="924.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="378" x="7037" y="929.1143">setShadowMappingInfo(const std::optional&lt;ShadowMappingInfo&gt;&amp; info) : void</text><!--MD5=[3ed95d263e79c8bcf6ca86b1b6199614]
class eng.BloomPipeline--><rect codeLine="78" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="131.0156" id="eng.BloomPipeline" style="stroke:#A80036;stroke-width:1.5;" width="456" x="3039" y="1106"/><ellipse cx="3222.25" cy="1122" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3225.0156,1117.875 Q3225.1719,1117.6563 3225.3594,1117.5469 Q3225.5469,1117.4375 3225.7656,1117.4375 Q3226.1406,1117.4375 3226.375,1117.6953 Q3226.6094,1117.9531 3226.6094,1118.5625 L3226.6094,1120.0156 Q3226.6094,1120.625 3226.375,1120.8906 Q3226.1406,1121.1563 3225.7656,1121.1563 Q3225.4219,1121.1563 3225.2188,1120.9531 Q3225.0156,1120.7656 3224.9063,1120.25 Q3224.8594,1119.8906 3224.6719,1119.7031 Q3224.3438,1119.3281 3223.7344,1119.1094 Q3223.125,1118.8906 3222.5,1118.8906 Q3221.7344,1118.8906 3221.1016,1119.2188 Q3220.4688,1119.5469 3219.9766,1120.2969 Q3219.4844,1121.0469 3219.4844,1122.0781 L3219.4844,1123.1719 Q3219.4844,1124.4063 3220.375,1125.2266 Q3221.2656,1126.0469 3222.8594,1126.0469 Q3223.7969,1126.0469 3224.4531,1125.7969 Q3224.8438,1125.6406 3225.2656,1125.2031 Q3225.5313,1124.9375 3225.6797,1124.8594 Q3225.8281,1124.7813 3226.0313,1124.7813 Q3226.3594,1124.7813 3226.6172,1125.0391 Q3226.875,1125.2969 3226.875,1125.6406 Q3226.875,1125.9844 3226.5313,1126.3906 Q3226.0313,1126.9688 3225.2344,1127.2969 Q3224.1563,1127.75 3222.8594,1127.75 Q3221.3438,1127.75 3220.1406,1127.125 Q3219.1563,1126.625 3218.4688,1125.5547 Q3217.7813,1124.4844 3217.7813,1123.2031 L3217.7813,1122.0469 Q3217.7813,1120.7188 3218.3984,1119.5703 Q3219.0156,1118.4219 3220.1094,1117.8047 Q3221.2031,1117.1875 3222.4375,1117.1875 Q3223.1719,1117.1875 3223.8203,1117.3516 Q3224.4688,1117.5156 3225.0156,1117.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="81" x="3242.75" y="1126.9102">BloomPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3040" x2="3494" y1="1138" y2="1138"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3047" y="1146"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="3059" y="1153.4189">buffer_ : ColorAndDepthBuffer&lt;Color128, DefaultConversion, NoBlending, AlphaDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3047" y="1159.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="3059" y="1167.2549">result_ : ColorBuffer32</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3047" y="1173.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="3059" y="1181.0908">bloom_buffer1_ : ColorBuffer96</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3047" y="1187.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="3059" y="1194.9268">bloom_buffer2_ : ColorBuffer96</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3040" x2="3494" y1="1201.3438" y2="1201.3438"/><ellipse cx="3050" cy="1212.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="3059" y="1216.7627">BloomPipeline(Pixels width, Pixels height)</text><ellipse cx="3050" cy="1226.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="3059" y="1230.5986">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[3e5662cb60129afeacec6ee7a97e5fd8]
class eng.Camera--><rect codeLine="87" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="172.5234" id="eng.Camera" style="stroke:#A80036;stroke-width:1.5;" width="253" x="6500.5" y="1085"/><ellipse cx="6600.25" cy="1101" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6603.0156,1096.875 Q6603.1719,1096.6563 6603.3594,1096.5469 Q6603.5469,1096.4375 6603.7656,1096.4375 Q6604.1406,1096.4375 6604.375,1096.6953 Q6604.6094,1096.9531 6604.6094,1097.5625 L6604.6094,1099.0156 Q6604.6094,1099.625 6604.375,1099.8906 Q6604.1406,1100.1563 6603.7656,1100.1563 Q6603.4219,1100.1563 6603.2188,1099.9531 Q6603.0156,1099.7656 6602.9063,1099.25 Q6602.8594,1098.8906 6602.6719,1098.7031 Q6602.3438,1098.3281 6601.7344,1098.1094 Q6601.125,1097.8906 6600.5,1097.8906 Q6599.7344,1097.8906 6599.1016,1098.2188 Q6598.4688,1098.5469 6597.9766,1099.2969 Q6597.4844,1100.0469 6597.4844,1101.0781 L6597.4844,1102.1719 Q6597.4844,1103.4063 6598.375,1104.2266 Q6599.2656,1105.0469 6600.8594,1105.0469 Q6601.7969,1105.0469 6602.4531,1104.7969 Q6602.8438,1104.6406 6603.2656,1104.2031 Q6603.5313,1103.9375 6603.6797,1103.8594 Q6603.8281,1103.7813 6604.0313,1103.7813 Q6604.3594,1103.7813 6604.6172,1104.0391 Q6604.875,1104.2969 6604.875,1104.6406 Q6604.875,1104.9844 6604.5313,1105.3906 Q6604.0313,1105.9688 6603.2344,1106.2969 Q6602.1563,1106.75 6600.8594,1106.75 Q6599.3438,1106.75 6598.1406,1106.125 Q6597.1563,1105.625 6596.4688,1104.5547 Q6595.7813,1103.4844 6595.7813,1102.2031 L6595.7813,1101.0469 Q6595.7813,1099.7188 6596.3984,1098.5703 Q6597.0156,1097.4219 6598.1094,1096.8047 Q6599.2031,1096.1875 6600.4375,1096.1875 Q6601.1719,1096.1875 6601.8203,1096.3516 Q6602.4688,1096.5156 6603.0156,1096.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="45" x="6620.75" y="1105.9102">Camera</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6501.5" x2="6752.5" y1="1117" y2="1117"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6508.5" y="1125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="6520.5" y="1132.4189">viewMatrix_ : glm::mat4</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6508.5" y="1138.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="6520.5" y="1146.2549">direction_ : glm::vec3</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6508.5" y="1152.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="6520.5" y="1160.0908">position_ : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6501.5" x2="6752.5" y1="1166.5078" y2="1166.5078"/><ellipse cx="6511.5" cy="1177.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="6520.5" y="1181.9268">Camera(glm::vec3 position, glm::vec3 direction)</text><ellipse cx="6511.5" cy="1191.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="6520.5" y="1195.7627">getViewMatrix() : glm::mat4&amp; {query}</text><ellipse cx="6511.5" cy="1205.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="6520.5" y="1209.5986">getDirection() : glm::vec3&amp; {query}</text><ellipse cx="6511.5" cy="1219.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="6520.5" y="1223.4346">getPosition() : glm::vec3&amp; {query}</text><ellipse cx="6511.5" cy="1232.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="6520.5" y="1237.2705">setDirection(glm::vec3 direction) : void</text><ellipse cx="6511.5" cy="1246.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="6520.5" y="1251.1064">setPosition(glm::vec3 position) : void</text><!--MD5=[fcbdc99bf9f128de6300cbfc93aa055f]
class eng.CameraControl--><rect codeLine="99" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="214.0313" id="eng.CameraControl" style="stroke:#A80036;stroke-width:1.5;" width="340" x="6130" y="721.5"/><ellipse cx="6253.25" cy="737.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6256.0156,733.375 Q6256.1719,733.1563 6256.3594,733.0469 Q6256.5469,732.9375 6256.7656,732.9375 Q6257.1406,732.9375 6257.375,733.1953 Q6257.6094,733.4531 6257.6094,734.0625 L6257.6094,735.5156 Q6257.6094,736.125 6257.375,736.3906 Q6257.1406,736.6563 6256.7656,736.6563 Q6256.4219,736.6563 6256.2188,736.4531 Q6256.0156,736.2656 6255.9063,735.75 Q6255.8594,735.3906 6255.6719,735.2031 Q6255.3438,734.8281 6254.7344,734.6094 Q6254.125,734.3906 6253.5,734.3906 Q6252.7344,734.3906 6252.1016,734.7188 Q6251.4688,735.0469 6250.9766,735.7969 Q6250.4844,736.5469 6250.4844,737.5781 L6250.4844,738.6719 Q6250.4844,739.9063 6251.375,740.7266 Q6252.2656,741.5469 6253.8594,741.5469 Q6254.7969,741.5469 6255.4531,741.2969 Q6255.8438,741.1406 6256.2656,740.7031 Q6256.5313,740.4375 6256.6797,740.3594 Q6256.8281,740.2813 6257.0313,740.2813 Q6257.3594,740.2813 6257.6172,740.5391 Q6257.875,740.7969 6257.875,741.1406 Q6257.875,741.4844 6257.5313,741.8906 Q6257.0313,742.4688 6256.2344,742.7969 Q6255.1563,743.25 6253.8594,743.25 Q6252.3438,743.25 6251.1406,742.625 Q6250.1563,742.125 6249.4688,741.0547 Q6248.7813,739.9844 6248.7813,738.7031 L6248.7813,737.5469 Q6248.7813,736.2188 6249.3984,735.0703 Q6250.0156,733.9219 6251.1094,733.3047 Q6252.2031,732.6875 6253.4375,732.6875 Q6254.1719,732.6875 6254.8203,732.8516 Q6255.4688,733.0156 6256.0156,733.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="85" x="6273.75" y="742.4102">CameraControl</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6131" x2="6469" y1="753.5" y2="753.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6138" y="761.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="6150" y="768.9189">pitch_ : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6138" y="775.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="58" x="6150" y="782.7549">yaw_ : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6138" y="789.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="6150" y="796.5908">direction_ : glm::vec3</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6138" y="803.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="6150" y="810.4268">position_ : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6131" x2="6469" y1="816.8438" y2="816.8438"/><ellipse cx="6141" cy="827.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="6150" y="832.2627">CameraControl(glm::vec3 position, glm::vec3 direction)</text><ellipse cx="6141" cy="841.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="6150" y="846.0986">getDirection() : glm::vec3 {query}</text><ellipse cx="6141" cy="855.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="6150" y="859.9346">getPosition() : glm::vec3 {query}</text><ellipse cx="6141" cy="869.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="6150" y="873.7705">keyPressedOrReleased(sf::Keyboard::Key key, bool mode) : void</text><ellipse cx="6141" cy="883.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="6150" y="887.6064">mouseMove(glm::vec2 delta) : void</text><ellipse cx="6141" cy="897.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="6150" y="901.4424">setDirection(glm::vec3 dir) : void</text><ellipse cx="6141" cy="910.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="6150" y="915.2783">setPosition(glm::vec3 pos) : void</text><ellipse cx="6141" cy="924.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="6150" y="929.1143">update(float deltaTime) : void</text><!--MD5=[4e463170d1536670a7a66385e976175f]
class eng.ColorAndDepthBuffer--><rect codeLine="114" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="407.7344" id="eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.5;" width="1230" x="7614" y="1456"/><ellipse cx="7629" cy="1472" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7631.7656,1467.875 Q7631.9219,1467.6563 7632.1094,1467.5469 Q7632.2969,1467.4375 7632.5156,1467.4375 Q7632.8906,1467.4375 7633.125,1467.6953 Q7633.3594,1467.9531 7633.3594,1468.5625 L7633.3594,1470.0156 Q7633.3594,1470.625 7633.125,1470.8906 Q7632.8906,1471.1563 7632.5156,1471.1563 Q7632.1719,1471.1563 7631.9688,1470.9531 Q7631.7656,1470.7656 7631.6563,1470.25 Q7631.6094,1469.8906 7631.4219,1469.7031 Q7631.0938,1469.3281 7630.4844,1469.1094 Q7629.875,1468.8906 7629.25,1468.8906 Q7628.4844,1468.8906 7627.8516,1469.2188 Q7627.2188,1469.5469 7626.7266,1470.2969 Q7626.2344,1471.0469 7626.2344,1472.0781 L7626.2344,1473.1719 Q7626.2344,1474.4063 7627.125,1475.2266 Q7628.0156,1476.0469 7629.6094,1476.0469 Q7630.5469,1476.0469 7631.2031,1475.7969 Q7631.5938,1475.6406 7632.0156,1475.2031 Q7632.2813,1474.9375 7632.4297,1474.8594 Q7632.5781,1474.7813 7632.7813,1474.7813 Q7633.1094,1474.7813 7633.3672,1475.0391 Q7633.625,1475.2969 7633.625,1475.6406 Q7633.625,1475.9844 7633.2813,1476.3906 Q7632.7813,1476.9688 7631.9844,1477.2969 Q7630.9063,1477.75 7629.6094,1477.75 Q7628.0938,1477.75 7626.8906,1477.125 Q7625.9063,1476.625 7625.2188,1475.5547 Q7624.5313,1474.4844 7624.5313,1473.2031 L7624.5313,1472.0469 Q7624.5313,1470.7188 7625.1484,1469.5703 Q7625.7656,1468.4219 7626.8594,1467.8047 Q7627.9531,1467.1875 7629.1875,1467.1875 Q7629.9219,1467.1875 7630.5703,1467.3516 Q7631.2188,1467.5156 7631.7656,1467.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="116" x="7643" y="1476.9102">ColorAndDepthBuffer</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="1080" x="7767" y="1453"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="1078" x="7768" y="1466.457">template&lt;typename ColorType, template&lt;typename Color1, typename Color2&gt;class ConvertionType, template&lt;typename Color&gt;class BlendingType, template&lt;typename Color&gt;class DiscardType&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7615" x2="8843" y1="1488" y2="1488"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1496"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="7634" y="1503.4189">clearColor_ : ColorType</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1509.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="7634" y="1517.2549">height_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1523.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="7634" y="1531.0908">width_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1537.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="7634" y="1544.9268">colorBuffer_ : Vector2d&lt;Color&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1551.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="7634" y="1558.7627">depthBuffer_ : Vector2d&lt;Depth&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1565.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="7634" y="1572.5986">writeToDepthBuffer_ : bool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7615" x2="8843" y1="1579.0156" y2="1579.0156"/><ellipse cx="7625" cy="1590.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="7634" y="1594.4346">ColorAndDepthBuffer(Pixels width, Pixels height, ColorType clearColor)</text><ellipse cx="7625" cy="1603.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="180" x="7634" y="1608.2705">blend(Clr source, Clr destination) : Clr</text><ellipse cx="7625" cy="1617.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="7634" y="1622.1064">getClearColor() : Color {query}</text><ellipse cx="7625" cy="1631.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="7634" y="1635.9424">getPixelColor(Pixels x, Pixels y) : Color {query}</text><ellipse cx="7625" cy="1645.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="168" x="7634" y="1649.7783">convertColor(Color1 color) : Color2</text><ellipse cx="7625" cy="1659.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="7634" y="1663.6143">getColorBuffer() : ColorBuffer&amp; {query}</text><ellipse cx="7625" cy="1673.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="7634" y="1677.4502">getColorBuffer() : ColorBuffer&amp;</text><ellipse cx="7625" cy="1686.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="7634" y="1691.2861">getPixelDepth(Pixels x, Pixels y) : Depth {query}</text><ellipse cx="7625" cy="1700.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="7634" y="1705.1221">getDepthBuffer() : DepthBuffer&amp; {query}</text><ellipse cx="7625" cy="1714.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="7634" y="1718.958">getDepthBuffer() : DepthBuffer&amp;</text><ellipse cx="7625" cy="1728.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="7634" y="1732.7939">getHeight() : Pixels {query}</text><ellipse cx="7625" cy="1742.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="7634" y="1746.6299">getWidth() : Pixels {query}</text><ellipse cx="7625" cy="1756.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="113" x="7634" y="1760.4658">discard(Clr color) : bool</text><ellipse cx="7625" cy="1769.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="7634" y="1774.3018">clear() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1780.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="7634" y="1788.1377">depthCheckSetPixelColor(Pixels x, Pixels y, Depth z, ColorType color) : void</text><ellipse cx="7625" cy="1797.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="7634" y="1801.9736">setClearColor(ColorType clr) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1808.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="7634" y="1815.8096">setPixelColor(Pixels x, Pixels y, ColorType color) : void</text><ellipse cx="7625" cy="1825.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="7634" y="1829.6455">setPixelColor(Pixels x, Pixels y, ColorType color, Depth z) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7622" y="1836.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="7634" y="1843.4814">setPixelDepth(Pixels x, Pixels y, Depth z) : void</text><ellipse cx="7625" cy="1852.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="7634" y="1857.3174">setWriteToDepthBuffer(bool b) : void</text><!--MD5=[f7c517d4f6f2c68bfa463231501ffd2c]
class eng.ConvertingPipeline--><rect codeLine="143" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.ConvertingPipeline" style="stroke:#A80036;stroke-width:1.5;" width="441" x="2027.5" y="1120"/><ellipse cx="2191.75" cy="1136" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2194.5156,1131.875 Q2194.6719,1131.6563 2194.8594,1131.5469 Q2195.0469,1131.4375 2195.2656,1131.4375 Q2195.6406,1131.4375 2195.875,1131.6953 Q2196.1094,1131.9531 2196.1094,1132.5625 L2196.1094,1134.0156 Q2196.1094,1134.625 2195.875,1134.8906 Q2195.6406,1135.1563 2195.2656,1135.1563 Q2194.9219,1135.1563 2194.7188,1134.9531 Q2194.5156,1134.7656 2194.4063,1134.25 Q2194.3594,1133.8906 2194.1719,1133.7031 Q2193.8438,1133.3281 2193.2344,1133.1094 Q2192.625,1132.8906 2192,1132.8906 Q2191.2344,1132.8906 2190.6016,1133.2188 Q2189.9688,1133.5469 2189.4766,1134.2969 Q2188.9844,1135.0469 2188.9844,1136.0781 L2188.9844,1137.1719 Q2188.9844,1138.4063 2189.875,1139.2266 Q2190.7656,1140.0469 2192.3594,1140.0469 Q2193.2969,1140.0469 2193.9531,1139.7969 Q2194.3438,1139.6406 2194.7656,1139.2031 Q2195.0313,1138.9375 2195.1797,1138.8594 Q2195.3281,1138.7813 2195.5313,1138.7813 Q2195.8594,1138.7813 2196.1172,1139.0391 Q2196.375,1139.2969 2196.375,1139.6406 Q2196.375,1139.9844 2196.0313,1140.3906 Q2195.5313,1140.9688 2194.7344,1141.2969 Q2193.6563,1141.75 2192.3594,1141.75 Q2190.8438,1141.75 2189.6406,1141.125 Q2188.6563,1140.625 2187.9688,1139.5547 Q2187.2813,1138.4844 2187.2813,1137.2031 L2187.2813,1136.0469 Q2187.2813,1134.7188 2187.8984,1133.5703 Q2188.5156,1132.4219 2189.6094,1131.8047 Q2190.7031,1131.1875 2191.9375,1131.1875 Q2192.6719,1131.1875 2193.3203,1131.3516 Q2193.9688,1131.5156 2194.5156,1131.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="104" x="2212.25" y="1140.9102">ConvertingPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2028.5" x2="2467.5" y1="1152" y2="1152"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2035.5" y="1160"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="2047.5" y="1167.4189">buffer_ : ColorAndDepthBuffer&lt;Color128, DefaultConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2035.5" y="1173.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="2047.5" y="1181.2549">result_ : ColorBuffer32</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2028.5" x2="2467.5" y1="1187.6719" y2="1187.6719"/><ellipse cx="2038.5" cy="1198.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="2047.5" y="1203.0908">ConvertingPipeline(Pixels width, Pixels height)</text><ellipse cx="2038.5" cy="1212.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="2047.5" y="1216.9268">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[249b4a9279961ff779fe41a91ceebd8e]
class eng.DeferredShadingPipeline--><rect codeLine="150" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="117.1797" id="eng.DeferredShadingPipeline" style="stroke:#A80036;stroke-width:1.5;" width="470" x="1522" y="1113"/><ellipse cx="1683.25" cy="1129" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1686.0156,1124.875 Q1686.1719,1124.6563 1686.3594,1124.5469 Q1686.5469,1124.4375 1686.7656,1124.4375 Q1687.1406,1124.4375 1687.375,1124.6953 Q1687.6094,1124.9531 1687.6094,1125.5625 L1687.6094,1127.0156 Q1687.6094,1127.625 1687.375,1127.8906 Q1687.1406,1128.1563 1686.7656,1128.1563 Q1686.4219,1128.1563 1686.2188,1127.9531 Q1686.0156,1127.7656 1685.9063,1127.25 Q1685.8594,1126.8906 1685.6719,1126.7031 Q1685.3438,1126.3281 1684.7344,1126.1094 Q1684.125,1125.8906 1683.5,1125.8906 Q1682.7344,1125.8906 1682.1016,1126.2188 Q1681.4688,1126.5469 1680.9766,1127.2969 Q1680.4844,1128.0469 1680.4844,1129.0781 L1680.4844,1130.1719 Q1680.4844,1131.4063 1681.375,1132.2266 Q1682.2656,1133.0469 1683.8594,1133.0469 Q1684.7969,1133.0469 1685.4531,1132.7969 Q1685.8438,1132.6406 1686.2656,1132.2031 Q1686.5313,1131.9375 1686.6797,1131.8594 Q1686.8281,1131.7813 1687.0313,1131.7813 Q1687.3594,1131.7813 1687.6172,1132.0391 Q1687.875,1132.2969 1687.875,1132.6406 Q1687.875,1132.9844 1687.5313,1133.3906 Q1687.0313,1133.9688 1686.2344,1134.2969 Q1685.1563,1134.75 1683.8594,1134.75 Q1682.3438,1134.75 1681.1406,1134.125 Q1680.1563,1133.625 1679.4688,1132.5547 Q1678.7813,1131.4844 1678.7813,1130.2031 L1678.7813,1129.0469 Q1678.7813,1127.7188 1679.3984,1126.5703 Q1680.0156,1125.4219 1681.1094,1124.8047 Q1682.2031,1124.1875 1683.4375,1124.1875 Q1684.1719,1124.1875 1684.8203,1124.3516 Q1685.4688,1124.5156 1686.0156,1124.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="139" x="1703.75" y="1133.9102">DeferredShadingPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1523" x2="1991" y1="1145" y2="1145"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1530" y="1153"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="1542" y="1160.4189">result_ : ColorAndDepthBuffer&lt;Color32, ClampConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1530" y="1166.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="1542" y="1174.2549">gBuffer_ : ColorAndDepthBuffer&lt;GeometryInfo, DefaultConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1530" y="1180.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="1542" y="1188.0908">mesh_ : Mesh&lt;GeometryPassVertexShader, GeometryPassShader&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1523" x2="1991" y1="1194.5078" y2="1194.5078"/><ellipse cx="1533" cy="1205.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="1542" y="1209.9268">DeferredShadingPipeline(Pixels width, Pixels height)</text><ellipse cx="1533" cy="1219.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="1542" y="1223.7627">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[c8158d585ac9b4fddb4bd10f1dd8fb3f]
class eng.Mesh--><rect codeLine="158" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="587.6016" id="eng.Mesh" style="stroke:#A80036;stroke-width:1.5;" width="1583" x="5354.5" y="1366"/><ellipse cx="5948.75" cy="1382" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5951.5156,1377.875 Q5951.6719,1377.6563 5951.8594,1377.5469 Q5952.0469,1377.4375 5952.2656,1377.4375 Q5952.6406,1377.4375 5952.875,1377.6953 Q5953.1094,1377.9531 5953.1094,1378.5625 L5953.1094,1380.0156 Q5953.1094,1380.625 5952.875,1380.8906 Q5952.6406,1381.1563 5952.2656,1381.1563 Q5951.9219,1381.1563 5951.7188,1380.9531 Q5951.5156,1380.7656 5951.4063,1380.25 Q5951.3594,1379.8906 5951.1719,1379.7031 Q5950.8438,1379.3281 5950.2344,1379.1094 Q5949.625,1378.8906 5949,1378.8906 Q5948.2344,1378.8906 5947.6016,1379.2188 Q5946.9688,1379.5469 5946.4766,1380.2969 Q5945.9844,1381.0469 5945.9844,1382.0781 L5945.9844,1383.1719 Q5945.9844,1384.4063 5946.875,1385.2266 Q5947.7656,1386.0469 5949.3594,1386.0469 Q5950.2969,1386.0469 5950.9531,1385.7969 Q5951.3438,1385.6406 5951.7656,1385.2031 Q5952.0313,1384.9375 5952.1797,1384.8594 Q5952.3281,1384.7813 5952.5313,1384.7813 Q5952.8594,1384.7813 5953.1172,1385.0391 Q5953.375,1385.2969 5953.375,1385.6406 Q5953.375,1385.9844 5953.0313,1386.3906 Q5952.5313,1386.9688 5951.7344,1387.2969 Q5950.6563,1387.75 5949.3594,1387.75 Q5947.8438,1387.75 5946.6406,1387.125 Q5945.6563,1386.625 5944.9688,1385.5547 Q5944.2813,1384.4844 5944.2813,1383.2031 L5944.2813,1382.0469 Q5944.2813,1380.7188 5944.8984,1379.5703 Q5945.5156,1378.4219 5946.6094,1377.8047 Q5947.7031,1377.1875 5948.9375,1377.1875 Q5949.6719,1377.1875 5950.3203,1377.3516 Q5950.9688,1377.5156 5951.5156,1377.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="30" x="5969.25" y="1386.9102">Mesh</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="354" x="6586.5" y="1363"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="352" x="6587.5" y="1376.457">template&lt;typename VertexShader, typename FragmentShader&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5355.5" x2="6936.5" y1="1398" y2="1398"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="5374.5" y="1413.4189">wireframeColor_ : Color32</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1419.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="5374.5" y="1427.2549">fragmentShader_ : FragmentShader</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1433.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="5374.5" y="1441.0908">fragmentShaderUniform_ : FragmentShaderUniform</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1447.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="5374.5" y="1454.9268">objectTransform_ : ObjectTransform</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1461.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="5374.5" y="1468.7627">vertexShader_ : VertexShader</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1475.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="5374.5" y="1482.5986">vertexShaderUniform_ : VertexShaderUniform</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1489.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="5374.5" y="1496.4346">drawBackface_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1502.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="5374.5" y="1510.2705">drawingEnabled_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1516.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="5374.5" y="1524.1064">isTransparent_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1530.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="5374.5" y="1537.9424">wireframeMode_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1544.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="5374.5" y="1551.7783">writeToDepthBuffer_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5362.5" y="1558.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="5374.5" y="1565.6143">mesh_ : reference_wrapper&lt;const MeshData&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5355.5" x2="6936.5" y1="1572.0313" y2="1572.0313"/><ellipse cx="5365.5" cy="1583.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="1557" x="5374.5" y="1587.4502">Mesh(reference_wrapper&lt;const MeshData&gt; mesh, VertexShaderUniform vertexShaderUniform, FragmentShaderUniform fragmentShaderUniform, const ObjectTransform&amp; objectTransform, bool wireframeMode, bool writeToDepthBuffer, Color32 wireframeColor, bool drawingEnabled, bool transparent, bool drawBackface)</text><ellipse cx="5365.5" cy="1596.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="5374.5" y="1601.2861">getFragmentShader() : FragmentShader&amp;</text><ellipse cx="5365.5" cy="1610.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="5374.5" y="1615.1221">getFragmentShaderUniform() : FragmentShaderUniform&amp; {query}</text><ellipse cx="5365.5" cy="1624.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="5374.5" y="1628.958">getFragmentShaderUniform() : FragmentShaderUniform&amp;</text><ellipse cx="5365.5" cy="1638.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="5374.5" y="1642.7939">getMeshData() : MeshDataRef {query}</text><ellipse cx="5365.5" cy="1652.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="5374.5" y="1656.6299">getTransform() : ObjectTransform&amp; {query}</text><ellipse cx="5365.5" cy="1666.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="5374.5" y="1670.4658">getTransform() : ObjectTransform&amp;</text><ellipse cx="5365.5" cy="1679.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="5374.5" y="1684.3018">getVertexShaderUniform() : VertexShaderUniform&amp; {query}</text><ellipse cx="5365.5" cy="1693.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="5374.5" y="1698.1377">getVertexShaderUniform() : VertexShaderUniform&amp;</text><ellipse cx="5365.5" cy="1707.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="5374.5" y="1711.9736">getDrawBackface() : bool {query}</text><ellipse cx="5365.5" cy="1721.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="5374.5" y="1725.8096">getDrawingEnabled() : bool {query}</text><ellipse cx="5365.5" cy="1735.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="5374.5" y="1739.6455">getIsTransparent() : bool {query}</text><ellipse cx="5365.5" cy="1749.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="5374.5" y="1753.4814">getWireframeMode() : bool {query}</text><ellipse cx="5365.5" cy="1762.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="5374.5" y="1767.3174">getWriteToDepthBuffer() : bool {query}</text><ellipse cx="5365.5" cy="1776.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="483" x="5374.5" y="1781.1533">getCenter(const eng::MeshData&amp; mesh, const eng::Face&amp; face, const glm::mat4&amp; model) : glm::vec3</text><ellipse cx="5365.5" cy="1790.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="5374.5" y="1794.9893">getWireframeColor() : glm::vec3 {query}</text><ellipse cx="5365.5" cy="1804.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="5374.5" y="1808.8252">getTriangleCount() : size_t {query}</text><ellipse cx="5365.5" cy="1818.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="5374.5" y="1822.6611">getDistances(const Camera&amp; camera) : std::vector&lt;Distance&gt;</text><ellipse cx="5365.5" cy="1832.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="519" x="5374.5" y="1836.4971">draw(const Camera&amp; camera, ProjectionInfo&amp; projectionInfo, const LightsVec&amp; lights, Buffer&amp; buffer) : void</text><ellipse cx="5365.5" cy="1845.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="629" x="5374.5" y="1850.333">drawFace(const Camera&amp; camera, ProjectionInfo&amp; projectionInfo, const LightsVec&amp; lights, Buffer&amp; buffer, size_t faceIndex) : void</text><ellipse cx="5365.5" cy="1859.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="656" x="5374.5" y="1864.1689">setDrawingMode(bool wireframeMode, bool drawingEnabled, bool writeToDepthBuffer, Color32 wireframeColor, bool transparent) : void</text><ellipse cx="5365.5" cy="1873.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="404" x="5374.5" y="1878.0049">setFragmentShaderUniform(FragmentShaderUniform fragmentShaderUniform) : void</text><ellipse cx="5365.5" cy="1887.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="5374.5" y="1891.8408">setIsTransparent(bool transparent) : void</text><ellipse cx="5365.5" cy="1901.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="5374.5" y="1905.6768">setMeshData(reference_wrapper&lt;const MeshData&gt; mesh) : void</text><ellipse cx="5365.5" cy="1915.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="5374.5" y="1919.5127">setTransform(const ObjectTransform&amp; objectTransform) : void</text><ellipse cx="5365.5" cy="1928.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="5374.5" y="1933.3486">setVertexShaderUniform(VertexShaderUniform vertexShaderUniform) : void</text><ellipse cx="5365.5" cy="1942.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="5374.5" y="1947.1846">setWireframeColor(Color32 color) : void</text><!--MD5=[3f5074c9b93d0235fdda996b4d3f855a]
class eng.ObjectTransform--><rect codeLine="200" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="255.5391" id="eng.ObjectTransform" style="stroke:#A80036;stroke-width:1.5;" width="263" x="6014.5" y="2055.5"/><ellipse cx="6095.75" cy="2071.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6098.5156,2067.375 Q6098.6719,2067.1563 6098.8594,2067.0469 Q6099.0469,2066.9375 6099.2656,2066.9375 Q6099.6406,2066.9375 6099.875,2067.1953 Q6100.1094,2067.4531 6100.1094,2068.0625 L6100.1094,2069.5156 Q6100.1094,2070.125 6099.875,2070.3906 Q6099.6406,2070.6563 6099.2656,2070.6563 Q6098.9219,2070.6563 6098.7188,2070.4531 Q6098.5156,2070.2656 6098.4063,2069.75 Q6098.3594,2069.3906 6098.1719,2069.2031 Q6097.8438,2068.8281 6097.2344,2068.6094 Q6096.625,2068.3906 6096,2068.3906 Q6095.2344,2068.3906 6094.6016,2068.7188 Q6093.9688,2069.0469 6093.4766,2069.7969 Q6092.9844,2070.5469 6092.9844,2071.5781 L6092.9844,2072.6719 Q6092.9844,2073.9063 6093.875,2074.7266 Q6094.7656,2075.5469 6096.3594,2075.5469 Q6097.2969,2075.5469 6097.9531,2075.2969 Q6098.3438,2075.1406 6098.7656,2074.7031 Q6099.0313,2074.4375 6099.1797,2074.3594 Q6099.3281,2074.2813 6099.5313,2074.2813 Q6099.8594,2074.2813 6100.1172,2074.5391 Q6100.375,2074.7969 6100.375,2075.1406 Q6100.375,2075.4844 6100.0313,2075.8906 Q6099.5313,2076.4688 6098.7344,2076.7969 Q6097.6563,2077.25 6096.3594,2077.25 Q6094.8438,2077.25 6093.6406,2076.625 Q6092.6563,2076.125 6091.9688,2075.0547 Q6091.2813,2073.9844 6091.2813,2072.7031 L6091.2813,2071.5469 Q6091.2813,2070.2188 6091.8984,2069.0703 Q6092.5156,2067.9219 6093.6094,2067.3047 Q6094.7031,2066.6875 6095.9375,2066.6875 Q6096.6719,2066.6875 6097.3203,2066.8516 Q6097.9688,2067.0156 6098.5156,2067.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="92" x="6116.25" y="2076.4102">ObjectTransform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6015.5" x2="6276.5" y1="2087.5" y2="2087.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6022.5" y="2095.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="6034.5" y="2102.9189">modelInvalid_ : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6022.5" y="2109.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="6034.5" y="2116.7549">model_ : glm::mat4</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6022.5" y="2123.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="6034.5" y="2130.5908">orientation_ : glm::quat</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6022.5" y="2137.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="6034.5" y="2144.4268">position_ : glm::vec3</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6022.5" y="2150.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="6034.5" y="2158.2627">scale_ : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6015.5" x2="6276.5" y1="2164.6797" y2="2164.6797"/><ellipse cx="6025.5" cy="2175.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="6034.5" y="2180.0986">ObjectTransform()</text><ellipse cx="6025.5" cy="2189.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="6034.5" y="2193.9346">ObjectTransform(glm::vec3 pos)</text><ellipse cx="6025.5" cy="2203.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="6034.5" y="2207.7705">ObjectTransform(glm::vec3 pos, glm::vec3 scale)</text><ellipse cx="6025.5" cy="2217.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="6034.5" y="2221.6064">getModel() : glm::mat4&amp;</text><ellipse cx="6025.5" cy="2231.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="6034.5" y="2235.4424">getOrientation() : glm::quat {query}</text><ellipse cx="6025.5" cy="2244.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="6034.5" y="2249.2783">getPosition() : glm::vec3 {query}</text><ellipse cx="6025.5" cy="2258.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="6034.5" y="2263.1143">getScale() : glm::vec3 {query}</text><ellipse cx="6025.5" cy="2272.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="6034.5" y="2276.9502">setOrientation(const glm::quat orientation) : void</text><ellipse cx="6025.5" cy="2286.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="6034.5" y="2290.7861">setPosition(const glm::vec3 position) : void</text><ellipse cx="6025.5" cy="2300.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="6034.5" y="2304.6221">setScale(const glm::vec3 scale) : void</text><!--MD5=[4d14c079a61b03083ee474851475c215]
class eng.OnePassPipeline--><rect codeLine="218" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.OnePassPipeline" style="stroke:#A80036;stroke-width:1.5;" width="1012" x="4075" y="1126.5"/><ellipse cx="4090" cy="1142.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4092.7656,1138.375 Q4092.9219,1138.1563 4093.1094,1138.0469 Q4093.2969,1137.9375 4093.5156,1137.9375 Q4093.8906,1137.9375 4094.125,1138.1953 Q4094.3594,1138.4531 4094.3594,1139.0625 L4094.3594,1140.5156 Q4094.3594,1141.125 4094.125,1141.3906 Q4093.8906,1141.6563 4093.5156,1141.6563 Q4093.1719,1141.6563 4092.9688,1141.4531 Q4092.7656,1141.2656 4092.6563,1140.75 Q4092.6094,1140.3906 4092.4219,1140.2031 Q4092.0938,1139.8281 4091.4844,1139.6094 Q4090.875,1139.3906 4090.25,1139.3906 Q4089.4844,1139.3906 4088.8516,1139.7188 Q4088.2188,1140.0469 4087.7266,1140.7969 Q4087.2344,1141.5469 4087.2344,1142.5781 L4087.2344,1143.6719 Q4087.2344,1144.9063 4088.125,1145.7266 Q4089.0156,1146.5469 4090.6094,1146.5469 Q4091.5469,1146.5469 4092.2031,1146.2969 Q4092.5938,1146.1406 4093.0156,1145.7031 Q4093.2813,1145.4375 4093.4297,1145.3594 Q4093.5781,1145.2813 4093.7813,1145.2813 Q4094.1094,1145.2813 4094.3672,1145.5391 Q4094.625,1145.7969 4094.625,1146.1406 Q4094.625,1146.4844 4094.2813,1146.8906 Q4093.7813,1147.4688 4092.9844,1147.7969 Q4091.9063,1148.25 4090.6094,1148.25 Q4089.0938,1148.25 4087.8906,1147.625 Q4086.9063,1147.125 4086.2188,1146.0547 Q4085.5313,1144.9844 4085.5313,1143.7031 L4085.5313,1142.5469 Q4085.5313,1141.2188 4086.1484,1140.0703 Q4086.7656,1138.9219 4087.8594,1138.3047 Q4088.9531,1137.6875 4090.1875,1137.6875 Q4090.9219,1137.6875 4091.5703,1137.8516 Q4092.2188,1138.0156 4092.7656,1138.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="97" x="4104" y="1147.4102">OnePassPipeline</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="881" x="4209" y="1123.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="879" x="4210" y="1136.957">template&lt;template&lt;typename Color1, typename Color2&gt;class Conversion, template&lt;typename Color&gt;class Blending, template&lt;typename Color&gt;class Discard&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4076" x2="5086" y1="1158.5" y2="1158.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4083" y="1166.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="4095" y="1173.9189">buffer_ : ColorAndDepthBuffer&lt;Color32, Conversion, Blending, Discard&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4076" x2="5086" y1="1180.3359" y2="1180.3359"/><ellipse cx="4086" cy="1191.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="4095" y="1195.7549">OnePassPipeline(Pixels width, Pixels height)</text><ellipse cx="4086" cy="1205.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="4095" y="1209.5908">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[47e09b9f6c826d3778dd4a2bdabcbb23]
class eng.OnePassTransparentPipeline--><rect codeLine="224" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.OnePassTransparentPipeline" style="stroke:#A80036;stroke-width:1.5;" width="1079" x="5122.5" y="1126.5"/><ellipse cx="5137.5" cy="1142.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5140.2656,1138.375 Q5140.4219,1138.1563 5140.6094,1138.0469 Q5140.7969,1137.9375 5141.0156,1137.9375 Q5141.3906,1137.9375 5141.625,1138.1953 Q5141.8594,1138.4531 5141.8594,1139.0625 L5141.8594,1140.5156 Q5141.8594,1141.125 5141.625,1141.3906 Q5141.3906,1141.6563 5141.0156,1141.6563 Q5140.6719,1141.6563 5140.4688,1141.4531 Q5140.2656,1141.2656 5140.1563,1140.75 Q5140.1094,1140.3906 5139.9219,1140.2031 Q5139.5938,1139.8281 5138.9844,1139.6094 Q5138.375,1139.3906 5137.75,1139.3906 Q5136.9844,1139.3906 5136.3516,1139.7188 Q5135.7188,1140.0469 5135.2266,1140.7969 Q5134.7344,1141.5469 5134.7344,1142.5781 L5134.7344,1143.6719 Q5134.7344,1144.9063 5135.625,1145.7266 Q5136.5156,1146.5469 5138.1094,1146.5469 Q5139.0469,1146.5469 5139.7031,1146.2969 Q5140.0938,1146.1406 5140.5156,1145.7031 Q5140.7813,1145.4375 5140.9297,1145.3594 Q5141.0781,1145.2813 5141.2813,1145.2813 Q5141.6094,1145.2813 5141.8672,1145.5391 Q5142.125,1145.7969 5142.125,1146.1406 Q5142.125,1146.4844 5141.7813,1146.8906 Q5141.2813,1147.4688 5140.4844,1147.7969 Q5139.4063,1148.25 5138.1094,1148.25 Q5136.5938,1148.25 5135.3906,1147.625 Q5134.4063,1147.125 5133.7188,1146.0547 Q5133.0313,1144.9844 5133.0313,1143.7031 L5133.0313,1142.5469 Q5133.0313,1141.2188 5133.6484,1140.0703 Q5134.2656,1138.9219 5135.3594,1138.3047 Q5136.4531,1137.6875 5137.6875,1137.6875 Q5138.4219,1137.6875 5139.0703,1137.8516 Q5139.7188,1138.0156 5140.2656,1138.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="164" x="5151.5" y="1147.4102">OnePassTransparentPipeline</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="881" x="5323.5" y="1123.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="879" x="5324.5" y="1136.957">template&lt;template&lt;typename Color1, typename Color2&gt;class Conversion, template&lt;typename Color&gt;class Blending, template&lt;typename Color&gt;class Discard&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5123.5" x2="6200.5" y1="1158.5" y2="1158.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5130.5" y="1166.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="5142.5" y="1173.9189">buffer_ : ColorAndDepthBuffer&lt;Color32, Conversion, Blending, Discard&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5123.5" x2="6200.5" y1="1180.3359" y2="1180.3359"/><ellipse cx="5133.5" cy="1191.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="5142.5" y="1195.7549">OnePassTransparentPipeline(Pixels width, Pixels height)</text><ellipse cx="5133.5" cy="1205.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="5142.5" y="1209.5908">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[ff0992bcae62461bc7ecb34b9b0b1044]
class eng.Pool--><rect codeLine="230" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.Pool" style="stroke:#A80036;stroke-width:1.5;" width="262" x="7794" y="783.5"/><ellipse cx="7908.25" cy="799.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7911.0156,795.375 Q7911.1719,795.1563 7911.3594,795.0469 Q7911.5469,794.9375 7911.7656,794.9375 Q7912.1406,794.9375 7912.375,795.1953 Q7912.6094,795.4531 7912.6094,796.0625 L7912.6094,797.5156 Q7912.6094,798.125 7912.375,798.3906 Q7912.1406,798.6563 7911.7656,798.6563 Q7911.4219,798.6563 7911.2188,798.4531 Q7911.0156,798.2656 7910.9063,797.75 Q7910.8594,797.3906 7910.6719,797.2031 Q7910.3438,796.8281 7909.7344,796.6094 Q7909.125,796.3906 7908.5,796.3906 Q7907.7344,796.3906 7907.1016,796.7188 Q7906.4688,797.0469 7905.9766,797.7969 Q7905.4844,798.5469 7905.4844,799.5781 L7905.4844,800.6719 Q7905.4844,801.9063 7906.375,802.7266 Q7907.2656,803.5469 7908.8594,803.5469 Q7909.7969,803.5469 7910.4531,803.2969 Q7910.8438,803.1406 7911.2656,802.7031 Q7911.5313,802.4375 7911.6797,802.3594 Q7911.8281,802.2813 7912.0313,802.2813 Q7912.3594,802.2813 7912.6172,802.5391 Q7912.875,802.7969 7912.875,803.1406 Q7912.875,803.4844 7912.5313,803.8906 Q7912.0313,804.4688 7911.2344,804.7969 Q7910.1563,805.25 7908.8594,805.25 Q7907.3438,805.25 7906.1406,804.625 Q7905.1563,804.125 7904.4688,803.0547 Q7903.7813,801.9844 7903.7813,800.7031 L7903.7813,799.5469 Q7903.7813,798.2188 7904.3984,797.0703 Q7905.0156,795.9219 7906.1094,795.3047 Q7907.2031,794.6875 7908.4375,794.6875 Q7909.1719,794.6875 7909.8203,794.8516 Q7910.4688,795.0156 7911.0156,795.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="25" x="7928.75" y="804.4102">Pool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7795" x2="8055" y1="815.5" y2="815.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="7795" x2="8055" y1="823.5" y2="823.5"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7802" y="831.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="7814" y="838.9189">Pool()</text><ellipse cx="7805" cy="848.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="59" x="7814" y="852.7549">get() : Pool&amp;</text><ellipse cx="7805" cy="862.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="236" x="7814" y="866.5908">getPool() : std::pmr::monotonic_buffer_resource*</text><!--MD5=[e06ce9be9012818333aa649e6c447beb]
class eng.ProjectionInfo--><rect codeLine="236" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="269.375" id="eng.ProjectionInfo" style="stroke:#A80036;stroke-width:1.5;" width="509" x="3530.5" y="1037"/><ellipse cx="3743.25" cy="1053" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3746.0156,1048.875 Q3746.1719,1048.6563 3746.3594,1048.5469 Q3746.5469,1048.4375 3746.7656,1048.4375 Q3747.1406,1048.4375 3747.375,1048.6953 Q3747.6094,1048.9531 3747.6094,1049.5625 L3747.6094,1051.0156 Q3747.6094,1051.625 3747.375,1051.8906 Q3747.1406,1052.1563 3746.7656,1052.1563 Q3746.4219,1052.1563 3746.2188,1051.9531 Q3746.0156,1051.7656 3745.9063,1051.25 Q3745.8594,1050.8906 3745.6719,1050.7031 Q3745.3438,1050.3281 3744.7344,1050.1094 Q3744.125,1049.8906 3743.5,1049.8906 Q3742.7344,1049.8906 3742.1016,1050.2188 Q3741.4688,1050.5469 3740.9766,1051.2969 Q3740.4844,1052.0469 3740.4844,1053.0781 L3740.4844,1054.1719 Q3740.4844,1055.4063 3741.375,1056.2266 Q3742.2656,1057.0469 3743.8594,1057.0469 Q3744.7969,1057.0469 3745.4531,1056.7969 Q3745.8438,1056.6406 3746.2656,1056.2031 Q3746.5313,1055.9375 3746.6797,1055.8594 Q3746.8281,1055.7813 3747.0313,1055.7813 Q3747.3594,1055.7813 3747.6172,1056.0391 Q3747.875,1056.2969 3747.875,1056.6406 Q3747.875,1056.9844 3747.5313,1057.3906 Q3747.0313,1057.9688 3746.2344,1058.2969 Q3745.1563,1058.75 3743.8594,1058.75 Q3742.3438,1058.75 3741.1406,1058.125 Q3740.1563,1057.625 3739.4688,1056.5547 Q3738.7813,1055.4844 3738.7813,1054.2031 L3738.7813,1053.0469 Q3738.7813,1051.7188 3739.3984,1050.5703 Q3740.0156,1049.4219 3741.1094,1048.8047 Q3742.2031,1048.1875 3743.4375,1048.1875 Q3744.1719,1048.1875 3744.8203,1048.3516 Q3745.4688,1048.5156 3746.0156,1048.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="75" x="3763.75" y="1057.9102">ProjectionInfo</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3531.5" x2="4038.5" y1="1069" y2="1069"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1077"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="3550.5" y="1084.4189">aspectRatio_ : AspectRatio</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1090.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="3550.5" y="1098.2549">farPlaneDistance_ : Depth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1104.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="3550.5" y="1112.0908">nearPlaneDistance_ : Depth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1118.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="3550.5" y="1125.9268">screenHeight_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1132.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="3550.5" y="1139.7627">screenWidth_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1146.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="3550.5" y="1153.5986">projectionMatrix_ : glm::mat4</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1160.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="288" x="3550.5" y="1167.4346">defaultFieldOfViewAngle_ : static constexpr const Degrees</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1173.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="271" x="3550.5" y="1181.2705">defaultFarPlaneDistance_ : static constexpr const Depth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3538.5" y="1187.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="278" x="3550.5" y="1195.1064">defaultNearPlaneDistance_ : static constexpr const Depth</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3531.5" x2="4038.5" y1="1201.5234" y2="1201.5234"/><ellipse cx="3541.5" cy="1212.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="3550.5" y="1216.9424">ProjectionInfo(Pixels width, Pixels height, Depth near, Depth far, Degrees fov)</text><ellipse cx="3541.5" cy="1226.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="483" x="3550.5" y="1230.7783">ProjectionInfo(Pixels width, Pixels height, bool dummy, Distance frustrumSize, Depth near, Depth far)</text><ellipse cx="3541.5" cy="1240.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="3550.5" y="1244.6143">getFarPlaneDistance() : Depth {query}</text><ellipse cx="3541.5" cy="1254.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="3550.5" y="1258.4502">getNearPlaneDistance() : Depth {query}</text><ellipse cx="3541.5" cy="1267.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="3550.5" y="1272.2861">getHeight() : Pixels {query}</text><ellipse cx="3541.5" cy="1281.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="3550.5" y="1286.1221">getWidth() : Pixels {query}</text><ellipse cx="3541.5" cy="1295.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="3550.5" y="1299.958">getProjectionMatrix() : glm::mat4&amp; {query}</text><!--MD5=[6a3958d84ed46b4db9626379ea2b3f4f]
class eng.Renderer--><rect codeLine="255" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="227.8672" id="eng.Renderer" style="stroke:#A80036;stroke-width:1.5;" width="276" x="2363" y="714.5"/><ellipse cx="2470.75" cy="730.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2473.5156,726.375 Q2473.6719,726.1563 2473.8594,726.0469 Q2474.0469,725.9375 2474.2656,725.9375 Q2474.6406,725.9375 2474.875,726.1953 Q2475.1094,726.4531 2475.1094,727.0625 L2475.1094,728.5156 Q2475.1094,729.125 2474.875,729.3906 Q2474.6406,729.6563 2474.2656,729.6563 Q2473.9219,729.6563 2473.7188,729.4531 Q2473.5156,729.2656 2473.4063,728.75 Q2473.3594,728.3906 2473.1719,728.2031 Q2472.8438,727.8281 2472.2344,727.6094 Q2471.625,727.3906 2471,727.3906 Q2470.2344,727.3906 2469.6016,727.7188 Q2468.9688,728.0469 2468.4766,728.7969 Q2467.9844,729.5469 2467.9844,730.5781 L2467.9844,731.6719 Q2467.9844,732.9063 2468.875,733.7266 Q2469.7656,734.5469 2471.3594,734.5469 Q2472.2969,734.5469 2472.9531,734.2969 Q2473.3438,734.1406 2473.7656,733.7031 Q2474.0313,733.4375 2474.1797,733.3594 Q2474.3281,733.2813 2474.5313,733.2813 Q2474.8594,733.2813 2475.1172,733.5391 Q2475.375,733.7969 2475.375,734.1406 Q2475.375,734.4844 2475.0313,734.8906 Q2474.5313,735.4688 2473.7344,735.7969 Q2472.6563,736.25 2471.3594,736.25 Q2469.8438,736.25 2468.6406,735.625 Q2467.6563,735.125 2466.9688,734.0547 Q2466.2813,732.9844 2466.2813,731.7031 L2466.2813,730.5469 Q2466.2813,729.2188 2466.8984,728.0703 Q2467.5156,726.9219 2468.6094,726.3047 Q2469.7031,725.6875 2470.9375,725.6875 Q2471.6719,725.6875 2472.3203,725.8516 Q2472.9688,726.0156 2473.5156,726.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="52" x="2491.25" y="735.4102">Renderer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2364" x2="2638" y1="746.5" y2="746.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="754.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="2383" y="761.9189">blendingPipeline_ : BlendingPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="768.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="2383" y="775.7549">blendingSortingPipeline_ : BlendingSortingPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="782.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="2383" y="789.5908">bloomPipeline_ : BloomPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="796.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="2383" y="803.4268">convertingPipeline_ : ConvertingPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="809.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2383" y="817.2627">defaultPipeline_ : DefaultPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="823.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="2383" y="831.0986">deferredShadingPipeline_ : DeferredShadingPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="837.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="2383" y="844.9346">hdrPipeline_ : HDRPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="851.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="2383" y="858.7705">projectionInfo_ : ProjectionInfo</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="865.1875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="2383" y="872.6064">ssaoPipeline_ : SSAOPipeline</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2371" y="879.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="2383" y="886.4424">shadowMappingPipeline_ : ShadowMappingPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2364" x2="2638" y1="892.8594" y2="892.8594"/><ellipse cx="2374" cy="903.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="2383" y="908.2783">Renderer(Pixels width, Pixels height)</text><ellipse cx="2374" cy="917.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="2383" y="922.1143">renderScene(Scene&amp; scene) : PipelineResult</text><ellipse cx="2374" cy="931.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="2383" y="935.9502">getProjectionInfo() : ProjectionInfo&amp;</text><!--MD5=[e075d4245f3f5c26549778150db8b20b]
class eng.SSAOPipeline--><rect codeLine="271" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="200.1953" id="eng.SSAOPipeline" style="stroke:#A80036;stroke-width:1.5;" width="470" x="1017" y="1071.5"/><ellipse cx="1209.25" cy="1087.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1212.0156,1083.375 Q1212.1719,1083.1563 1212.3594,1083.0469 Q1212.5469,1082.9375 1212.7656,1082.9375 Q1213.1406,1082.9375 1213.375,1083.1953 Q1213.6094,1083.4531 1213.6094,1084.0625 L1213.6094,1085.5156 Q1213.6094,1086.125 1213.375,1086.3906 Q1213.1406,1086.6563 1212.7656,1086.6563 Q1212.4219,1086.6563 1212.2188,1086.4531 Q1212.0156,1086.2656 1211.9063,1085.75 Q1211.8594,1085.3906 1211.6719,1085.2031 Q1211.3438,1084.8281 1210.7344,1084.6094 Q1210.125,1084.3906 1209.5,1084.3906 Q1208.7344,1084.3906 1208.1016,1084.7188 Q1207.4688,1085.0469 1206.9766,1085.7969 Q1206.4844,1086.5469 1206.4844,1087.5781 L1206.4844,1088.6719 Q1206.4844,1089.9063 1207.375,1090.7266 Q1208.2656,1091.5469 1209.8594,1091.5469 Q1210.7969,1091.5469 1211.4531,1091.2969 Q1211.8438,1091.1406 1212.2656,1090.7031 Q1212.5313,1090.4375 1212.6797,1090.3594 Q1212.8281,1090.2813 1213.0313,1090.2813 Q1213.3594,1090.2813 1213.6172,1090.5391 Q1213.875,1090.7969 1213.875,1091.1406 Q1213.875,1091.4844 1213.5313,1091.8906 Q1213.0313,1092.4688 1212.2344,1092.7969 Q1211.1563,1093.25 1209.8594,1093.25 Q1208.3438,1093.25 1207.1406,1092.625 Q1206.1563,1092.125 1205.4688,1091.0547 Q1204.7813,1089.9844 1204.7813,1088.7031 L1204.7813,1087.5469 Q1204.7813,1086.2188 1205.3984,1085.0703 Q1206.0156,1083.9219 1207.1094,1083.3047 Q1208.2031,1082.6875 1209.4375,1082.6875 Q1210.1719,1082.6875 1210.8203,1082.8516 Q1211.4688,1083.0156 1212.0156,1083.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="77" x="1229.75" y="1092.4102">SSAOPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1018" x2="1486" y1="1103.5" y2="1103.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1111.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="1037" y="1118.9189">result_ : ColorAndDepthBuffer&lt;Color32, ClampConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1125.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="1037" y="1132.7549">gBuffer_ : ColorAndDepthBuffer&lt;GeometryInfo, DefaultConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1139.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="1037" y="1146.5908">mesh_ : Mesh&lt;SSAOGeometryPassVertexShader, GeometryPassShader&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1153.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="1037" y="1160.4268">blurredOcclusionTexture : Vector2d&lt;float&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1166.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1037" y="1174.2627">occlusionTexture : Vector2d&lt;float&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1180.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="203" x="1037" y="1188.0986">noiseTextureSize : static constexpr size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1194.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="181" x="1037" y="1201.9346">sampleCount : static constexpr size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1208.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1037" y="1215.7705">ssaoKernel : std::vector&lt;glm::vec3&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1025" y="1222.1875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1037" y="1229.6064">ssaoNoise : std::vector&lt;glm::vec3&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1018" x2="1486" y1="1236.0234" y2="1236.0234"/><ellipse cx="1028" cy="1247.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="1037" y="1251.4424">SSAOPipeline(Pixels width, Pixels height)</text><ellipse cx="1028" cy="1260.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="1037" y="1265.2783">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[4c0f0a524f2255e59faac3f2a0bd53e5]
class eng.Scene--><rect codeLine="285" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="297.0469" id="eng.Scene" style="stroke:#A80036;stroke-width:1.5;" width="244" x="6505" y="680"/><ellipse cx="6605.25" cy="696" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6608.0156,691.875 Q6608.1719,691.6563 6608.3594,691.5469 Q6608.5469,691.4375 6608.7656,691.4375 Q6609.1406,691.4375 6609.375,691.6953 Q6609.6094,691.9531 6609.6094,692.5625 L6609.6094,694.0156 Q6609.6094,694.625 6609.375,694.8906 Q6609.1406,695.1563 6608.7656,695.1563 Q6608.4219,695.1563 6608.2188,694.9531 Q6608.0156,694.7656 6607.9063,694.25 Q6607.8594,693.8906 6607.6719,693.7031 Q6607.3438,693.3281 6606.7344,693.1094 Q6606.125,692.8906 6605.5,692.8906 Q6604.7344,692.8906 6604.1016,693.2188 Q6603.4688,693.5469 6602.9766,694.2969 Q6602.4844,695.0469 6602.4844,696.0781 L6602.4844,697.1719 Q6602.4844,698.4063 6603.375,699.2266 Q6604.2656,700.0469 6605.8594,700.0469 Q6606.7969,700.0469 6607.4531,699.7969 Q6607.8438,699.6406 6608.2656,699.2031 Q6608.5313,698.9375 6608.6797,698.8594 Q6608.8281,698.7813 6609.0313,698.7813 Q6609.3594,698.7813 6609.6172,699.0391 Q6609.875,699.2969 6609.875,699.6406 Q6609.875,699.9844 6609.5313,700.3906 Q6609.0313,700.9688 6608.2344,701.2969 Q6607.1563,701.75 6605.8594,701.75 Q6604.3438,701.75 6603.1406,701.125 Q6602.1563,700.625 6601.4688,699.5547 Q6600.7813,698.4844 6600.7813,697.2031 L6600.7813,696.0469 Q6600.7813,694.7188 6601.3984,693.5703 Q6602.0156,692.4219 6603.1094,691.8047 Q6604.2031,691.1875 6605.4375,691.1875 Q6606.1719,691.1875 6606.8203,691.3516 Q6607.4688,691.5156 6608.0156,691.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="35" x="6625.75" y="700.9102">Scene</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6506" x2="6748" y1="712" y2="712"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6513" y="720"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="6525" y="727.4189">camera_ : Camera</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6513" y="733.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="6525" y="741.2549">pointLights_ : LightsVec</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6513" y="747.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="6525" y="755.0908">objects_ : ObjectsVec</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6513" y="761.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="6525" y="768.9268">name_ : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6513" y="775.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="6525" y="782.7627">pipeline_ : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6506" x2="6748" y1="789.1797" y2="789.1797"/><ellipse cx="6516" cy="800.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="6525" y="804.5986">Scene()</text><ellipse cx="6516" cy="814.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="6525" y="818.4346">Scene(const std::string&amp; name)</text><ellipse cx="6516" cy="827.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="6525" y="832.2705">getCamera() : Camera&amp; {query}</text><ellipse cx="6516" cy="841.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="6525" y="846.1064">getCamera() : Camera&amp;</text><ellipse cx="6516" cy="855.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="6525" y="859.9424">getPointLights() : LightsVec&amp; {query}</text><ellipse cx="6516" cy="869.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="6525" y="873.7783">getPointLights() : LightsVec&amp;</text><ellipse cx="6516" cy="883.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="6525" y="887.6143">getAllObjects() : ObjectsVec&amp; {query}</text><ellipse cx="6516" cy="897.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="6525" y="901.4502">getAllObjects() : ObjectsVec&amp;</text><ellipse cx="6516" cy="910.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="6525" y="915.2861">getName() : std::string&amp; {query}</text><ellipse cx="6516" cy="924.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="6525" y="929.1221">getName() : std::string&amp;</text><ellipse cx="6516" cy="938.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="6525" y="942.958">getPipeline() : std::string&amp; {query}</text><ellipse cx="6516" cy="952.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="6525" y="956.7939">getPipeline() : std::string&amp;</text><ellipse cx="6516" cy="966.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="6525" y="970.6299">addObject(std::string name, const T&amp; t) : void</text><!--MD5=[87236bda96edfc1e501eeed9779bfddd]
class eng.ShadowMappingPipeline--><rect codeLine="306" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="117.1797" id="eng.ShadowMappingPipeline" style="stroke:#A80036;stroke-width:1.5;" width="500" x="2504" y="1113"/><ellipse cx="2681.25" cy="1129" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2684.0156,1124.875 Q2684.1719,1124.6563 2684.3594,1124.5469 Q2684.5469,1124.4375 2684.7656,1124.4375 Q2685.1406,1124.4375 2685.375,1124.6953 Q2685.6094,1124.9531 2685.6094,1125.5625 L2685.6094,1127.0156 Q2685.6094,1127.625 2685.375,1127.8906 Q2685.1406,1128.1563 2684.7656,1128.1563 Q2684.4219,1128.1563 2684.2188,1127.9531 Q2684.0156,1127.7656 2683.9063,1127.25 Q2683.8594,1126.8906 2683.6719,1126.7031 Q2683.3438,1126.3281 2682.7344,1126.1094 Q2682.125,1125.8906 2681.5,1125.8906 Q2680.7344,1125.8906 2680.1016,1126.2188 Q2679.4688,1126.5469 2678.9766,1127.2969 Q2678.4844,1128.0469 2678.4844,1129.0781 L2678.4844,1130.1719 Q2678.4844,1131.4063 2679.375,1132.2266 Q2680.2656,1133.0469 2681.8594,1133.0469 Q2682.7969,1133.0469 2683.4531,1132.7969 Q2683.8438,1132.6406 2684.2656,1132.2031 Q2684.5313,1131.9375 2684.6797,1131.8594 Q2684.8281,1131.7813 2685.0313,1131.7813 Q2685.3594,1131.7813 2685.6172,1132.0391 Q2685.875,1132.2969 2685.875,1132.6406 Q2685.875,1132.9844 2685.5313,1133.3906 Q2685.0313,1133.9688 2684.2344,1134.2969 Q2683.1563,1134.75 2681.8594,1134.75 Q2680.3438,1134.75 2679.1406,1134.125 Q2678.1563,1133.625 2677.4688,1132.5547 Q2676.7813,1131.4844 2676.7813,1130.2031 L2676.7813,1129.0469 Q2676.7813,1127.7188 2677.3984,1126.5703 Q2678.0156,1125.4219 2679.1094,1124.8047 Q2680.2031,1124.1875 2681.4375,1124.1875 Q2682.1719,1124.1875 2682.8203,1124.3516 Q2683.4688,1124.5156 2684.0156,1124.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="137" x="2701.75" y="1133.9102">ShadowMappingPipeline</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2505" x2="3003" y1="1145" y2="1145"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2512" y="1153"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="2524" y="1160.4189">result_ : ColorAndDepthBuffer&lt;Color32, ClampConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2512" y="1166.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="457" x="2524" y="1174.2549">depthMapBuffer_ : ColorAndDepthBuffer&lt;Color32, DefaultConversion, NoBlending, NoDiscard&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2512" y="1180.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2524" y="1188.0908">mesh_ : FlatMesh</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2505" x2="3003" y1="1194.5078" y2="1194.5078"/><ellipse cx="2515" cy="1205.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="474" x="2524" y="1209.9268">ShadowMappingPipeline(Pixels width, Pixels height, Pixels depthMapWidth, Pixels depthMapHeight)</text><ellipse cx="2515" cy="1219.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="2524" y="1223.7627">renderScene(Scene&amp; scene, ProjectionInfo&amp; projectionInfo) : PipelineResult</text><!--MD5=[cb99a1714b5885d91fb281cbd0ae2ad5]
class eng.Vector2d--><rect codeLine="314" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="214.0313" id="eng.Vector2d" style="stroke:#A80036;stroke-width:1.5;" width="279" x="6764.5" y="2076.5"/><ellipse cx="6810.25" cy="2092.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6813.0156,2088.375 Q6813.1719,2088.1563 6813.3594,2088.0469 Q6813.5469,2087.9375 6813.7656,2087.9375 Q6814.1406,2087.9375 6814.375,2088.1953 Q6814.6094,2088.4531 6814.6094,2089.0625 L6814.6094,2090.5156 Q6814.6094,2091.125 6814.375,2091.3906 Q6814.1406,2091.6563 6813.7656,2091.6563 Q6813.4219,2091.6563 6813.2188,2091.4531 Q6813.0156,2091.2656 6812.9063,2090.75 Q6812.8594,2090.3906 6812.6719,2090.2031 Q6812.3438,2089.8281 6811.7344,2089.6094 Q6811.125,2089.3906 6810.5,2089.3906 Q6809.7344,2089.3906 6809.1016,2089.7188 Q6808.4688,2090.0469 6807.9766,2090.7969 Q6807.4844,2091.5469 6807.4844,2092.5781 L6807.4844,2093.6719 Q6807.4844,2094.9063 6808.375,2095.7266 Q6809.2656,2096.5469 6810.8594,2096.5469 Q6811.7969,2096.5469 6812.4531,2096.2969 Q6812.8438,2096.1406 6813.2656,2095.7031 Q6813.5313,2095.4375 6813.6797,2095.3594 Q6813.8281,2095.2813 6814.0313,2095.2813 Q6814.3594,2095.2813 6814.6172,2095.5391 Q6814.875,2095.7969 6814.875,2096.1406 Q6814.875,2096.4844 6814.5313,2096.8906 Q6814.0313,2097.4688 6813.2344,2097.7969 Q6812.1563,2098.25 6810.8594,2098.25 Q6809.3438,2098.25 6808.1406,2097.625 Q6807.1563,2097.125 6806.4688,2096.0547 Q6805.7813,2094.9844 6805.7813,2093.7031 L6805.7813,2092.5469 Q6805.7813,2091.2188 6806.3984,2090.0703 Q6807.0156,2088.9219 6808.1094,2088.3047 Q6809.2031,2087.6875 6810.4375,2087.6875 Q6811.1719,2087.6875 6811.8203,2087.8516 Q6812.4688,2088.0156 6813.0156,2088.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="6830.75" y="2097.4102">Vector2d</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="129" x="6917.5" y="2073.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="127" x="6918.5" y="2086.957">template&lt;typename T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6765.5" x2="7042.5" y1="2108.5" y2="2108.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6772.5" y="2116.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="6784.5" y="2123.9189">matrixHeight_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6772.5" y="2130.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="6784.5" y="2137.7549">matrixWidth_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6772.5" y="2144.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="6784.5" y="2151.5908">vector_ : std::pmr::vector&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6765.5" x2="7042.5" y1="2158.0078" y2="2158.0078"/><ellipse cx="6775.5" cy="2169.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="6784.5" y="2173.4268">Vector2d(size_t width, size_t height, const T&amp; elem)</text><ellipse cx="6775.5" cy="2182.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="6784.5" y="2187.2627">get(size_t x, size_t y) : T&amp; {query}</text><ellipse cx="6775.5" cy="2196.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="6784.5" y="2201.0986">get(size_t i) : T&amp;</text><ellipse cx="6775.5" cy="2210.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="6784.5" y="2214.9346">get(size_t i) : T&amp; {query}</text><ellipse cx="6775.5" cy="2224.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="6784.5" y="2228.7705">get_pointer() : T* {query}</text><ellipse cx="6775.5" cy="2238.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="6784.5" y="2242.6064">getHeight() : size_t {query}</text><ellipse cx="6775.5" cy="2252.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="6784.5" y="2256.4424">getWidth() : size_t {query}</text><ellipse cx="6775.5" cy="2265.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="6784.5" y="2270.2783">fill(const T&amp; elem) : void</text><ellipse cx="6775.5" cy="2279.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="6784.5" y="2284.1143">set(size_t x, size_t y, const T&amp; elem) : void</text><!--MD5=[a046321053b48c1cd94a2bfae409ec7b]
class eng.CameraControl::MovementDirection--><rect codeLine="329" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="131.0156" id="eng.CameraControl::MovementDirection" style="stroke:#A80036;stroke-width:1.5;" width="228" x="6237" y="1106"/><ellipse cx="6252" cy="1122" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6250.8594,1122.7969 L6250.8594,1125.2969 L6255.1875,1125.2969 L6255.1875,1124.375 Q6255.1875,1123.7656 6255.4297,1123.5 Q6255.6719,1123.2344 6256.0469,1123.2344 Q6256.4219,1123.2344 6256.6563,1123.5 Q6256.8906,1123.7656 6256.8906,1124.375 L6256.8906,1127 L6248.8906,1127 Q6248.2656,1127 6248.0078,1126.7656 Q6247.75,1126.5313 6247.75,1126.1406 Q6247.75,1125.7656 6248.0156,1125.5313 Q6248.2813,1125.2969 6248.8906,1125.2969 L6249.1563,1125.2969 L6249.1563,1118.6406 L6248.8906,1118.6406 Q6248.2656,1118.6406 6248.0078,1118.4063 Q6247.75,1118.1719 6247.75,1117.7813 Q6247.75,1117.4063 6248.0078,1117.1719 Q6248.2656,1116.9375 6248.8906,1116.9375 L6256.5156,1116.9375 L6256.5156,1119.5313 Q6256.5156,1120.1406 6256.2891,1120.3984 Q6256.0625,1120.6563 6255.6719,1120.6563 Q6255.2969,1120.6563 6255.0625,1120.3984 Q6254.8281,1120.1406 6254.8281,1119.5313 L6254.8281,1118.6406 L6250.8594,1118.6406 L6250.8594,1121.0938 L6252.3438,1121.0938 Q6252.3438,1120.4375 6252.4688,1120.25 Q6252.7344,1119.8438 6253.2031,1119.8438 Q6253.5781,1119.8438 6253.8125,1120.1016 Q6254.0469,1120.3594 6254.0469,1120.9688 L6254.0469,1122.9375 Q6254.0469,1123.4844 6253.9219,1123.6719 Q6253.6563,1124.0625 6253.2031,1124.0625 Q6252.7344,1124.0625 6252.4688,1123.6563 Q6252.3438,1123.4688 6252.3438,1122.7969 L6250.8594,1122.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="196" x="6266" y="1126.9102">CameraControl::MovementDirection</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6238" x2="6464" y1="1138" y2="1138"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="6243" y="1153.4189">Backward</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="6243" y="1167.2549">Down</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="6243" y="1181.0908">Forward</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="19" x="6243" y="1194.9268">Left</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="6243" y="1208.7627">Right</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="13" x="6243" y="1222.5986">Up</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6238" x2="6464" y1="1229.0156" y2="1229.0156"/><!--MD5=[371909d70e18910ca2872e0c41973831]
class eng.AlphaBlending128--><rect codeLine="338" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.AlphaBlending128" style="stroke:#A80036;stroke-width:1.5;" width="296" x="8091" y="797.5"/><ellipse cx="8184.25" cy="813.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8187.0156,809.375 Q8187.1719,809.1563 8187.3594,809.0469 Q8187.5469,808.9375 8187.7656,808.9375 Q8188.1406,808.9375 8188.375,809.1953 Q8188.6094,809.4531 8188.6094,810.0625 L8188.6094,811.5156 Q8188.6094,812.125 8188.375,812.3906 Q8188.1406,812.6563 8187.7656,812.6563 Q8187.4219,812.6563 8187.2188,812.4531 Q8187.0156,812.2656 8186.9063,811.75 Q8186.8594,811.3906 8186.6719,811.2031 Q8186.3438,810.8281 8185.7344,810.6094 Q8185.125,810.3906 8184.5,810.3906 Q8183.7344,810.3906 8183.1016,810.7188 Q8182.4688,811.0469 8181.9766,811.7969 Q8181.4844,812.5469 8181.4844,813.5781 L8181.4844,814.6719 Q8181.4844,815.9063 8182.375,816.7266 Q8183.2656,817.5469 8184.8594,817.5469 Q8185.7969,817.5469 8186.4531,817.2969 Q8186.8438,817.1406 8187.2656,816.7031 Q8187.5313,816.4375 8187.6797,816.3594 Q8187.8281,816.2813 8188.0313,816.2813 Q8188.3594,816.2813 8188.6172,816.5391 Q8188.875,816.7969 8188.875,817.1406 Q8188.875,817.4844 8188.5313,817.8906 Q8188.0313,818.4688 8187.2344,818.7969 Q8186.1563,819.25 8184.8594,819.25 Q8183.3438,819.25 8182.1406,818.625 Q8181.1563,818.125 8180.4688,817.0547 Q8179.7813,815.9844 8179.7813,814.7031 L8179.7813,813.5469 Q8179.7813,812.2188 8180.3984,811.0703 Q8181.0156,809.9219 8182.1094,809.3047 Q8183.2031,808.6875 8184.4375,808.6875 Q8185.1719,808.6875 8185.8203,808.8516 Q8186.4688,809.0156 8187.0156,809.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="8204.75" y="818.4102">AlphaBlending128</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8092" x2="8386" y1="829.5" y2="829.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8092" x2="8386" y1="837.5" y2="837.5"/><ellipse cx="8102" cy="848.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="270" x="8111" y="852.9189">blend(Color128 source, Color128 destination) : Color128</text><!--MD5=[1a6855212da47575260d7e63fb1db5d4]
class eng.AlphaBlending32--><rect codeLine="342" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.AlphaBlending32" style="stroke:#A80036;stroke-width:1.5;" width="278" x="8422" y="797.5"/><ellipse cx="8509.75" cy="813.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8512.5156,809.375 Q8512.6719,809.1563 8512.8594,809.0469 Q8513.0469,808.9375 8513.2656,808.9375 Q8513.6406,808.9375 8513.875,809.1953 Q8514.1094,809.4531 8514.1094,810.0625 L8514.1094,811.5156 Q8514.1094,812.125 8513.875,812.3906 Q8513.6406,812.6563 8513.2656,812.6563 Q8512.9219,812.6563 8512.7188,812.4531 Q8512.5156,812.2656 8512.4063,811.75 Q8512.3594,811.3906 8512.1719,811.2031 Q8511.8438,810.8281 8511.2344,810.6094 Q8510.625,810.3906 8510,810.3906 Q8509.2344,810.3906 8508.6016,810.7188 Q8507.9688,811.0469 8507.4766,811.7969 Q8506.9844,812.5469 8506.9844,813.5781 L8506.9844,814.6719 Q8506.9844,815.9063 8507.875,816.7266 Q8508.7656,817.5469 8510.3594,817.5469 Q8511.2969,817.5469 8511.9531,817.2969 Q8512.3438,817.1406 8512.7656,816.7031 Q8513.0313,816.4375 8513.1797,816.3594 Q8513.3281,816.2813 8513.5313,816.2813 Q8513.8594,816.2813 8514.1172,816.5391 Q8514.375,816.7969 8514.375,817.1406 Q8514.375,817.4844 8514.0313,817.8906 Q8513.5313,818.4688 8512.7344,818.7969 Q8511.6563,819.25 8510.3594,819.25 Q8508.8438,819.25 8507.6406,818.625 Q8506.6563,818.125 8505.9688,817.0547 Q8505.2813,815.9844 8505.2813,814.7031 L8505.2813,813.5469 Q8505.2813,812.2188 8505.8984,811.0703 Q8506.5156,809.9219 8507.6094,809.3047 Q8508.7031,808.6875 8509.9375,808.6875 Q8510.6719,808.6875 8511.3203,808.8516 Q8511.9688,809.0156 8512.5156,809.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="94" x="8530.25" y="818.4102">AlphaBlending32</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8423" x2="8699" y1="829.5" y2="829.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8423" x2="8699" y1="837.5" y2="837.5"/><ellipse cx="8433" cy="848.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="252" x="8442" y="852.9189">blend(Color32 source, Color32 destination) : Color32</text><!--MD5=[09c87684de08a41260526408213ff77a]
class eng.AlphaDiscard128--><rect codeLine="346" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.AlphaDiscard128" style="stroke:#A80036;stroke-width:1.5;" width="169" x="8735.5" y="797.5"/><ellipse cx="8769.4" cy="813.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8772.1656,809.375 Q8772.3219,809.1563 8772.5094,809.0469 Q8772.6969,808.9375 8772.9156,808.9375 Q8773.2906,808.9375 8773.525,809.1953 Q8773.7594,809.4531 8773.7594,810.0625 L8773.7594,811.5156 Q8773.7594,812.125 8773.525,812.3906 Q8773.2906,812.6563 8772.9156,812.6563 Q8772.5719,812.6563 8772.3688,812.4531 Q8772.1656,812.2656 8772.0563,811.75 Q8772.0094,811.3906 8771.8219,811.2031 Q8771.4938,810.8281 8770.8844,810.6094 Q8770.275,810.3906 8769.65,810.3906 Q8768.8844,810.3906 8768.2516,810.7188 Q8767.6188,811.0469 8767.1266,811.7969 Q8766.6344,812.5469 8766.6344,813.5781 L8766.6344,814.6719 Q8766.6344,815.9063 8767.525,816.7266 Q8768.4156,817.5469 8770.0094,817.5469 Q8770.9469,817.5469 8771.6031,817.2969 Q8771.9938,817.1406 8772.4156,816.7031 Q8772.6813,816.4375 8772.8297,816.3594 Q8772.9781,816.2813 8773.1813,816.2813 Q8773.5094,816.2813 8773.7672,816.5391 Q8774.025,816.7969 8774.025,817.1406 Q8774.025,817.4844 8773.6813,817.8906 Q8773.1813,818.4688 8772.3844,818.7969 Q8771.3063,819.25 8770.0094,819.25 Q8768.4938,819.25 8767.2906,818.625 Q8766.3063,818.125 8765.6188,817.0547 Q8764.9313,815.9844 8764.9313,814.7031 L8764.9313,813.5469 Q8764.9313,812.2188 8765.5484,811.0703 Q8766.1656,809.9219 8767.2594,809.3047 Q8768.3531,808.6875 8769.5875,808.6875 Q8770.3219,808.6875 8770.9703,808.8516 Q8771.6188,809.0156 8772.1656,809.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="95" x="8787.6" y="818.4102">AlphaDiscard128</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8736.5" x2="8903.5" y1="829.5" y2="829.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8736.5" x2="8903.5" y1="837.5" y2="837.5"/><ellipse cx="8746.5" cy="848.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="8755.5" y="852.9189">discard(Color128 color) : bool</text><!--MD5=[4ff87eef4ca77c0b0053953808ecd47c]
class eng.AlphaDiscard32--><rect codeLine="350" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.AlphaDiscard32" style="stroke:#A80036;stroke-width:1.5;" width="163" x="8939.5" y="797.5"/><ellipse cx="8973.85" cy="813.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8976.6156,809.375 Q8976.7719,809.1563 8976.9594,809.0469 Q8977.1469,808.9375 8977.3656,808.9375 Q8977.7406,808.9375 8977.975,809.1953 Q8978.2094,809.4531 8978.2094,810.0625 L8978.2094,811.5156 Q8978.2094,812.125 8977.975,812.3906 Q8977.7406,812.6563 8977.3656,812.6563 Q8977.0219,812.6563 8976.8188,812.4531 Q8976.6156,812.2656 8976.5063,811.75 Q8976.4594,811.3906 8976.2719,811.2031 Q8975.9438,810.8281 8975.3344,810.6094 Q8974.725,810.3906 8974.1,810.3906 Q8973.3344,810.3906 8972.7016,810.7188 Q8972.0688,811.0469 8971.5766,811.7969 Q8971.0844,812.5469 8971.0844,813.5781 L8971.0844,814.6719 Q8971.0844,815.9063 8971.975,816.7266 Q8972.8656,817.5469 8974.4594,817.5469 Q8975.3969,817.5469 8976.0531,817.2969 Q8976.4438,817.1406 8976.8656,816.7031 Q8977.1313,816.4375 8977.2797,816.3594 Q8977.4281,816.2813 8977.6313,816.2813 Q8977.9594,816.2813 8978.2172,816.5391 Q8978.475,816.7969 8978.475,817.1406 Q8978.475,817.4844 8978.1313,817.8906 Q8977.6313,818.4688 8976.8344,818.7969 Q8975.7563,819.25 8974.4594,819.25 Q8972.9438,819.25 8971.7406,818.625 Q8970.7563,818.125 8970.0688,817.0547 Q8969.3813,815.9844 8969.3813,814.7031 L8969.3813,813.5469 Q8969.3813,812.2188 8969.9984,811.0703 Q8970.6156,809.9219 8971.7094,809.3047 Q8972.8031,808.6875 8974.0375,808.6875 Q8974.7719,808.6875 8975.4203,808.8516 Q8976.0688,809.0156 8976.6156,809.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="88" x="8992.15" y="818.4102">AlphaDiscard32</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8940.5" x2="9101.5" y1="829.5" y2="829.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8940.5" x2="9101.5" y1="837.5" y2="837.5"/><ellipse cx="8950.5" cy="848.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="8959.5" y="852.9189">discard(Color32 color) : bool</text><!--MD5=[b3167871ba74f7d7105ddaece2338fbf]
class eng.BasicVertexShader--><rect codeLine="354" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="158.6875" id="eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="2589" y="2104"/><ellipse cx="2770.75" cy="2120" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2773.5156,2115.875 Q2773.6719,2115.6563 2773.8594,2115.5469 Q2774.0469,2115.4375 2774.2656,2115.4375 Q2774.6406,2115.4375 2774.875,2115.6953 Q2775.1094,2115.9531 2775.1094,2116.5625 L2775.1094,2118.0156 Q2775.1094,2118.625 2774.875,2118.8906 Q2774.6406,2119.1563 2774.2656,2119.1563 Q2773.9219,2119.1563 2773.7188,2118.9531 Q2773.5156,2118.7656 2773.4063,2118.25 Q2773.3594,2117.8906 2773.1719,2117.7031 Q2772.8438,2117.3281 2772.2344,2117.1094 Q2771.625,2116.8906 2771,2116.8906 Q2770.2344,2116.8906 2769.6016,2117.2188 Q2768.9688,2117.5469 2768.4766,2118.2969 Q2767.9844,2119.0469 2767.9844,2120.0781 L2767.9844,2121.1719 Q2767.9844,2122.4063 2768.875,2123.2266 Q2769.7656,2124.0469 2771.3594,2124.0469 Q2772.2969,2124.0469 2772.9531,2123.7969 Q2773.3438,2123.6406 2773.7656,2123.2031 Q2774.0313,2122.9375 2774.1797,2122.8594 Q2774.3281,2122.7813 2774.5313,2122.7813 Q2774.8594,2122.7813 2775.1172,2123.0391 Q2775.375,2123.2969 2775.375,2123.6406 Q2775.375,2123.9844 2775.0313,2124.3906 Q2774.5313,2124.9688 2773.7344,2125.2969 Q2772.6563,2125.75 2771.3594,2125.75 Q2769.8438,2125.75 2768.6406,2125.125 Q2767.6563,2124.625 2766.9688,2123.5547 Q2766.2813,2122.4844 2766.2813,2121.2031 L2766.2813,2120.0469 Q2766.2813,2118.7188 2766.8984,2117.5703 Q2767.5156,2116.4219 2768.6094,2115.8047 Q2769.7031,2115.1875 2770.9375,2115.1875 Q2771.6719,2115.1875 2772.3203,2115.3516 Q2772.9688,2115.5156 2773.5156,2115.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="104" x="2791.25" y="2124.9102">BasicVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2590" x2="3064" y1="2136" y2="2136"/><ellipse cx="2600" cy="2147" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="2609" y="2151.4189">normalMatrix : glm::mat3</text><ellipse cx="2600" cy="2160.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="2609" y="2165.2549">model : glm::mat4</text><ellipse cx="2600" cy="2174.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="2609" y="2179.0908">projection : glm::mat4</text><ellipse cx="2600" cy="2188.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="2609" y="2192.9268">view : glm::mat4</text><ellipse cx="2600" cy="2202.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="2609" y="2206.7627">vm : glm::mat4</text><ellipse cx="2600" cy="2216.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="2609" y="2220.5986">viewPos : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2590" x2="3064" y1="2227.0156" y2="2227.0156"/><ellipse cx="2600" cy="2238.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="2609" y="2242.4346">run(const WorldSpaceTriangle&amp; tr) : BasicVertexShaderOutput</text><ellipse cx="2600" cy="2251.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="2609" y="2256.2705">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[7d0c231ee2a2cde5cabecb6f186c5311]
class eng.BasicVertexShader::BasicVertexShaderOutput--><rect codeLine="365" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="131.0156" id="eng.BasicVertexShader::BasicVertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="282" x="3133" y="2434"/><ellipse cx="3148" cy="2450" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3150.7656,2445.875 Q3150.9219,2445.6563 3151.1094,2445.5469 Q3151.2969,2445.4375 3151.5156,2445.4375 Q3151.8906,2445.4375 3152.125,2445.6953 Q3152.3594,2445.9531 3152.3594,2446.5625 L3152.3594,2448.0156 Q3152.3594,2448.625 3152.125,2448.8906 Q3151.8906,2449.1563 3151.5156,2449.1563 Q3151.1719,2449.1563 3150.9688,2448.9531 Q3150.7656,2448.7656 3150.6563,2448.25 Q3150.6094,2447.8906 3150.4219,2447.7031 Q3150.0938,2447.3281 3149.4844,2447.1094 Q3148.875,2446.8906 3148.25,2446.8906 Q3147.4844,2446.8906 3146.8516,2447.2188 Q3146.2188,2447.5469 3145.7266,2448.2969 Q3145.2344,2449.0469 3145.2344,2450.0781 L3145.2344,2451.1719 Q3145.2344,2452.4063 3146.125,2453.2266 Q3147.0156,2454.0469 3148.6094,2454.0469 Q3149.5469,2454.0469 3150.2031,2453.7969 Q3150.5938,2453.6406 3151.0156,2453.2031 Q3151.2813,2452.9375 3151.4297,2452.8594 Q3151.5781,2452.7813 3151.7813,2452.7813 Q3152.1094,2452.7813 3152.3672,2453.0391 Q3152.625,2453.2969 3152.625,2453.6406 Q3152.625,2453.9844 3152.2813,2454.3906 Q3151.7813,2454.9688 3150.9844,2455.2969 Q3149.9063,2455.75 3148.6094,2455.75 Q3147.0938,2455.75 3145.8906,2455.125 Q3144.9063,2454.625 3144.2188,2453.5547 Q3143.5313,2452.4844 3143.5313,2451.2031 L3143.5313,2450.0469 Q3143.5313,2448.7188 3144.1484,2447.5703 Q3144.7656,2446.4219 3145.8594,2445.8047 Q3146.9531,2445.1875 3148.1875,2445.1875 Q3148.9219,2445.1875 3149.5703,2445.3516 Q3150.2188,2445.5156 3150.7656,2445.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="250" x="3162" y="2454.9102">BasicVertexShader::BasicVertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3134" x2="3414" y1="2466" y2="2466"/><ellipse cx="3144" cy="2477" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3153" y="2481.4189">v0 : glm::vec3</text><ellipse cx="3144" cy="2490.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3153" y="2495.2549">v1 : glm::vec3</text><ellipse cx="3144" cy="2504.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3153" y="2509.0908">v2 : glm::vec3</text><ellipse cx="3144" cy="2518.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="3153" y="2522.9268">cv0 : glm::vec4</text><ellipse cx="3144" cy="2532.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="3153" y="2536.7627">cv1 : glm::vec4</text><ellipse cx="3144" cy="2546.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="3153" y="2550.5986">cv2 : glm::vec4</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3134" x2="3414" y1="2557.0156" y2="2557.0156"/><!--MD5=[061bb6d0eca5c97872e6b909a39b8534]
class eng.ClampT1--><rect codeLine="374" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.ClampT1" style="stroke:#A80036;stroke-width:1.5;" width="203" x="9137.5" y="797.5"/><ellipse cx="9209.25" cy="813.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9212.0156,809.375 Q9212.1719,809.1563 9212.3594,809.0469 Q9212.5469,808.9375 9212.7656,808.9375 Q9213.1406,808.9375 9213.375,809.1953 Q9213.6094,809.4531 9213.6094,810.0625 L9213.6094,811.5156 Q9213.6094,812.125 9213.375,812.3906 Q9213.1406,812.6563 9212.7656,812.6563 Q9212.4219,812.6563 9212.2188,812.4531 Q9212.0156,812.2656 9211.9063,811.75 Q9211.8594,811.3906 9211.6719,811.2031 Q9211.3438,810.8281 9210.7344,810.6094 Q9210.125,810.3906 9209.5,810.3906 Q9208.7344,810.3906 9208.1016,810.7188 Q9207.4688,811.0469 9206.9766,811.7969 Q9206.4844,812.5469 9206.4844,813.5781 L9206.4844,814.6719 Q9206.4844,815.9063 9207.375,816.7266 Q9208.2656,817.5469 9209.8594,817.5469 Q9210.7969,817.5469 9211.4531,817.2969 Q9211.8438,817.1406 9212.2656,816.7031 Q9212.5313,816.4375 9212.6797,816.3594 Q9212.8281,816.2813 9213.0313,816.2813 Q9213.3594,816.2813 9213.6172,816.5391 Q9213.875,816.7969 9213.875,817.1406 Q9213.875,817.4844 9213.5313,817.8906 Q9213.0313,818.4688 9212.2344,818.7969 Q9211.1563,819.25 9209.8594,819.25 Q9208.3438,819.25 9207.1406,818.625 Q9206.1563,818.125 9205.4688,817.0547 Q9204.7813,815.9844 9204.7813,814.7031 L9204.7813,813.5469 Q9204.7813,812.2188 9205.3984,811.0703 Q9206.0156,809.9219 9207.1094,809.3047 Q9208.2031,808.6875 9209.4375,808.6875 Q9210.1719,808.6875 9210.8203,808.8516 Q9211.4688,809.0156 9212.0156,809.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="51" x="9229.75" y="818.4102">ClampT1</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9138.5" x2="9339.5" y1="829.5" y2="829.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9138.5" x2="9339.5" y1="837.5" y2="837.5"/><ellipse cx="9148.5" cy="848.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="177" x="9157.5" y="852.9189">transform(Color128 color) : Color128</text><!--MD5=[e75a460c613d9638c22ced7ea2636fb3]
class eng.CubemapShader--><rect codeLine="378" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.CubemapShader" style="stroke:#A80036;stroke-width:1.5;" width="434" x="2195" y="2454.5"/><ellipse cx="2360.25" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2363.0156,2466.375 Q2363.1719,2466.1563 2363.3594,2466.0469 Q2363.5469,2465.9375 2363.7656,2465.9375 Q2364.1406,2465.9375 2364.375,2466.1953 Q2364.6094,2466.4531 2364.6094,2467.0625 L2364.6094,2468.5156 Q2364.6094,2469.125 2364.375,2469.3906 Q2364.1406,2469.6563 2363.7656,2469.6563 Q2363.4219,2469.6563 2363.2188,2469.4531 Q2363.0156,2469.2656 2362.9063,2468.75 Q2362.8594,2468.3906 2362.6719,2468.2031 Q2362.3438,2467.8281 2361.7344,2467.6094 Q2361.125,2467.3906 2360.5,2467.3906 Q2359.7344,2467.3906 2359.1016,2467.7188 Q2358.4688,2468.0469 2357.9766,2468.7969 Q2357.4844,2469.5469 2357.4844,2470.5781 L2357.4844,2471.6719 Q2357.4844,2472.9063 2358.375,2473.7266 Q2359.2656,2474.5469 2360.8594,2474.5469 Q2361.7969,2474.5469 2362.4531,2474.2969 Q2362.8438,2474.1406 2363.2656,2473.7031 Q2363.5313,2473.4375 2363.6797,2473.3594 Q2363.8281,2473.2813 2364.0313,2473.2813 Q2364.3594,2473.2813 2364.6172,2473.5391 Q2364.875,2473.7969 2364.875,2474.1406 Q2364.875,2474.4844 2364.5313,2474.8906 Q2364.0313,2475.4688 2363.2344,2475.7969 Q2362.1563,2476.25 2360.8594,2476.25 Q2359.3438,2476.25 2358.1406,2475.625 Q2357.1563,2475.125 2356.4688,2474.0547 Q2355.7813,2472.9844 2355.7813,2471.7031 L2355.7813,2470.5469 Q2355.7813,2469.2188 2356.3984,2468.0703 Q2357.0156,2466.9219 2358.1094,2466.3047 Q2359.2031,2465.6875 2360.4375,2465.6875 Q2361.1719,2465.6875 2361.8203,2465.8516 Q2362.4688,2466.0156 2363.0156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="95" x="2380.75" y="2475.4102">CubemapShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2196" x2="2628" y1="2486.5" y2="2486.5"/><ellipse cx="2206" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="2215" y="2501.9189">vso : EmptyStruct</text><ellipse cx="2206" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="2215" y="2515.7549">uniform : FragmentShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2196" x2="2628" y1="2522.1719" y2="2522.1719"/><ellipse cx="2206" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="2215" y="2537.5908">computePixelColor(OneVariable&lt;glm::vec3&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[d1daf31fb3e69baeb938949a4ed34815]
class eng.CubemapTexture--><rect codeLine="384" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="144.8516" id="eng.CubemapTexture" style="stroke:#A80036;stroke-width:1.5;" width="482" x="6789" y="1099"/><ellipse cx="6978.25" cy="1115" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6981.0156,1110.875 Q6981.1719,1110.6563 6981.3594,1110.5469 Q6981.5469,1110.4375 6981.7656,1110.4375 Q6982.1406,1110.4375 6982.375,1110.6953 Q6982.6094,1110.9531 6982.6094,1111.5625 L6982.6094,1113.0156 Q6982.6094,1113.625 6982.375,1113.8906 Q6982.1406,1114.1563 6981.7656,1114.1563 Q6981.4219,1114.1563 6981.2188,1113.9531 Q6981.0156,1113.7656 6980.9063,1113.25 Q6980.8594,1112.8906 6980.6719,1112.7031 Q6980.3438,1112.3281 6979.7344,1112.1094 Q6979.125,1111.8906 6978.5,1111.8906 Q6977.7344,1111.8906 6977.1016,1112.2188 Q6976.4688,1112.5469 6975.9766,1113.2969 Q6975.4844,1114.0469 6975.4844,1115.0781 L6975.4844,1116.1719 Q6975.4844,1117.4063 6976.375,1118.2266 Q6977.2656,1119.0469 6978.8594,1119.0469 Q6979.7969,1119.0469 6980.4531,1118.7969 Q6980.8438,1118.6406 6981.2656,1118.2031 Q6981.5313,1117.9375 6981.6797,1117.8594 Q6981.8281,1117.7813 6982.0313,1117.7813 Q6982.3594,1117.7813 6982.6172,1118.0391 Q6982.875,1118.2969 6982.875,1118.6406 Q6982.875,1118.9844 6982.5313,1119.3906 Q6982.0313,1119.9688 6981.2344,1120.2969 Q6980.1563,1120.75 6978.8594,1120.75 Q6977.3438,1120.75 6976.1406,1120.125 Q6975.1563,1119.625 6974.4688,1118.5547 Q6973.7813,1117.4844 6973.7813,1116.2031 L6973.7813,1115.0469 Q6973.7813,1113.7188 6974.3984,1112.5703 Q6975.0156,1111.4219 6976.1094,1110.8047 Q6977.2031,1110.1875 6978.4375,1110.1875 Q6979.1719,1110.1875 6979.8203,1110.3516 Q6980.4688,1110.5156 6981.0156,1110.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="95" x="6998.75" y="1119.9102">CubemapTexture</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6790" x2="7270" y1="1131" y2="1131"/><ellipse cx="6800" cy="1142" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="6809" y="1146.4189">textures : array&lt;Texture, 6&gt;</text><ellipse cx="6800" cy="1155.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="6809" y="1160.2549">defaultFormat : bool</text><ellipse cx="6800" cy="1169.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="6809" y="1174.0908">fileName : std::string</text><ellipse cx="6800" cy="1183.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="6809" y="1187.9268">imageFormat : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6790" x2="7270" y1="1194.3438" y2="1194.3438"/><ellipse cx="6800" cy="1205.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="6809" y="1209.7627">CubemapTexture()</text><ellipse cx="6800" cy="1219.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="456" x="6809" y="1223.5986">CubemapTexture(const std::string&amp; folder, bool defaultFormat, const std::string&amp; imageFormat)</text><ellipse cx="6800" cy="1233.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="6809" y="1237.4346">sample(glm::vec3 direction) : Color128 {query}</text><!--MD5=[b055320382b3e0b9bdc235136e72d76c]
class eng.CubemapVertexShader--><rect codeLine="394" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.CubemapVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="2076" y="1608.5"/><ellipse cx="2245.75" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2248.5156,1620.375 Q2248.6719,1620.1563 2248.8594,1620.0469 Q2249.0469,1619.9375 2249.2656,1619.9375 Q2249.6406,1619.9375 2249.875,1620.1953 Q2250.1094,1620.4531 2250.1094,1621.0625 L2250.1094,1622.5156 Q2250.1094,1623.125 2249.875,1623.3906 Q2249.6406,1623.6563 2249.2656,1623.6563 Q2248.9219,1623.6563 2248.7188,1623.4531 Q2248.5156,1623.2656 2248.4063,1622.75 Q2248.3594,1622.3906 2248.1719,1622.2031 Q2247.8438,1621.8281 2247.2344,1621.6094 Q2246.625,1621.3906 2246,1621.3906 Q2245.2344,1621.3906 2244.6016,1621.7188 Q2243.9688,1622.0469 2243.4766,1622.7969 Q2242.9844,1623.5469 2242.9844,1624.5781 L2242.9844,1625.6719 Q2242.9844,1626.9063 2243.875,1627.7266 Q2244.7656,1628.5469 2246.3594,1628.5469 Q2247.2969,1628.5469 2247.9531,1628.2969 Q2248.3438,1628.1406 2248.7656,1627.7031 Q2249.0313,1627.4375 2249.1797,1627.3594 Q2249.3281,1627.2813 2249.5313,1627.2813 Q2249.8594,1627.2813 2250.1172,1627.5391 Q2250.375,1627.7969 2250.375,1628.1406 Q2250.375,1628.4844 2250.0313,1628.8906 Q2249.5313,1629.4688 2248.7344,1629.7969 Q2247.6563,1630.25 2246.3594,1630.25 Q2244.8438,1630.25 2243.6406,1629.625 Q2242.6563,1629.125 2241.9688,1628.0547 Q2241.2813,1626.9844 2241.2813,1625.7031 L2241.2813,1624.5469 Q2241.2813,1623.2188 2241.8984,1622.0703 Q2242.5156,1620.9219 2243.6094,1620.3047 Q2244.7031,1619.6875 2245.9375,1619.6875 Q2246.6719,1619.6875 2247.3203,1619.8516 Q2247.9688,1620.0156 2248.5156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="128" x="2266.25" y="1629.4102">CubemapVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2077" x2="2551" y1="1640.5" y2="1640.5"/><ellipse cx="2087" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="2096" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="2087" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="2096" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2077" x2="2551" y1="1676.1719" y2="1676.1719"/><ellipse cx="2087" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="2096" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="2087" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="2096" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[8bc39a5e0eacbdcb1dadb967ddc2f0cd]
class eng.CubemapVertexShader::Output--><rect codeLine="401" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.CubemapVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="289" x="2264.5" y="2145.5"/><ellipse cx="2319.75" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2322.5156,2157.375 Q2322.6719,2157.1563 2322.8594,2157.0469 Q2323.0469,2156.9375 2323.2656,2156.9375 Q2323.6406,2156.9375 2323.875,2157.1953 Q2324.1094,2157.4531 2324.1094,2158.0625 L2324.1094,2159.5156 Q2324.1094,2160.125 2323.875,2160.3906 Q2323.6406,2160.6563 2323.2656,2160.6563 Q2322.9219,2160.6563 2322.7188,2160.4531 Q2322.5156,2160.2656 2322.4063,2159.75 Q2322.3594,2159.3906 2322.1719,2159.2031 Q2321.8438,2158.8281 2321.2344,2158.6094 Q2320.625,2158.3906 2320,2158.3906 Q2319.2344,2158.3906 2318.6016,2158.7188 Q2317.9688,2159.0469 2317.4766,2159.7969 Q2316.9844,2160.5469 2316.9844,2161.5781 L2316.9844,2162.6719 Q2316.9844,2163.9063 2317.875,2164.7266 Q2318.7656,2165.5469 2320.3594,2165.5469 Q2321.2969,2165.5469 2321.9531,2165.2969 Q2322.3438,2165.1406 2322.7656,2164.7031 Q2323.0313,2164.4375 2323.1797,2164.3594 Q2323.3281,2164.2813 2323.5313,2164.2813 Q2323.8594,2164.2813 2324.1172,2164.5391 Q2324.375,2164.7969 2324.375,2165.1406 Q2324.375,2165.4844 2324.0313,2165.8906 Q2323.5313,2166.4688 2322.7344,2166.7969 Q2321.6563,2167.25 2320.3594,2167.25 Q2318.8438,2167.25 2317.6406,2166.625 Q2316.6563,2166.125 2315.9688,2165.0547 Q2315.2813,2163.9844 2315.2813,2162.7031 L2315.2813,2161.5469 Q2315.2813,2160.2188 2315.8984,2159.0703 Q2316.5156,2157.9219 2317.6094,2157.3047 Q2318.7031,2156.6875 2319.9375,2156.6875 Q2320.6719,2156.6875 2321.3203,2156.8516 Q2321.9688,2157.0156 2322.5156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="170" x="2340.25" y="2166.4102">CubemapVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2265.5" x2="2552.5" y1="2177.5" y2="2177.5"/><ellipse cx="2275.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="2284.5" y="2192.9189">uniformOutput : CubemapShader::VertexShaderOutput</text><ellipse cx="2275.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="2284.5" y="2206.7549">triangle : Triangle&lt;CubemapShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2265.5" x2="2552.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[ebbdcd2b6d90535c2a88107af3f41db4]
class eng.EmptyStruct--><rect codeLine="406" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="48" id="eng.EmptyStruct" style="stroke:#A80036;stroke-width:1.5;" width="97" x="2502.5" y="2680.5"/><ellipse cx="2517.5" cy="2696.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2520.2656,2692.375 Q2520.4219,2692.1563 2520.6094,2692.0469 Q2520.7969,2691.9375 2521.0156,2691.9375 Q2521.3906,2691.9375 2521.625,2692.1953 Q2521.8594,2692.4531 2521.8594,2693.0625 L2521.8594,2694.5156 Q2521.8594,2695.125 2521.625,2695.3906 Q2521.3906,2695.6563 2521.0156,2695.6563 Q2520.6719,2695.6563 2520.4688,2695.4531 Q2520.2656,2695.2656 2520.1563,2694.75 Q2520.1094,2694.3906 2519.9219,2694.2031 Q2519.5938,2693.8281 2518.9844,2693.6094 Q2518.375,2693.3906 2517.75,2693.3906 Q2516.9844,2693.3906 2516.3516,2693.7188 Q2515.7188,2694.0469 2515.2266,2694.7969 Q2514.7344,2695.5469 2514.7344,2696.5781 L2514.7344,2697.6719 Q2514.7344,2698.9063 2515.625,2699.7266 Q2516.5156,2700.5469 2518.1094,2700.5469 Q2519.0469,2700.5469 2519.7031,2700.2969 Q2520.0938,2700.1406 2520.5156,2699.7031 Q2520.7813,2699.4375 2520.9297,2699.3594 Q2521.0781,2699.2813 2521.2813,2699.2813 Q2521.6094,2699.2813 2521.8672,2699.5391 Q2522.125,2699.7969 2522.125,2700.1406 Q2522.125,2700.4844 2521.7813,2700.8906 Q2521.2813,2701.4688 2520.4844,2701.7969 Q2519.4063,2702.25 2518.1094,2702.25 Q2516.5938,2702.25 2515.3906,2701.625 Q2514.4063,2701.125 2513.7188,2700.0547 Q2513.0313,2698.9844 2513.0313,2697.7031 L2513.0313,2696.5469 Q2513.0313,2695.2188 2513.6484,2694.0703 Q2514.2656,2692.9219 2515.3594,2692.3047 Q2516.4531,2691.6875 2517.6875,2691.6875 Q2518.4219,2691.6875 2519.0703,2691.8516 Q2519.7188,2692.0156 2520.2656,2692.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="65" x="2531.5" y="2701.4102">EmptyStruct</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2503.5" x2="2598.5" y1="2712.5" y2="2712.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2503.5" x2="2598.5" y1="2720.5" y2="2720.5"/><!--MD5=[e928a2ddab772c6b470b1ec654605096]
class eng.Face--><rect codeLine="409" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="172.5234" id="eng.Face" style="stroke:#A80036;stroke-width:1.5;" width="75" x="6531.5" y="2413"/><ellipse cx="6553.7" cy="2429" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6556.4656,2424.875 Q6556.6219,2424.6563 6556.8094,2424.5469 Q6556.9969,2424.4375 6557.2156,2424.4375 Q6557.5906,2424.4375 6557.825,2424.6953 Q6558.0594,2424.9531 6558.0594,2425.5625 L6558.0594,2427.0156 Q6558.0594,2427.625 6557.825,2427.8906 Q6557.5906,2428.1563 6557.2156,2428.1563 Q6556.8719,2428.1563 6556.6688,2427.9531 Q6556.4656,2427.7656 6556.3563,2427.25 Q6556.3094,2426.8906 6556.1219,2426.7031 Q6555.7938,2426.3281 6555.1844,2426.1094 Q6554.575,2425.8906 6553.95,2425.8906 Q6553.1844,2425.8906 6552.5516,2426.2188 Q6551.9188,2426.5469 6551.4266,2427.2969 Q6550.9344,2428.0469 6550.9344,2429.0781 L6550.9344,2430.1719 Q6550.9344,2431.4063 6551.825,2432.2266 Q6552.7156,2433.0469 6554.3094,2433.0469 Q6555.2469,2433.0469 6555.9031,2432.7969 Q6556.2938,2432.6406 6556.7156,2432.2031 Q6556.9813,2431.9375 6557.1297,2431.8594 Q6557.2781,2431.7813 6557.4813,2431.7813 Q6557.8094,2431.7813 6558.0672,2432.0391 Q6558.325,2432.2969 6558.325,2432.6406 Q6558.325,2432.9844 6557.9813,2433.3906 Q6557.4813,2433.9688 6556.6844,2434.2969 Q6555.6063,2434.75 6554.3094,2434.75 Q6552.7938,2434.75 6551.5906,2434.125 Q6550.6063,2433.625 6549.9188,2432.5547 Q6549.2313,2431.4844 6549.2313,2430.2031 L6549.2313,2429.0469 Q6549.2313,2427.7188 6549.8484,2426.5703 Q6550.4656,2425.4219 6551.5594,2424.8047 Q6552.6531,2424.1875 6553.8875,2424.1875 Q6554.6219,2424.1875 6555.2703,2424.3516 Q6555.9188,2424.5156 6556.4656,2424.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="27" x="6569.3" y="2433.9102">Face</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6532.5" x2="6605.5" y1="2445" y2="2445"/><ellipse cx="6542.5" cy="2456" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="6551.5" y="2460.4189">i : size_t</text><ellipse cx="6542.5" cy="2469.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="6551.5" y="2474.2549">j : size_t</text><ellipse cx="6542.5" cy="2483.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="6551.5" y="2488.0908">k : size_t</text><ellipse cx="6542.5" cy="2497.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="6551.5" y="2501.9268">ni : size_t</text><ellipse cx="6542.5" cy="2511.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="6551.5" y="2515.7627">nj : size_t</text><ellipse cx="6542.5" cy="2525.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="6551.5" y="2529.5986">nk : size_t</text><ellipse cx="6542.5" cy="2539.0156" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="6551.5" y="2543.4346">ti : size_t</text><ellipse cx="6542.5" cy="2552.8516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="6551.5" y="2557.2705">tj : size_t</text><ellipse cx="6542.5" cy="2566.6875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="6551.5" y="2571.1064">tk : size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6532.5" x2="6605.5" y1="2577.5234" y2="2577.5234"/><!--MD5=[6873465f4f61e87ec07e15f89e2dfe00]
class eng.FlatShader--><rect codeLine="421" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.FlatShader" style="stroke:#A80036;stroke-width:1.5;" width="372" x="1788" y="2454.5"/><ellipse cx="1939.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1942.5156,2466.375 Q1942.6719,2466.1563 1942.8594,2466.0469 Q1943.0469,2465.9375 1943.2656,2465.9375 Q1943.6406,2465.9375 1943.875,2466.1953 Q1944.1094,2466.4531 1944.1094,2467.0625 L1944.1094,2468.5156 Q1944.1094,2469.125 1943.875,2469.3906 Q1943.6406,2469.6563 1943.2656,2469.6563 Q1942.9219,2469.6563 1942.7188,2469.4531 Q1942.5156,2469.2656 1942.4063,2468.75 Q1942.3594,2468.3906 1942.1719,2468.2031 Q1941.8438,2467.8281 1941.2344,2467.6094 Q1940.625,2467.3906 1940,2467.3906 Q1939.2344,2467.3906 1938.6016,2467.7188 Q1937.9688,2468.0469 1937.4766,2468.7969 Q1936.9844,2469.5469 1936.9844,2470.5781 L1936.9844,2471.6719 Q1936.9844,2472.9063 1937.875,2473.7266 Q1938.7656,2474.5469 1940.3594,2474.5469 Q1941.2969,2474.5469 1941.9531,2474.2969 Q1942.3438,2474.1406 1942.7656,2473.7031 Q1943.0313,2473.4375 1943.1797,2473.3594 Q1943.3281,2473.2813 1943.5313,2473.2813 Q1943.8594,2473.2813 1944.1172,2473.5391 Q1944.375,2473.7969 1944.375,2474.1406 Q1944.375,2474.4844 1944.0313,2474.8906 Q1943.5313,2475.4688 1942.7344,2475.7969 Q1941.6563,2476.25 1940.3594,2476.25 Q1938.8438,2476.25 1937.6406,2475.625 Q1936.6563,2475.125 1935.9688,2474.0547 Q1935.2813,2472.9844 1935.2813,2471.7031 L1935.2813,2470.5469 Q1935.2813,2469.2188 1935.8984,2468.0703 Q1936.5156,2466.9219 1937.6094,2466.3047 Q1938.7031,2465.6875 1939.9375,2465.6875 Q1940.6719,2465.6875 1941.3203,2465.8516 Q1941.9688,2466.0156 1942.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="1960.25" y="2475.4102">FlatShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1789" x2="2159" y1="2486.5" y2="2486.5"/><ellipse cx="1799" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="1808" y="2501.9189">vso : EmptyStruct</text><ellipse cx="1799" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="1808" y="2515.7549">uniform : FragmentShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1789" x2="2159" y1="2522.1719" y2="2522.1719"/><ellipse cx="1799" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="1808" y="2537.5908">computePixelColor(NoVariables var, const LightsVec&amp; lights) : Color128</text><!--MD5=[066410f571f5ea7f535c9e84167beefa]
class eng.FlatVertexShader--><rect codeLine="427" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.FlatVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="1565" y="1608.5"/><ellipse cx="1752.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1755.0156,1620.375 Q1755.1719,1620.1563 1755.3594,1620.0469 Q1755.5469,1619.9375 1755.7656,1619.9375 Q1756.1406,1619.9375 1756.375,1620.1953 Q1756.6094,1620.4531 1756.6094,1621.0625 L1756.6094,1622.5156 Q1756.6094,1623.125 1756.375,1623.3906 Q1756.1406,1623.6563 1755.7656,1623.6563 Q1755.4219,1623.6563 1755.2188,1623.4531 Q1755.0156,1623.2656 1754.9063,1622.75 Q1754.8594,1622.3906 1754.6719,1622.2031 Q1754.3438,1621.8281 1753.7344,1621.6094 Q1753.125,1621.3906 1752.5,1621.3906 Q1751.7344,1621.3906 1751.1016,1621.7188 Q1750.4688,1622.0469 1749.9766,1622.7969 Q1749.4844,1623.5469 1749.4844,1624.5781 L1749.4844,1625.6719 Q1749.4844,1626.9063 1750.375,1627.7266 Q1751.2656,1628.5469 1752.8594,1628.5469 Q1753.7969,1628.5469 1754.4531,1628.2969 Q1754.8438,1628.1406 1755.2656,1627.7031 Q1755.5313,1627.4375 1755.6797,1627.3594 Q1755.8281,1627.2813 1756.0313,1627.2813 Q1756.3594,1627.2813 1756.6172,1627.5391 Q1756.875,1627.7969 1756.875,1628.1406 Q1756.875,1628.4844 1756.5313,1628.8906 Q1756.0313,1629.4688 1755.2344,1629.7969 Q1754.1563,1630.25 1752.8594,1630.25 Q1751.3438,1630.25 1750.1406,1629.625 Q1749.1563,1629.125 1748.4688,1628.0547 Q1747.7813,1626.9844 1747.7813,1625.7031 L1747.7813,1624.5469 Q1747.7813,1623.2188 1748.3984,1622.0703 Q1749.0156,1620.9219 1750.1094,1620.3047 Q1751.2031,1619.6875 1752.4375,1619.6875 Q1753.1719,1619.6875 1753.8203,1619.8516 Q1754.4688,1620.0156 1755.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="93" x="1772.75" y="1629.4102">FlatVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1566" x2="2040" y1="1640.5" y2="1640.5"/><ellipse cx="1576" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1585" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="1576" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1585" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1566" x2="2040" y1="1676.1719" y2="1676.1719"/><ellipse cx="1576" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1585" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="1576" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="1585" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[f86c88d086dde98ccdf09ff34026527f]
class eng.FlatVertexShader::Output--><rect codeLine="434" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.FlatVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="261" x="1843.5" y="2145.5"/><ellipse cx="1902.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1905.0156,2157.375 Q1905.1719,2157.1563 1905.3594,2157.0469 Q1905.5469,2156.9375 1905.7656,2156.9375 Q1906.1406,2156.9375 1906.375,2157.1953 Q1906.6094,2157.4531 1906.6094,2158.0625 L1906.6094,2159.5156 Q1906.6094,2160.125 1906.375,2160.3906 Q1906.1406,2160.6563 1905.7656,2160.6563 Q1905.4219,2160.6563 1905.2188,2160.4531 Q1905.0156,2160.2656 1904.9063,2159.75 Q1904.8594,2159.3906 1904.6719,2159.2031 Q1904.3438,2158.8281 1903.7344,2158.6094 Q1903.125,2158.3906 1902.5,2158.3906 Q1901.7344,2158.3906 1901.1016,2158.7188 Q1900.4688,2159.0469 1899.9766,2159.7969 Q1899.4844,2160.5469 1899.4844,2161.5781 L1899.4844,2162.6719 Q1899.4844,2163.9063 1900.375,2164.7266 Q1901.2656,2165.5469 1902.8594,2165.5469 Q1903.7969,2165.5469 1904.4531,2165.2969 Q1904.8438,2165.1406 1905.2656,2164.7031 Q1905.5313,2164.4375 1905.6797,2164.3594 Q1905.8281,2164.2813 1906.0313,2164.2813 Q1906.3594,2164.2813 1906.6172,2164.5391 Q1906.875,2164.7969 1906.875,2165.1406 Q1906.875,2165.4844 1906.5313,2165.8906 Q1906.0313,2166.4688 1905.2344,2166.7969 Q1904.1563,2167.25 1902.8594,2167.25 Q1901.3438,2167.25 1900.1406,2166.625 Q1899.1563,2166.125 1898.4688,2165.0547 Q1897.7813,2163.9844 1897.7813,2162.7031 L1897.7813,2161.5469 Q1897.7813,2160.2188 1898.3984,2159.0703 Q1899.0156,2157.9219 1900.1094,2157.3047 Q1901.2031,2156.6875 1902.4375,2156.6875 Q1903.1719,2156.6875 1903.8203,2156.8516 Q1904.4688,2157.0156 1905.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="135" x="1922.75" y="2166.4102">FlatVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1844.5" x2="2103.5" y1="2177.5" y2="2177.5"/><ellipse cx="1854.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="1863.5" y="2192.9189">uniformOutput : FlatShader::VertexShaderOutput</text><ellipse cx="1854.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1863.5" y="2206.7549">triangle : Triangle&lt;FlatShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1844.5" x2="2103.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[f12dbe512425be73f98f177413632951]
class eng.FragmentShaderUniform--><rect codeLine="439" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="117.1797" id="eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.5;" width="215" x="2773.5" y="2646"/><ellipse cx="2809.2" cy="2662" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2811.9656,2657.875 Q2812.1219,2657.6563 2812.3094,2657.5469 Q2812.4969,2657.4375 2812.7156,2657.4375 Q2813.0906,2657.4375 2813.325,2657.6953 Q2813.5594,2657.9531 2813.5594,2658.5625 L2813.5594,2660.0156 Q2813.5594,2660.625 2813.325,2660.8906 Q2813.0906,2661.1563 2812.7156,2661.1563 Q2812.3719,2661.1563 2812.1688,2660.9531 Q2811.9656,2660.7656 2811.8563,2660.25 Q2811.8094,2659.8906 2811.6219,2659.7031 Q2811.2938,2659.3281 2810.6844,2659.1094 Q2810.075,2658.8906 2809.45,2658.8906 Q2808.6844,2658.8906 2808.0516,2659.2188 Q2807.4188,2659.5469 2806.9266,2660.2969 Q2806.4344,2661.0469 2806.4344,2662.0781 L2806.4344,2663.1719 Q2806.4344,2664.4063 2807.325,2665.2266 Q2808.2156,2666.0469 2809.8094,2666.0469 Q2810.7469,2666.0469 2811.4031,2665.7969 Q2811.7938,2665.6406 2812.2156,2665.2031 Q2812.4813,2664.9375 2812.6297,2664.8594 Q2812.7781,2664.7813 2812.9813,2664.7813 Q2813.3094,2664.7813 2813.5672,2665.0391 Q2813.825,2665.2969 2813.825,2665.6406 Q2813.825,2665.9844 2813.4813,2666.3906 Q2812.9813,2666.9688 2812.1844,2667.2969 Q2811.1063,2667.75 2809.8094,2667.75 Q2808.2938,2667.75 2807.0906,2667.125 Q2806.1063,2666.625 2805.4188,2665.5547 Q2804.7313,2664.4844 2804.7313,2663.2031 L2804.7313,2662.0469 Q2804.7313,2660.7188 2805.3484,2659.5703 Q2805.9656,2658.4219 2807.0594,2657.8047 Q2808.1531,2657.1875 2809.3875,2657.1875 Q2810.1219,2657.1875 2810.7703,2657.3516 Q2811.4188,2657.5156 2811.9656,2657.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="137" x="2827.8" y="2666.9102">FragmentShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2774.5" x2="2987.5" y1="2678" y2="2678"/><ellipse cx="2784.5" cy="2689" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="2793.5" y="2693.4189">cubemapTexture : CubemapTextureRef</text><ellipse cx="2784.5" cy="2702.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="2793.5" y="2707.2549">diffuseTexture : TextureRef</text><ellipse cx="2784.5" cy="2716.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="2793.5" y="2721.0908">displacementTexture : TextureRef</text><ellipse cx="2784.5" cy="2730.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="2793.5" y="2734.9268">normalTexture : TextureRef</text><ellipse cx="2784.5" cy="2744.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2793.5" y="2748.7627">flatColor : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2774.5" x2="2987.5" y1="2755.1797" y2="2755.1797"/><!--MD5=[c9fbe0ccadf2b7b8750e5aaa85ba96c2]
class eng.GenericBlending--><rect codeLine="447" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericBlending" style="stroke:#A80036;stroke-width:1.5;" width="457" x="7696.5" y="1140.5"/><ellipse cx="7711.5" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7714.2656,1152.375 Q7714.4219,1152.1563 7714.6094,1152.0469 Q7714.7969,1151.9375 7715.0156,1151.9375 Q7715.3906,1151.9375 7715.625,1152.1953 Q7715.8594,1152.4531 7715.8594,1153.0625 L7715.8594,1154.5156 Q7715.8594,1155.125 7715.625,1155.3906 Q7715.3906,1155.6563 7715.0156,1155.6563 Q7714.6719,1155.6563 7714.4688,1155.4531 Q7714.2656,1155.2656 7714.1563,1154.75 Q7714.1094,1154.3906 7713.9219,1154.2031 Q7713.5938,1153.8281 7712.9844,1153.6094 Q7712.375,1153.3906 7711.75,1153.3906 Q7710.9844,1153.3906 7710.3516,1153.7188 Q7709.7188,1154.0469 7709.2266,1154.7969 Q7708.7344,1155.5469 7708.7344,1156.5781 L7708.7344,1157.6719 Q7708.7344,1158.9063 7709.625,1159.7266 Q7710.5156,1160.5469 7712.1094,1160.5469 Q7713.0469,1160.5469 7713.7031,1160.2969 Q7714.0938,1160.1406 7714.5156,1159.7031 Q7714.7813,1159.4375 7714.9297,1159.3594 Q7715.0781,1159.2813 7715.2813,1159.2813 Q7715.6094,1159.2813 7715.8672,1159.5391 Q7716.125,1159.7969 7716.125,1160.1406 Q7716.125,1160.4844 7715.7813,1160.8906 Q7715.2813,1161.4688 7714.4844,1161.7969 Q7713.4063,1162.25 7712.1094,1162.25 Q7710.5938,1162.25 7709.3906,1161.625 Q7708.4063,1161.125 7707.7188,1160.0547 Q7707.0313,1158.9844 7707.0313,1157.7031 L7707.0313,1156.5469 Q7707.0313,1155.2188 7707.6484,1154.0703 Q7708.2656,1152.9219 7709.3594,1152.3047 Q7710.4531,1151.6875 7711.6875,1151.6875 Q7712.4219,1151.6875 7713.0703,1151.8516 Q7713.7188,1152.0156 7714.2656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="92" x="7725.5" y="1161.4102">GenericBlending</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="331" x="7825.5" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="329" x="7826.5" y="1150.957">template&lt;typename Color, typename B128, typename B32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7697.5" x2="8152.5" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="7697.5" x2="8152.5" y1="1180.5" y2="1180.5"/><ellipse cx="7707.5" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="216" x="7716.5" y="1195.9189">blend(Color source, Color destination) : Color</text><!--MD5=[4062b938c644c55d62a307f70a2ab377]
class eng.GenericBlendingColor128,B128,B32--><rect codeLine="451" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericBlendingColor128,B128,B32" style="stroke:#A80036;stroke-width:1.5;" width="471" x="8188.5" y="1140.5"/><ellipse cx="8203.5" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8206.2656,1152.375 Q8206.4219,1152.1563 8206.6094,1152.0469 Q8206.7969,1151.9375 8207.0156,1151.9375 Q8207.3906,1151.9375 8207.625,1152.1953 Q8207.8594,1152.4531 8207.8594,1153.0625 L8207.8594,1154.5156 Q8207.8594,1155.125 8207.625,1155.3906 Q8207.3906,1155.6563 8207.0156,1155.6563 Q8206.6719,1155.6563 8206.4688,1155.4531 Q8206.2656,1155.2656 8206.1563,1154.75 Q8206.1094,1154.3906 8205.9219,1154.2031 Q8205.5938,1153.8281 8204.9844,1153.6094 Q8204.375,1153.3906 8203.75,1153.3906 Q8202.9844,1153.3906 8202.3516,1153.7188 Q8201.7188,1154.0469 8201.2266,1154.7969 Q8200.7344,1155.5469 8200.7344,1156.5781 L8200.7344,1157.6719 Q8200.7344,1158.9063 8201.625,1159.7266 Q8202.5156,1160.5469 8204.1094,1160.5469 Q8205.0469,1160.5469 8205.7031,1160.2969 Q8206.0938,1160.1406 8206.5156,1159.7031 Q8206.7813,1159.4375 8206.9297,1159.3594 Q8207.0781,1159.2813 8207.2813,1159.2813 Q8207.6094,1159.2813 8207.8672,1159.5391 Q8208.125,1159.7969 8208.125,1160.1406 Q8208.125,1160.4844 8207.7813,1160.8906 Q8207.2813,1161.4688 8206.4844,1161.7969 Q8205.4063,1162.25 8204.1094,1162.25 Q8202.5938,1162.25 8201.3906,1161.625 Q8200.4063,1161.125 8199.7188,1160.0547 Q8199.0313,1158.9844 8199.0313,1157.7031 L8199.0313,1156.5469 Q8199.0313,1155.2188 8199.6484,1154.0703 Q8200.2656,1152.9219 8201.3594,1152.3047 Q8202.4531,1151.6875 8203.6875,1151.6875 Q8204.4219,1151.6875 8205.0703,1151.8516 Q8205.7188,1152.0156 8206.2656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="200" x="8217.5" y="1161.4102">GenericBlendingColor128,B128,B32</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="237" x="8425.5" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="235" x="8426.5" y="1150.957">template&lt;typename B128, typename B32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8189.5" x2="8658.5" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8189.5" x2="8658.5" y1="1180.5" y2="1180.5"/><ellipse cx="8199.5" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="270" x="8208.5" y="1195.9189">blend(Color128 source, Color128 destination) : Color128</text><!--MD5=[08838d7a70ac7629ff8b14bd420f6d52]
class eng.GenericBlendingColor32,B128,B32--><rect codeLine="455" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericBlendingColor32,B128,B32" style="stroke:#A80036;stroke-width:1.5;" width="464" x="8695" y="1140.5"/><ellipse cx="8710" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8712.7656,1152.375 Q8712.9219,1152.1563 8713.1094,1152.0469 Q8713.2969,1151.9375 8713.5156,1151.9375 Q8713.8906,1151.9375 8714.125,1152.1953 Q8714.3594,1152.4531 8714.3594,1153.0625 L8714.3594,1154.5156 Q8714.3594,1155.125 8714.125,1155.3906 Q8713.8906,1155.6563 8713.5156,1155.6563 Q8713.1719,1155.6563 8712.9688,1155.4531 Q8712.7656,1155.2656 8712.6563,1154.75 Q8712.6094,1154.3906 8712.4219,1154.2031 Q8712.0938,1153.8281 8711.4844,1153.6094 Q8710.875,1153.3906 8710.25,1153.3906 Q8709.4844,1153.3906 8708.8516,1153.7188 Q8708.2188,1154.0469 8707.7266,1154.7969 Q8707.2344,1155.5469 8707.2344,1156.5781 L8707.2344,1157.6719 Q8707.2344,1158.9063 8708.125,1159.7266 Q8709.0156,1160.5469 8710.6094,1160.5469 Q8711.5469,1160.5469 8712.2031,1160.2969 Q8712.5938,1160.1406 8713.0156,1159.7031 Q8713.2813,1159.4375 8713.4297,1159.3594 Q8713.5781,1159.2813 8713.7813,1159.2813 Q8714.1094,1159.2813 8714.3672,1159.5391 Q8714.625,1159.7969 8714.625,1160.1406 Q8714.625,1160.4844 8714.2813,1160.8906 Q8713.7813,1161.4688 8712.9844,1161.7969 Q8711.9063,1162.25 8710.6094,1162.25 Q8709.0938,1162.25 8707.8906,1161.625 Q8706.9063,1161.125 8706.2188,1160.0547 Q8705.5313,1158.9844 8705.5313,1157.7031 L8705.5313,1156.5469 Q8705.5313,1155.2188 8706.1484,1154.0703 Q8706.7656,1152.9219 8707.8594,1152.3047 Q8708.9531,1151.6875 8710.1875,1151.6875 Q8710.9219,1151.6875 8711.5703,1151.8516 Q8712.2188,1152.0156 8712.7656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="193" x="8724" y="1161.4102">GenericBlendingColor32,B128,B32</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="237" x="8925" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="235" x="8926" y="1150.957">template&lt;typename B128, typename B32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8696" x2="9158" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8696" x2="9158" y1="1180.5" y2="1180.5"/><ellipse cx="8706" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="252" x="8715" y="1195.9189">blend(Color32 source, Color32 destination) : Color32</text><!--MD5=[a6ff2ef1e7f8202efbfd0643c0ae278c]
class eng.GenericDiscard--><rect codeLine="459" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericDiscard" style="stroke:#A80036;stroke-width:1.5;" width="453" x="9194.5" y="1140.5"/><ellipse cx="9209.5" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9212.2656,1152.375 Q9212.4219,1152.1563 9212.6094,1152.0469 Q9212.7969,1151.9375 9213.0156,1151.9375 Q9213.3906,1151.9375 9213.625,1152.1953 Q9213.8594,1152.4531 9213.8594,1153.0625 L9213.8594,1154.5156 Q9213.8594,1155.125 9213.625,1155.3906 Q9213.3906,1155.6563 9213.0156,1155.6563 Q9212.6719,1155.6563 9212.4688,1155.4531 Q9212.2656,1155.2656 9212.1563,1154.75 Q9212.1094,1154.3906 9211.9219,1154.2031 Q9211.5938,1153.8281 9210.9844,1153.6094 Q9210.375,1153.3906 9209.75,1153.3906 Q9208.9844,1153.3906 9208.3516,1153.7188 Q9207.7188,1154.0469 9207.2266,1154.7969 Q9206.7344,1155.5469 9206.7344,1156.5781 L9206.7344,1157.6719 Q9206.7344,1158.9063 9207.625,1159.7266 Q9208.5156,1160.5469 9210.1094,1160.5469 Q9211.0469,1160.5469 9211.7031,1160.2969 Q9212.0938,1160.1406 9212.5156,1159.7031 Q9212.7813,1159.4375 9212.9297,1159.3594 Q9213.0781,1159.2813 9213.2813,1159.2813 Q9213.6094,1159.2813 9213.8672,1159.5391 Q9214.125,1159.7969 9214.125,1160.1406 Q9214.125,1160.4844 9213.7813,1160.8906 Q9213.2813,1161.4688 9212.4844,1161.7969 Q9211.4063,1162.25 9210.1094,1162.25 Q9208.5938,1162.25 9207.3906,1161.625 Q9206.4063,1161.125 9205.7188,1160.0547 Q9205.0313,1158.9844 9205.0313,1157.7031 L9205.0313,1156.5469 Q9205.0313,1155.2188 9205.6484,1154.0703 Q9206.2656,1152.9219 9207.3594,1152.3047 Q9208.4531,1151.6875 9209.6875,1151.6875 Q9210.4219,1151.6875 9211.0703,1151.8516 Q9211.7188,1152.0156 9212.2656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="9223.5" y="1161.4102">GenericDiscard</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="333" x="9317.5" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="331" x="9318.5" y="1150.957">template&lt;typename Color, typename D128, typename D32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9195.5" x2="9646.5" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9195.5" x2="9646.5" y1="1180.5" y2="1180.5"/><ellipse cx="9205.5" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="9214.5" y="1195.9189">discard(Color color) : bool</text><!--MD5=[3377c5808dea04a443f54adabad9acfa]
class eng.GenericDiscardColor128,D128,D32--><rect codeLine="463" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericDiscardColor128,D128,D32" style="stroke:#A80036;stroke-width:1.5;" width="469" x="9682.5" y="1140.5"/><ellipse cx="9697.5" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9700.2656,1152.375 Q9700.4219,1152.1563 9700.6094,1152.0469 Q9700.7969,1151.9375 9701.0156,1151.9375 Q9701.3906,1151.9375 9701.625,1152.1953 Q9701.8594,1152.4531 9701.8594,1153.0625 L9701.8594,1154.5156 Q9701.8594,1155.125 9701.625,1155.3906 Q9701.3906,1155.6563 9701.0156,1155.6563 Q9700.6719,1155.6563 9700.4688,1155.4531 Q9700.2656,1155.2656 9700.1563,1154.75 Q9700.1094,1154.3906 9699.9219,1154.2031 Q9699.5938,1153.8281 9698.9844,1153.6094 Q9698.375,1153.3906 9697.75,1153.3906 Q9696.9844,1153.3906 9696.3516,1153.7188 Q9695.7188,1154.0469 9695.2266,1154.7969 Q9694.7344,1155.5469 9694.7344,1156.5781 L9694.7344,1157.6719 Q9694.7344,1158.9063 9695.625,1159.7266 Q9696.5156,1160.5469 9698.1094,1160.5469 Q9699.0469,1160.5469 9699.7031,1160.2969 Q9700.0938,1160.1406 9700.5156,1159.7031 Q9700.7813,1159.4375 9700.9297,1159.3594 Q9701.0781,1159.2813 9701.2813,1159.2813 Q9701.6094,1159.2813 9701.8672,1159.5391 Q9702.125,1159.7969 9702.125,1160.1406 Q9702.125,1160.4844 9701.7813,1160.8906 Q9701.2813,1161.4688 9700.4844,1161.7969 Q9699.4063,1162.25 9698.1094,1162.25 Q9696.5938,1162.25 9695.3906,1161.625 Q9694.4063,1161.125 9693.7188,1160.0547 Q9693.0313,1158.9844 9693.0313,1157.7031 L9693.0313,1156.5469 Q9693.0313,1155.2188 9693.6484,1154.0703 Q9694.2656,1152.9219 9695.3594,1152.3047 Q9696.4531,1151.6875 9697.6875,1151.6875 Q9698.4219,1151.6875 9699.0703,1151.8516 Q9699.7188,1152.0156 9700.2656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="196" x="9711.5" y="1161.4102">GenericDiscardColor128,D128,D32</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="239" x="9915.5" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="237" x="9916.5" y="1150.957">template&lt;typename D128, typename D32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9683.5" x2="10150.5" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9683.5" x2="10150.5" y1="1180.5" y2="1180.5"/><ellipse cx="9693.5" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="143" x="9702.5" y="1195.9189">discard(Color128 color) : bool</text><!--MD5=[aaa57263a73604a44b33db610b79c2b2]
class eng.GenericDiscardColor32,D128,D32--><rect codeLine="467" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GenericDiscardColor32,D128,D32" style="stroke:#A80036;stroke-width:1.5;" width="462" x="10187" y="1140.5"/><ellipse cx="10202" cy="1156.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10204.7656,1152.375 Q10204.9219,1152.1563 10205.1094,1152.0469 Q10205.2969,1151.9375 10205.5156,1151.9375 Q10205.8906,1151.9375 10206.125,1152.1953 Q10206.3594,1152.4531 10206.3594,1153.0625 L10206.3594,1154.5156 Q10206.3594,1155.125 10206.125,1155.3906 Q10205.8906,1155.6563 10205.5156,1155.6563 Q10205.1719,1155.6563 10204.9688,1155.4531 Q10204.7656,1155.2656 10204.6563,1154.75 Q10204.6094,1154.3906 10204.4219,1154.2031 Q10204.0938,1153.8281 10203.4844,1153.6094 Q10202.875,1153.3906 10202.25,1153.3906 Q10201.4844,1153.3906 10200.8516,1153.7188 Q10200.2188,1154.0469 10199.7266,1154.7969 Q10199.2344,1155.5469 10199.2344,1156.5781 L10199.2344,1157.6719 Q10199.2344,1158.9063 10200.125,1159.7266 Q10201.0156,1160.5469 10202.6094,1160.5469 Q10203.5469,1160.5469 10204.2031,1160.2969 Q10204.5938,1160.1406 10205.0156,1159.7031 Q10205.2813,1159.4375 10205.4297,1159.3594 Q10205.5781,1159.2813 10205.7813,1159.2813 Q10206.1094,1159.2813 10206.3672,1159.5391 Q10206.625,1159.7969 10206.625,1160.1406 Q10206.625,1160.4844 10206.2813,1160.8906 Q10205.7813,1161.4688 10204.9844,1161.7969 Q10203.9063,1162.25 10202.6094,1162.25 Q10201.0938,1162.25 10199.8906,1161.625 Q10198.9063,1161.125 10198.2188,1160.0547 Q10197.5313,1158.9844 10197.5313,1157.7031 L10197.5313,1156.5469 Q10197.5313,1155.2188 10198.1484,1154.0703 Q10198.7656,1152.9219 10199.8594,1152.3047 Q10200.9531,1151.6875 10202.1875,1151.6875 Q10202.9219,1151.6875 10203.5703,1151.8516 Q10204.2188,1152.0156 10204.7656,1152.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="189" x="10216" y="1161.4102">GenericDiscardColor32,D128,D32</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="239" x="10413" y="1137.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="237" x="10414" y="1150.957">template&lt;typename D128, typename D32&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10188" x2="10648" y1="1172.5" y2="1172.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="10188" x2="10648" y1="1180.5" y2="1180.5"/><ellipse cx="10198" cy="1191.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="10207" y="1195.9189">discard(Color32 color) : bool</text><!--MD5=[e715c8f0d67a9edd1e5ea6fd06a56325]
class eng.GeometryInfo--><rect codeLine="471" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.GeometryInfo" style="stroke:#A80036;stroke-width:1.5;" width="140" x="4668" y="1615"/><ellipse cx="4698.75" cy="1631" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4701.5156,1626.875 Q4701.6719,1626.6563 4701.8594,1626.5469 Q4702.0469,1626.4375 4702.2656,1626.4375 Q4702.6406,1626.4375 4702.875,1626.6953 Q4703.1094,1626.9531 4703.1094,1627.5625 L4703.1094,1629.0156 Q4703.1094,1629.625 4702.875,1629.8906 Q4702.6406,1630.1563 4702.2656,1630.1563 Q4701.9219,1630.1563 4701.7188,1629.9531 Q4701.5156,1629.7656 4701.4063,1629.25 Q4701.3594,1628.8906 4701.1719,1628.7031 Q4700.8438,1628.3281 4700.2344,1628.1094 Q4699.625,1627.8906 4699,1627.8906 Q4698.2344,1627.8906 4697.6016,1628.2188 Q4696.9688,1628.5469 4696.4766,1629.2969 Q4695.9844,1630.0469 4695.9844,1631.0781 L4695.9844,1632.1719 Q4695.9844,1633.4063 4696.875,1634.2266 Q4697.7656,1635.0469 4699.3594,1635.0469 Q4700.2969,1635.0469 4700.9531,1634.7969 Q4701.3438,1634.6406 4701.7656,1634.2031 Q4702.0313,1633.9375 4702.1797,1633.8594 Q4702.3281,1633.7813 4702.5313,1633.7813 Q4702.8594,1633.7813 4703.1172,1634.0391 Q4703.375,1634.2969 4703.375,1634.6406 Q4703.375,1634.9844 4703.0313,1635.3906 Q4702.5313,1635.9688 4701.7344,1636.2969 Q4700.6563,1636.75 4699.3594,1636.75 Q4697.8438,1636.75 4696.6406,1636.125 Q4695.6563,1635.625 4694.9688,1634.5547 Q4694.2813,1633.4844 4694.2813,1632.2031 L4694.2813,1631.0469 Q4694.2813,1629.7188 4694.8984,1628.5703 Q4695.5156,1627.4219 4696.6094,1626.8047 Q4697.7031,1626.1875 4698.9375,1626.1875 Q4699.6719,1626.1875 4700.3203,1626.3516 Q4700.9688,1626.5156 4701.5156,1626.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="73" x="4716.25" y="1635.9102">GeometryInfo</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4669" x2="4807" y1="1647" y2="1647"/><ellipse cx="4679" cy="1658" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="4688" y="1662.4189">diffuseColor : glm::vec3</text><ellipse cx="4679" cy="1671.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="4688" y="1676.2549">normal : glm::vec3</text><ellipse cx="4679" cy="1685.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="4688" y="1690.0908">position : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4669" x2="4807" y1="1696.5078" y2="1696.5078"/><!--MD5=[6f15f87ab8e6fbd0a60efc3a0da6b772]
class eng.GeometryPassShader--><rect codeLine="477" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.GeometryPassShader" style="stroke:#A80036;stroke-width:1.5;" width="513" x="5188.5" y="2454.5"/><ellipse cx="5379.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5382.5156,2466.375 Q5382.6719,2466.1563 5382.8594,2466.0469 Q5383.0469,2465.9375 5383.2656,2465.9375 Q5383.6406,2465.9375 5383.875,2466.1953 Q5384.1094,2466.4531 5384.1094,2467.0625 L5384.1094,2468.5156 Q5384.1094,2469.125 5383.875,2469.3906 Q5383.6406,2469.6563 5383.2656,2469.6563 Q5382.9219,2469.6563 5382.7188,2469.4531 Q5382.5156,2469.2656 5382.4063,2468.75 Q5382.3594,2468.3906 5382.1719,2468.2031 Q5381.8438,2467.8281 5381.2344,2467.6094 Q5380.625,2467.3906 5380,2467.3906 Q5379.2344,2467.3906 5378.6016,2467.7188 Q5377.9688,2468.0469 5377.4766,2468.7969 Q5376.9844,2469.5469 5376.9844,2470.5781 L5376.9844,2471.6719 Q5376.9844,2472.9063 5377.875,2473.7266 Q5378.7656,2474.5469 5380.3594,2474.5469 Q5381.2969,2474.5469 5381.9531,2474.2969 Q5382.3438,2474.1406 5382.7656,2473.7031 Q5383.0313,2473.4375 5383.1797,2473.3594 Q5383.3281,2473.2813 5383.5313,2473.2813 Q5383.8594,2473.2813 5384.1172,2473.5391 Q5384.375,2473.7969 5384.375,2474.1406 Q5384.375,2474.4844 5384.0313,2474.8906 Q5383.5313,2475.4688 5382.7344,2475.7969 Q5381.6563,2476.25 5380.3594,2476.25 Q5378.8438,2476.25 5377.6406,2475.625 Q5376.6563,2475.125 5375.9688,2474.0547 Q5375.2813,2472.9844 5375.2813,2471.7031 L5375.2813,2470.5469 Q5375.2813,2469.2188 5375.8984,2468.0703 Q5376.5156,2466.9219 5377.6094,2466.3047 Q5378.7031,2465.6875 5379.9375,2465.6875 Q5380.6719,2465.6875 5381.3203,2465.8516 Q5381.9688,2466.0156 5382.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="122" x="5400.25" y="2475.4102">GeometryPassShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5189.5" x2="5700.5" y1="2486.5" y2="2486.5"/><ellipse cx="5199.5" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="5208.5" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="5199.5" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="5208.5" y="2515.7549">vso : VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5189.5" x2="5700.5" y1="2522.1719" y2="2522.1719"/><ellipse cx="5199.5" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="487" x="5208.5" y="2537.5908">computePixelColor(TwoVariables&lt;glm::vec3, glm::vec2&gt; var, const LightsVec&amp; lights) : GeometryInfo</text><!--MD5=[f1b68cddc9ed0bcc943066094aee9847]
class eng.GeometryPassShader::VertexShaderOutput--><rect codeLine="483" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.GeometryPassShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="269" x="5310.5" y="2673.5"/><ellipse cx="5325.5" cy="2689.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5328.2656,2685.375 Q5328.4219,2685.1563 5328.6094,2685.0469 Q5328.7969,2684.9375 5329.0156,2684.9375 Q5329.3906,2684.9375 5329.625,2685.1953 Q5329.8594,2685.4531 5329.8594,2686.0625 L5329.8594,2687.5156 Q5329.8594,2688.125 5329.625,2688.3906 Q5329.3906,2688.6563 5329.0156,2688.6563 Q5328.6719,2688.6563 5328.4688,2688.4531 Q5328.2656,2688.2656 5328.1563,2687.75 Q5328.1094,2687.3906 5327.9219,2687.2031 Q5327.5938,2686.8281 5326.9844,2686.6094 Q5326.375,2686.3906 5325.75,2686.3906 Q5324.9844,2686.3906 5324.3516,2686.7188 Q5323.7188,2687.0469 5323.2266,2687.7969 Q5322.7344,2688.5469 5322.7344,2689.5781 L5322.7344,2690.6719 Q5322.7344,2691.9063 5323.625,2692.7266 Q5324.5156,2693.5469 5326.1094,2693.5469 Q5327.0469,2693.5469 5327.7031,2693.2969 Q5328.0938,2693.1406 5328.5156,2692.7031 Q5328.7813,2692.4375 5328.9297,2692.3594 Q5329.0781,2692.2813 5329.2813,2692.2813 Q5329.6094,2692.2813 5329.8672,2692.5391 Q5330.125,2692.7969 5330.125,2693.1406 Q5330.125,2693.4844 5329.7813,2693.8906 Q5329.2813,2694.4688 5328.4844,2694.7969 Q5327.4063,2695.25 5326.1094,2695.25 Q5324.5938,2695.25 5323.3906,2694.625 Q5322.4063,2694.125 5321.7188,2693.0547 Q5321.0313,2691.9844 5321.0313,2690.7031 L5321.0313,2689.5469 Q5321.0313,2688.2188 5321.6484,2687.0703 Q5322.2656,2685.9219 5323.3594,2685.3047 Q5324.4531,2684.6875 5325.6875,2684.6875 Q5326.4219,2684.6875 5327.0703,2684.8516 Q5327.7188,2685.0156 5328.2656,2685.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="237" x="5339.5" y="2694.4102">GeometryPassShader::VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5311.5" x2="5578.5" y1="2705.5" y2="2705.5"/><ellipse cx="5321.5" cy="2716.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="5330.5" y="2720.9189">normal : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5311.5" x2="5578.5" y1="2727.3359" y2="2727.3359"/><!--MD5=[31c6822ee7df23b01596f465116d86fa]
class eng.GeometryPassVertexShader--><rect codeLine="487" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.GeometryPassVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="4843" y="1608.5"/><ellipse cx="4999.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5002.0156,1620.375 Q5002.1719,1620.1563 5002.3594,1620.0469 Q5002.5469,1619.9375 5002.7656,1619.9375 Q5003.1406,1619.9375 5003.375,1620.1953 Q5003.6094,1620.4531 5003.6094,1621.0625 L5003.6094,1622.5156 Q5003.6094,1623.125 5003.375,1623.3906 Q5003.1406,1623.6563 5002.7656,1623.6563 Q5002.4219,1623.6563 5002.2188,1623.4531 Q5002.0156,1623.2656 5001.9063,1622.75 Q5001.8594,1622.3906 5001.6719,1622.2031 Q5001.3438,1621.8281 5000.7344,1621.6094 Q5000.125,1621.3906 4999.5,1621.3906 Q4998.7344,1621.3906 4998.1016,1621.7188 Q4997.4688,1622.0469 4996.9766,1622.7969 Q4996.4844,1623.5469 4996.4844,1624.5781 L4996.4844,1625.6719 Q4996.4844,1626.9063 4997.375,1627.7266 Q4998.2656,1628.5469 4999.8594,1628.5469 Q5000.7969,1628.5469 5001.4531,1628.2969 Q5001.8438,1628.1406 5002.2656,1627.7031 Q5002.5313,1627.4375 5002.6797,1627.3594 Q5002.8281,1627.2813 5003.0313,1627.2813 Q5003.3594,1627.2813 5003.6172,1627.5391 Q5003.875,1627.7969 5003.875,1628.1406 Q5003.875,1628.4844 5003.5313,1628.8906 Q5003.0313,1629.4688 5002.2344,1629.7969 Q5001.1563,1630.25 4999.8594,1630.25 Q4998.3438,1630.25 4997.1406,1629.625 Q4996.1563,1629.125 4995.4688,1628.0547 Q4994.7813,1626.9844 4994.7813,1625.7031 L4994.7813,1624.5469 Q4994.7813,1623.2188 4995.3984,1622.0703 Q4996.0156,1620.9219 4997.1094,1620.3047 Q4998.2031,1619.6875 4999.4375,1619.6875 Q5000.1719,1619.6875 5000.8203,1619.8516 Q5001.4688,1620.0156 5002.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="155" x="5019.75" y="1629.4102">GeometryPassVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4844" x2="5318" y1="1640.5" y2="1640.5"/><ellipse cx="4854" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="4863" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="4854" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="4863" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4844" x2="5318" y1="1676.1719" y2="1676.1719"/><ellipse cx="4854" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="4863" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="4854" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="4863" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[c1f9df98868c485a9fc53037da6cd6b7]
class eng.GeometryPassVertexShader::Output--><rect codeLine="494" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.GeometryPassVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="315" x="5105.5" y="2145.5"/><ellipse cx="5160.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5163.0156,2157.375 Q5163.1719,2157.1563 5163.3594,2157.0469 Q5163.5469,2156.9375 5163.7656,2156.9375 Q5164.1406,2156.9375 5164.375,2157.1953 Q5164.6094,2157.4531 5164.6094,2158.0625 L5164.6094,2159.5156 Q5164.6094,2160.125 5164.375,2160.3906 Q5164.1406,2160.6563 5163.7656,2160.6563 Q5163.4219,2160.6563 5163.2188,2160.4531 Q5163.0156,2160.2656 5162.9063,2159.75 Q5162.8594,2159.3906 5162.6719,2159.2031 Q5162.3438,2158.8281 5161.7344,2158.6094 Q5161.125,2158.3906 5160.5,2158.3906 Q5159.7344,2158.3906 5159.1016,2158.7188 Q5158.4688,2159.0469 5157.9766,2159.7969 Q5157.4844,2160.5469 5157.4844,2161.5781 L5157.4844,2162.6719 Q5157.4844,2163.9063 5158.375,2164.7266 Q5159.2656,2165.5469 5160.8594,2165.5469 Q5161.7969,2165.5469 5162.4531,2165.2969 Q5162.8438,2165.1406 5163.2656,2164.7031 Q5163.5313,2164.4375 5163.6797,2164.3594 Q5163.8281,2164.2813 5164.0313,2164.2813 Q5164.3594,2164.2813 5164.6172,2164.5391 Q5164.875,2164.7969 5164.875,2165.1406 Q5164.875,2165.4844 5164.5313,2165.8906 Q5164.0313,2166.4688 5163.2344,2166.7969 Q5162.1563,2167.25 5160.8594,2167.25 Q5159.3438,2167.25 5158.1406,2166.625 Q5157.1563,2166.125 5156.4688,2165.0547 Q5155.7813,2163.9844 5155.7813,2162.7031 L5155.7813,2161.5469 Q5155.7813,2160.2188 5156.3984,2159.0703 Q5157.0156,2157.9219 5158.1094,2157.3047 Q5159.2031,2156.6875 5160.4375,2156.6875 Q5161.1719,2156.6875 5161.8203,2156.8516 Q5162.4688,2157.0156 5163.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="197" x="5180.75" y="2166.4102">GeometryPassVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5106.5" x2="5419.5" y1="2177.5" y2="2177.5"/><ellipse cx="5116.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="5125.5" y="2192.9189">uniformOutput : GeometryPassShader::VertexShaderOutput</text><ellipse cx="5116.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="5125.5" y="2206.7549">triangle : Triangle&lt;GeometryPassShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5106.5" x2="5419.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[4b52c772f4d512fd977cbed4a5323640]
class eng.HDRT1--><rect codeLine="499" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.HDRT1" style="stroke:#A80036;stroke-width:1.5;" width="203" x="9134.5" y="1629"/><ellipse cx="9211.25" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9214.0156,1640.875 Q9214.1719,1640.6563 9214.3594,1640.5469 Q9214.5469,1640.4375 9214.7656,1640.4375 Q9215.1406,1640.4375 9215.375,1640.6953 Q9215.6094,1640.9531 9215.6094,1641.5625 L9215.6094,1643.0156 Q9215.6094,1643.625 9215.375,1643.8906 Q9215.1406,1644.1563 9214.7656,1644.1563 Q9214.4219,1644.1563 9214.2188,1643.9531 Q9214.0156,1643.7656 9213.9063,1643.25 Q9213.8594,1642.8906 9213.6719,1642.7031 Q9213.3438,1642.3281 9212.7344,1642.1094 Q9212.125,1641.8906 9211.5,1641.8906 Q9210.7344,1641.8906 9210.1016,1642.2188 Q9209.4688,1642.5469 9208.9766,1643.2969 Q9208.4844,1644.0469 9208.4844,1645.0781 L9208.4844,1646.1719 Q9208.4844,1647.4063 9209.375,1648.2266 Q9210.2656,1649.0469 9211.8594,1649.0469 Q9212.7969,1649.0469 9213.4531,1648.7969 Q9213.8438,1648.6406 9214.2656,1648.2031 Q9214.5313,1647.9375 9214.6797,1647.8594 Q9214.8281,1647.7813 9215.0313,1647.7813 Q9215.3594,1647.7813 9215.6172,1648.0391 Q9215.875,1648.2969 9215.875,1648.6406 Q9215.875,1648.9844 9215.5313,1649.3906 Q9215.0313,1649.9688 9214.2344,1650.2969 Q9213.1563,1650.75 9211.8594,1650.75 Q9210.3438,1650.75 9209.1406,1650.125 Q9208.1563,1649.625 9207.4688,1648.5547 Q9206.7813,1647.4844 9206.7813,1646.2031 L9206.7813,1645.0469 Q9206.7813,1643.7188 9207.3984,1642.5703 Q9208.0156,1641.4219 9209.1094,1640.8047 Q9210.2031,1640.1875 9211.4375,1640.1875 Q9212.1719,1640.1875 9212.8203,1640.3516 Q9213.4688,1640.5156 9214.0156,1640.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="9231.75" y="1649.9102">HDRT1</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9135.5" x2="9336.5" y1="1661" y2="1661"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9135.5" x2="9336.5" y1="1669" y2="1669"/><ellipse cx="9145.5" cy="1680" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="177" x="9154.5" y="1684.4189">transform(Color128 color) : Color128</text><!--MD5=[3e36bbd2f8894117c410a8d973bf4149]
class eng.IdentityT1--><rect codeLine="503" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.IdentityT1" style="stroke:#A80036;stroke-width:1.5;" width="203" x="9372.5" y="1629"/><ellipse cx="9443.75" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9446.5156,1640.875 Q9446.6719,1640.6563 9446.8594,1640.5469 Q9447.0469,1640.4375 9447.2656,1640.4375 Q9447.6406,1640.4375 9447.875,1640.6953 Q9448.1094,1640.9531 9448.1094,1641.5625 L9448.1094,1643.0156 Q9448.1094,1643.625 9447.875,1643.8906 Q9447.6406,1644.1563 9447.2656,1644.1563 Q9446.9219,1644.1563 9446.7188,1643.9531 Q9446.5156,1643.7656 9446.4063,1643.25 Q9446.3594,1642.8906 9446.1719,1642.7031 Q9445.8438,1642.3281 9445.2344,1642.1094 Q9444.625,1641.8906 9444,1641.8906 Q9443.2344,1641.8906 9442.6016,1642.2188 Q9441.9688,1642.5469 9441.4766,1643.2969 Q9440.9844,1644.0469 9440.9844,1645.0781 L9440.9844,1646.1719 Q9440.9844,1647.4063 9441.875,1648.2266 Q9442.7656,1649.0469 9444.3594,1649.0469 Q9445.2969,1649.0469 9445.9531,1648.7969 Q9446.3438,1648.6406 9446.7656,1648.2031 Q9447.0313,1647.9375 9447.1797,1647.8594 Q9447.3281,1647.7813 9447.5313,1647.7813 Q9447.8594,1647.7813 9448.1172,1648.0391 Q9448.375,1648.2969 9448.375,1648.6406 Q9448.375,1648.9844 9448.0313,1649.3906 Q9447.5313,1649.9688 9446.7344,1650.2969 Q9445.6563,1650.75 9444.3594,1650.75 Q9442.8438,1650.75 9441.6406,1650.125 Q9440.6563,1649.625 9439.9688,1648.5547 Q9439.2813,1647.4844 9439.2813,1646.2031 L9439.2813,1645.0469 Q9439.2813,1643.7188 9439.8984,1642.5703 Q9440.5156,1641.4219 9441.6094,1640.8047 Q9442.7031,1640.1875 9443.9375,1640.1875 Q9444.6719,1640.1875 9445.3203,1640.3516 Q9445.9688,1640.5156 9446.5156,1640.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="52" x="9464.25" y="1649.9102">IdentityT1</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9373.5" x2="9574.5" y1="1661" y2="1661"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9373.5" x2="9574.5" y1="1669" y2="1669"/><ellipse cx="9383.5" cy="1680" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="177" x="9392.5" y="1684.4189">transform(Color128 color) : Color128</text><!--MD5=[7d1b9ce34aecde205f44525b957ad316]
class eng.IdentityT2--><rect codeLine="507" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.IdentityT2" style="stroke:#A80036;stroke-width:1.5;" width="191" x="9610.5" y="1629"/><ellipse cx="9675.75" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9678.5156,1640.875 Q9678.6719,1640.6563 9678.8594,1640.5469 Q9679.0469,1640.4375 9679.2656,1640.4375 Q9679.6406,1640.4375 9679.875,1640.6953 Q9680.1094,1640.9531 9680.1094,1641.5625 L9680.1094,1643.0156 Q9680.1094,1643.625 9679.875,1643.8906 Q9679.6406,1644.1563 9679.2656,1644.1563 Q9678.9219,1644.1563 9678.7188,1643.9531 Q9678.5156,1643.7656 9678.4063,1643.25 Q9678.3594,1642.8906 9678.1719,1642.7031 Q9677.8438,1642.3281 9677.2344,1642.1094 Q9676.625,1641.8906 9676,1641.8906 Q9675.2344,1641.8906 9674.6016,1642.2188 Q9673.9688,1642.5469 9673.4766,1643.2969 Q9672.9844,1644.0469 9672.9844,1645.0781 L9672.9844,1646.1719 Q9672.9844,1647.4063 9673.875,1648.2266 Q9674.7656,1649.0469 9676.3594,1649.0469 Q9677.2969,1649.0469 9677.9531,1648.7969 Q9678.3438,1648.6406 9678.7656,1648.2031 Q9679.0313,1647.9375 9679.1797,1647.8594 Q9679.3281,1647.7813 9679.5313,1647.7813 Q9679.8594,1647.7813 9680.1172,1648.0391 Q9680.375,1648.2969 9680.375,1648.6406 Q9680.375,1648.9844 9680.0313,1649.3906 Q9679.5313,1649.9688 9678.7344,1650.2969 Q9677.6563,1650.75 9676.3594,1650.75 Q9674.8438,1650.75 9673.6406,1650.125 Q9672.6563,1649.625 9671.9688,1648.5547 Q9671.2813,1647.4844 9671.2813,1646.2031 L9671.2813,1645.0469 Q9671.2813,1643.7188 9671.8984,1642.5703 Q9672.5156,1641.4219 9673.6094,1640.8047 Q9674.7031,1640.1875 9675.9375,1640.1875 Q9676.6719,1640.1875 9677.3203,1640.3516 Q9677.9688,1640.5156 9678.5156,1640.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="52" x="9696.25" y="1649.9102">IdentityT2</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9611.5" x2="9800.5" y1="1661" y2="1661"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9611.5" x2="9800.5" y1="1669" y2="1669"/><ellipse cx="9621.5" cy="1680" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="9630.5" y="1684.4189">transform(Color32 color) : Color32</text><!--MD5=[e55c8730feec8f9527b1d436dc782285]
class eng.MeshData--><rect codeLine="511" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="214.0313" id="eng.MeshData" style="stroke:#A80036;stroke-width:1.5;" width="320" x="6409" y="2076.5"/><ellipse cx="6536.75" cy="2092.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6539.5156,2088.375 Q6539.6719,2088.1563 6539.8594,2088.0469 Q6540.0469,2087.9375 6540.2656,2087.9375 Q6540.6406,2087.9375 6540.875,2088.1953 Q6541.1094,2088.4531 6541.1094,2089.0625 L6541.1094,2090.5156 Q6541.1094,2091.125 6540.875,2091.3906 Q6540.6406,2091.6563 6540.2656,2091.6563 Q6539.9219,2091.6563 6539.7188,2091.4531 Q6539.5156,2091.2656 6539.4063,2090.75 Q6539.3594,2090.3906 6539.1719,2090.2031 Q6538.8438,2089.8281 6538.2344,2089.6094 Q6537.625,2089.3906 6537,2089.3906 Q6536.2344,2089.3906 6535.6016,2089.7188 Q6534.9688,2090.0469 6534.4766,2090.7969 Q6533.9844,2091.5469 6533.9844,2092.5781 L6533.9844,2093.6719 Q6533.9844,2094.9063 6534.875,2095.7266 Q6535.7656,2096.5469 6537.3594,2096.5469 Q6538.2969,2096.5469 6538.9531,2096.2969 Q6539.3438,2096.1406 6539.7656,2095.7031 Q6540.0313,2095.4375 6540.1797,2095.3594 Q6540.3281,2095.2813 6540.5313,2095.2813 Q6540.8594,2095.2813 6541.1172,2095.5391 Q6541.375,2095.7969 6541.375,2096.1406 Q6541.375,2096.4844 6541.0313,2096.8906 Q6540.5313,2097.4688 6539.7344,2097.7969 Q6538.6563,2098.25 6537.3594,2098.25 Q6535.8438,2098.25 6534.6406,2097.625 Q6533.6563,2097.125 6532.9688,2096.0547 Q6532.2813,2094.9844 6532.2813,2093.7031 L6532.2813,2092.5469 Q6532.2813,2091.2188 6532.8984,2090.0703 Q6533.5156,2088.9219 6534.6094,2088.3047 Q6535.7031,2087.6875 6536.9375,2087.6875 Q6537.6719,2087.6875 6538.3203,2087.8516 Q6538.9688,2088.0156 6539.5156,2088.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="6557.25" y="2097.4102">MeshData</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6410" x2="6728" y1="2108.5" y2="2108.5"/><ellipse cx="6420" cy="2119.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="6429" y="2123.9189">invertNormals : bool</text><ellipse cx="6420" cy="2133.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="6429" y="2137.7549">onlyVertices : bool</text><ellipse cx="6420" cy="2147.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="6429" y="2151.5908">scale : float</text><ellipse cx="6420" cy="2161.0078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="6429" y="2165.4268">fileName : std::string</text><ellipse cx="6420" cy="2174.8438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="6429" y="2179.2627">faces : std::vector&lt;Face&gt;</text><ellipse cx="6420" cy="2188.6797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="6429" y="2193.0986">textureCoords : std::vector&lt;glm::vec2&gt;</text><ellipse cx="6420" cy="2202.5156" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="6429" y="2206.9346">bitangents : std::vector&lt;glm::vec3&gt;</text><ellipse cx="6420" cy="2216.3516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="6429" y="2220.7705">normals : std::vector&lt;glm::vec3&gt;</text><ellipse cx="6420" cy="2230.1875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="6429" y="2234.6064">tangents : std::vector&lt;glm::vec3&gt;</text><ellipse cx="6420" cy="2244.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="6429" y="2248.4424">vertices : std::vector&lt;glm::vec3&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="6410" x2="6728" y1="2254.8594" y2="2254.8594"/><ellipse cx="6420" cy="2265.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="294" x="6429" y="2270.2783">generateCubeData(float size, bool invertNormals) : MeshData</text><ellipse cx="6420" cy="2279.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="6429" y="2284.1143">generateTBNVectors() : void</text><!--MD5=[cd290d00a12b562b44125937046d80cc]
class eng.NoBlending--><rect codeLine="526" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.NoBlending" style="stroke:#A80036;stroke-width:1.5;" width="251" x="7327.5" y="1629"/><ellipse cx="7342.5" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7345.2656,1640.875 Q7345.4219,1640.6563 7345.6094,1640.5469 Q7345.7969,1640.4375 7346.0156,1640.4375 Q7346.3906,1640.4375 7346.625,1640.6953 Q7346.8594,1640.9531 7346.8594,1641.5625 L7346.8594,1643.0156 Q7346.8594,1643.625 7346.625,1643.8906 Q7346.3906,1644.1563 7346.0156,1644.1563 Q7345.6719,1644.1563 7345.4688,1643.9531 Q7345.2656,1643.7656 7345.1563,1643.25 Q7345.1094,1642.8906 7344.9219,1642.7031 Q7344.5938,1642.3281 7343.9844,1642.1094 Q7343.375,1641.8906 7342.75,1641.8906 Q7341.9844,1641.8906 7341.3516,1642.2188 Q7340.7188,1642.5469 7340.2266,1643.2969 Q7339.7344,1644.0469 7339.7344,1645.0781 L7339.7344,1646.1719 Q7339.7344,1647.4063 7340.625,1648.2266 Q7341.5156,1649.0469 7343.1094,1649.0469 Q7344.0469,1649.0469 7344.7031,1648.7969 Q7345.0938,1648.6406 7345.5156,1648.2031 Q7345.7813,1647.9375 7345.9297,1647.8594 Q7346.0781,1647.7813 7346.2813,1647.7813 Q7346.6094,1647.7813 7346.8672,1648.0391 Q7347.125,1648.2969 7347.125,1648.6406 Q7347.125,1648.9844 7346.7813,1649.3906 Q7346.2813,1649.9688 7345.4844,1650.2969 Q7344.4063,1650.75 7343.1094,1650.75 Q7341.5938,1650.75 7340.3906,1650.125 Q7339.4063,1649.625 7338.7188,1648.5547 Q7338.0313,1647.4844 7338.0313,1646.2031 L7338.0313,1645.0469 Q7338.0313,1643.7188 7338.6484,1642.5703 Q7339.2656,1641.4219 7340.3594,1640.8047 Q7341.4531,1640.1875 7342.6875,1640.1875 Q7343.4219,1640.1875 7344.0703,1640.3516 Q7344.7188,1640.5156 7345.2656,1640.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="65" x="7356.5" y="1649.9102">NoBlending</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="7429.5" y="1626"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="7430.5" y="1639.457">template&lt;typename Color&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7328.5" x2="7577.5" y1="1661" y2="1661"/><line style="stroke:#A80036;stroke-width:1.5;" x1="7328.5" x2="7577.5" y1="1669" y2="1669"/><ellipse cx="7338.5" cy="1680" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="216" x="7347.5" y="1684.4189">blend(Color source, Color destination) : Color</text><!--MD5=[c99e9ba3fb805fe08fb5daee5779320c]
class eng.NoDiscard--><rect codeLine="530" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.NoDiscard" style="stroke:#A80036;stroke-width:1.5;" width="245" x="7047.5" y="1629"/><ellipse cx="7062.5" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7065.2656,1640.875 Q7065.4219,1640.6563 7065.6094,1640.5469 Q7065.7969,1640.4375 7066.0156,1640.4375 Q7066.3906,1640.4375 7066.625,1640.6953 Q7066.8594,1640.9531 7066.8594,1641.5625 L7066.8594,1643.0156 Q7066.8594,1643.625 7066.625,1643.8906 Q7066.3906,1644.1563 7066.0156,1644.1563 Q7065.6719,1644.1563 7065.4688,1643.9531 Q7065.2656,1643.7656 7065.1563,1643.25 Q7065.1094,1642.8906 7064.9219,1642.7031 Q7064.5938,1642.3281 7063.9844,1642.1094 Q7063.375,1641.8906 7062.75,1641.8906 Q7061.9844,1641.8906 7061.3516,1642.2188 Q7060.7188,1642.5469 7060.2266,1643.2969 Q7059.7344,1644.0469 7059.7344,1645.0781 L7059.7344,1646.1719 Q7059.7344,1647.4063 7060.625,1648.2266 Q7061.5156,1649.0469 7063.1094,1649.0469 Q7064.0469,1649.0469 7064.7031,1648.7969 Q7065.0938,1648.6406 7065.5156,1648.2031 Q7065.7813,1647.9375 7065.9297,1647.8594 Q7066.0781,1647.7813 7066.2813,1647.7813 Q7066.6094,1647.7813 7066.8672,1648.0391 Q7067.125,1648.2969 7067.125,1648.6406 Q7067.125,1648.9844 7066.7813,1649.3906 Q7066.2813,1649.9688 7065.4844,1650.2969 Q7064.4063,1650.75 7063.1094,1650.75 Q7061.5938,1650.75 7060.3906,1650.125 Q7059.4063,1649.625 7058.7188,1648.5547 Q7058.0313,1647.4844 7058.0313,1646.2031 L7058.0313,1645.0469 Q7058.0313,1643.7188 7058.6484,1642.5703 Q7059.2656,1641.4219 7060.3594,1640.8047 Q7061.4531,1640.1875 7062.6875,1640.1875 Q7063.4219,1640.1875 7064.0703,1640.3516 Q7064.7188,1640.5156 7065.2656,1640.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="59" x="7076.5" y="1649.9102">NoDiscard</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="152" x="7143.5" y="1626"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="7144.5" y="1639.457">template&lt;typename Color&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7048.5" x2="7291.5" y1="1661" y2="1661"/><line style="stroke:#A80036;stroke-width:1.5;" x1="7048.5" x2="7291.5" y1="1669" y2="1669"/><ellipse cx="7058.5" cy="1680" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="7067.5" y="1684.4189">discard(Color color) : bool</text><!--MD5=[47b0d39e6f3497c5f0a471aadba39416]
class eng.NoVariables--><rect codeLine="534" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.NoVariables" style="stroke:#A80036;stroke-width:1.5;" width="302" x="9837" y="1615"/><ellipse cx="9949.75" cy="1631" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9952.5156,1626.875 Q9952.6719,1626.6563 9952.8594,1626.5469 Q9953.0469,1626.4375 9953.2656,1626.4375 Q9953.6406,1626.4375 9953.875,1626.6953 Q9954.1094,1626.9531 9954.1094,1627.5625 L9954.1094,1629.0156 Q9954.1094,1629.625 9953.875,1629.8906 Q9953.6406,1630.1563 9953.2656,1630.1563 Q9952.9219,1630.1563 9952.7188,1629.9531 Q9952.5156,1629.7656 9952.4063,1629.25 Q9952.3594,1628.8906 9952.1719,1628.7031 Q9951.8438,1628.3281 9951.2344,1628.1094 Q9950.625,1627.8906 9950,1627.8906 Q9949.2344,1627.8906 9948.6016,1628.2188 Q9947.9688,1628.5469 9947.4766,1629.2969 Q9946.9844,1630.0469 9946.9844,1631.0781 L9946.9844,1632.1719 Q9946.9844,1633.4063 9947.875,1634.2266 Q9948.7656,1635.0469 9950.3594,1635.0469 Q9951.2969,1635.0469 9951.9531,1634.7969 Q9952.3438,1634.6406 9952.7656,1634.2031 Q9953.0313,1633.9375 9953.1797,1633.8594 Q9953.3281,1633.7813 9953.5313,1633.7813 Q9953.8594,1633.7813 9954.1172,1634.0391 Q9954.375,1634.2969 9954.375,1634.6406 Q9954.375,1634.9844 9954.0313,1635.3906 Q9953.5313,1635.9688 9952.7344,1636.2969 Q9951.6563,1636.75 9950.3594,1636.75 Q9948.8438,1636.75 9947.6406,1636.125 Q9946.6563,1635.625 9945.9688,1634.5547 Q9945.2813,1633.4844 9945.2813,1632.2031 L9945.2813,1631.0469 Q9945.2813,1629.7188 9945.8984,1628.5703 Q9946.5156,1627.4219 9947.6094,1626.8047 Q9948.7031,1626.1875 9949.9375,1626.1875 Q9950.6719,1626.1875 9951.3203,1626.3516 Q9951.9688,1626.5156 9952.5156,1626.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="9970.25" y="1635.9102">NoVariables</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9838" x2="10138" y1="1647" y2="1647"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9838" x2="10138" y1="1655" y2="1655"/><ellipse cx="9848" cy="1666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="9857" y="1670.4189">operator*(float t) : NoVariables {query}</text><ellipse cx="9848" cy="1679.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="9857" y="1684.2549">operator+(const NoVariables&amp; oth) : NoVariables {query}</text><ellipse cx="9848" cy="1693.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="9857" y="1698.0908">operator*=(float t) : void</text><!--MD5=[f0bc9dbd1a8e9f86b2895002cadf823e]
class eng.NormalMapShader--><rect codeLine="540" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.NormalMapShader" style="stroke:#A80036;stroke-width:1.5;" width="494" x="4585" y="2454.5"/><ellipse cx="4775.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4778.5156,2466.375 Q4778.6719,2466.1563 4778.8594,2466.0469 Q4779.0469,2465.9375 4779.2656,2465.9375 Q4779.6406,2465.9375 4779.875,2466.1953 Q4780.1094,2466.4531 4780.1094,2467.0625 L4780.1094,2468.5156 Q4780.1094,2469.125 4779.875,2469.3906 Q4779.6406,2469.6563 4779.2656,2469.6563 Q4778.9219,2469.6563 4778.7188,2469.4531 Q4778.5156,2469.2656 4778.4063,2468.75 Q4778.3594,2468.3906 4778.1719,2468.2031 Q4777.8438,2467.8281 4777.2344,2467.6094 Q4776.625,2467.3906 4776,2467.3906 Q4775.2344,2467.3906 4774.6016,2467.7188 Q4773.9688,2468.0469 4773.4766,2468.7969 Q4772.9844,2469.5469 4772.9844,2470.5781 L4772.9844,2471.6719 Q4772.9844,2472.9063 4773.875,2473.7266 Q4774.7656,2474.5469 4776.3594,2474.5469 Q4777.2969,2474.5469 4777.9531,2474.2969 Q4778.3438,2474.1406 4778.7656,2473.7031 Q4779.0313,2473.4375 4779.1797,2473.3594 Q4779.3281,2473.2813 4779.5313,2473.2813 Q4779.8594,2473.2813 4780.1172,2473.5391 Q4780.375,2473.7969 4780.375,2474.1406 Q4780.375,2474.4844 4780.0313,2474.8906 Q4779.5313,2475.4688 4778.7344,2475.7969 Q4777.6563,2476.25 4776.3594,2476.25 Q4774.8438,2476.25 4773.6406,2475.625 Q4772.6563,2475.125 4771.9688,2474.0547 Q4771.2813,2472.9844 4771.2813,2471.7031 L4771.2813,2470.5469 Q4771.2813,2469.2188 4771.8984,2468.0703 Q4772.5156,2466.9219 4773.6094,2466.3047 Q4774.7031,2465.6875 4775.9375,2465.6875 Q4776.6719,2465.6875 4777.3203,2465.8516 Q4777.9688,2466.0156 4778.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="104" x="4796.25" y="2475.4102">NormalMapShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4586" x2="5078" y1="2486.5" y2="2486.5"/><ellipse cx="4596" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="4605" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="4596" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="4605" y="2515.7549">vso : VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4586" x2="5078" y1="2522.1719" y2="2522.1719"/><ellipse cx="4596" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="4605" y="2537.5908">computePixelColor(TwoVariables&lt;glm::vec3, glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[06709c957a5c7a38bcf7014d663d704b]
class eng.NormalMapShader::VertexShaderOutput--><rect codeLine="546" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.NormalMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="251" x="4847.5" y="2666.5"/><ellipse cx="4862.5" cy="2682.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4865.2656,2678.375 Q4865.4219,2678.1563 4865.6094,2678.0469 Q4865.7969,2677.9375 4866.0156,2677.9375 Q4866.3906,2677.9375 4866.625,2678.1953 Q4866.8594,2678.4531 4866.8594,2679.0625 L4866.8594,2680.5156 Q4866.8594,2681.125 4866.625,2681.3906 Q4866.3906,2681.6563 4866.0156,2681.6563 Q4865.6719,2681.6563 4865.4688,2681.4531 Q4865.2656,2681.2656 4865.1563,2680.75 Q4865.1094,2680.3906 4864.9219,2680.2031 Q4864.5938,2679.8281 4863.9844,2679.6094 Q4863.375,2679.3906 4862.75,2679.3906 Q4861.9844,2679.3906 4861.3516,2679.7188 Q4860.7188,2680.0469 4860.2266,2680.7969 Q4859.7344,2681.5469 4859.7344,2682.5781 L4859.7344,2683.6719 Q4859.7344,2684.9063 4860.625,2685.7266 Q4861.5156,2686.5469 4863.1094,2686.5469 Q4864.0469,2686.5469 4864.7031,2686.2969 Q4865.0938,2686.1406 4865.5156,2685.7031 Q4865.7813,2685.4375 4865.9297,2685.3594 Q4866.0781,2685.2813 4866.2813,2685.2813 Q4866.6094,2685.2813 4866.8672,2685.5391 Q4867.125,2685.7969 4867.125,2686.1406 Q4867.125,2686.4844 4866.7813,2686.8906 Q4866.2813,2687.4688 4865.4844,2687.7969 Q4864.4063,2688.25 4863.1094,2688.25 Q4861.5938,2688.25 4860.3906,2687.625 Q4859.4063,2687.125 4858.7188,2686.0547 Q4858.0313,2684.9844 4858.0313,2683.7031 L4858.0313,2682.5469 Q4858.0313,2681.2188 4858.6484,2680.0703 Q4859.2656,2678.9219 4860.3594,2678.3047 Q4861.4531,2677.6875 4862.6875,2677.6875 Q4863.4219,2677.6875 4864.0703,2677.8516 Q4864.7188,2678.0156 4865.2656,2678.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="219" x="4876.5" y="2687.4102">NormalMapShader::VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4848.5" x2="5097.5" y1="2698.5" y2="2698.5"/><ellipse cx="4858.5" cy="2709.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="4867.5" y="2713.9189">invTBN : glm::mat3</text><ellipse cx="4858.5" cy="2723.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="4867.5" y="2727.7549">viewPos : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4848.5" x2="5097.5" y1="2734.1719" y2="2734.1719"/><!--MD5=[946e19dc221cfd354d1f607f95c1bc22]
class eng.NormalMapVertexShader--><rect codeLine="551" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.NormalMapVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="3609" y="1608.5"/><ellipse cx="3774.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3777.0156,1620.375 Q3777.1719,1620.1563 3777.3594,1620.0469 Q3777.5469,1619.9375 3777.7656,1619.9375 Q3778.1406,1619.9375 3778.375,1620.1953 Q3778.6094,1620.4531 3778.6094,1621.0625 L3778.6094,1622.5156 Q3778.6094,1623.125 3778.375,1623.3906 Q3778.1406,1623.6563 3777.7656,1623.6563 Q3777.4219,1623.6563 3777.2188,1623.4531 Q3777.0156,1623.2656 3776.9063,1622.75 Q3776.8594,1622.3906 3776.6719,1622.2031 Q3776.3438,1621.8281 3775.7344,1621.6094 Q3775.125,1621.3906 3774.5,1621.3906 Q3773.7344,1621.3906 3773.1016,1621.7188 Q3772.4688,1622.0469 3771.9766,1622.7969 Q3771.4844,1623.5469 3771.4844,1624.5781 L3771.4844,1625.6719 Q3771.4844,1626.9063 3772.375,1627.7266 Q3773.2656,1628.5469 3774.8594,1628.5469 Q3775.7969,1628.5469 3776.4531,1628.2969 Q3776.8438,1628.1406 3777.2656,1627.7031 Q3777.5313,1627.4375 3777.6797,1627.3594 Q3777.8281,1627.2813 3778.0313,1627.2813 Q3778.3594,1627.2813 3778.6172,1627.5391 Q3778.875,1627.7969 3778.875,1628.1406 Q3778.875,1628.4844 3778.5313,1628.8906 Q3778.0313,1629.4688 3777.2344,1629.7969 Q3776.1563,1630.25 3774.8594,1630.25 Q3773.3438,1630.25 3772.1406,1629.625 Q3771.1563,1629.125 3770.4688,1628.0547 Q3769.7813,1626.9844 3769.7813,1625.7031 L3769.7813,1624.5469 Q3769.7813,1623.2188 3770.3984,1622.0703 Q3771.0156,1620.9219 3772.1094,1620.3047 Q3773.2031,1619.6875 3774.4375,1619.6875 Q3775.1719,1619.6875 3775.8203,1619.8516 Q3776.4688,1620.0156 3777.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="137" x="3794.75" y="1629.4102">NormalMapVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3610" x2="4084" y1="1640.5" y2="1640.5"/><ellipse cx="3620" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="3629" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="3620" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="3629" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3610" x2="4084" y1="1676.1719" y2="1676.1719"/><ellipse cx="3620" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="3629" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="3620" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="3629" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[c57e490352468a139779cced9f0e6914]
class eng.NormalMapVertexShader::Output--><rect codeLine="558" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.NormalMapVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="297" x="3841.5" y="2145.5"/><ellipse cx="3896.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3899.0156,2157.375 Q3899.1719,2157.1563 3899.3594,2157.0469 Q3899.5469,2156.9375 3899.7656,2156.9375 Q3900.1406,2156.9375 3900.375,2157.1953 Q3900.6094,2157.4531 3900.6094,2158.0625 L3900.6094,2159.5156 Q3900.6094,2160.125 3900.375,2160.3906 Q3900.1406,2160.6563 3899.7656,2160.6563 Q3899.4219,2160.6563 3899.2188,2160.4531 Q3899.0156,2160.2656 3898.9063,2159.75 Q3898.8594,2159.3906 3898.6719,2159.2031 Q3898.3438,2158.8281 3897.7344,2158.6094 Q3897.125,2158.3906 3896.5,2158.3906 Q3895.7344,2158.3906 3895.1016,2158.7188 Q3894.4688,2159.0469 3893.9766,2159.7969 Q3893.4844,2160.5469 3893.4844,2161.5781 L3893.4844,2162.6719 Q3893.4844,2163.9063 3894.375,2164.7266 Q3895.2656,2165.5469 3896.8594,2165.5469 Q3897.7969,2165.5469 3898.4531,2165.2969 Q3898.8438,2165.1406 3899.2656,2164.7031 Q3899.5313,2164.4375 3899.6797,2164.3594 Q3899.8281,2164.2813 3900.0313,2164.2813 Q3900.3594,2164.2813 3900.6172,2164.5391 Q3900.875,2164.7969 3900.875,2165.1406 Q3900.875,2165.4844 3900.5313,2165.8906 Q3900.0313,2166.4688 3899.2344,2166.7969 Q3898.1563,2167.25 3896.8594,2167.25 Q3895.3438,2167.25 3894.1406,2166.625 Q3893.1563,2166.125 3892.4688,2165.0547 Q3891.7813,2163.9844 3891.7813,2162.7031 L3891.7813,2161.5469 Q3891.7813,2160.2188 3892.3984,2159.0703 Q3893.0156,2157.9219 3894.1094,2157.3047 Q3895.2031,2156.6875 3896.4375,2156.6875 Q3897.1719,2156.6875 3897.8203,2156.8516 Q3898.4688,2157.0156 3899.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="179" x="3916.75" y="2166.4102">NormalMapVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3842.5" x2="4137.5" y1="2177.5" y2="2177.5"/><ellipse cx="3852.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="3861.5" y="2192.9189">uniformOutput : NormalMapShader::VertexShaderOutput</text><ellipse cx="3852.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="3861.5" y="2206.7549">triangle : Triangle&lt;NormalMapShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3842.5" x2="4137.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[4c767783daf0d7ae65b59e9d74ef0f64]
class eng.NormalShader--><rect codeLine="563" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.NormalShader" style="stroke:#A80036;stroke-width:1.5;" width="375" x="4174.5" y="2454.5"/><ellipse cx="4317.25" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4320.0156,2466.375 Q4320.1719,2466.1563 4320.3594,2466.0469 Q4320.5469,2465.9375 4320.7656,2465.9375 Q4321.1406,2465.9375 4321.375,2466.1953 Q4321.6094,2466.4531 4321.6094,2467.0625 L4321.6094,2468.5156 Q4321.6094,2469.125 4321.375,2469.3906 Q4321.1406,2469.6563 4320.7656,2469.6563 Q4320.4219,2469.6563 4320.2188,2469.4531 Q4320.0156,2469.2656 4319.9063,2468.75 Q4319.8594,2468.3906 4319.6719,2468.2031 Q4319.3438,2467.8281 4318.7344,2467.6094 Q4318.125,2467.3906 4317.5,2467.3906 Q4316.7344,2467.3906 4316.1016,2467.7188 Q4315.4688,2468.0469 4314.9766,2468.7969 Q4314.4844,2469.5469 4314.4844,2470.5781 L4314.4844,2471.6719 Q4314.4844,2472.9063 4315.375,2473.7266 Q4316.2656,2474.5469 4317.8594,2474.5469 Q4318.7969,2474.5469 4319.4531,2474.2969 Q4319.8438,2474.1406 4320.2656,2473.7031 Q4320.5313,2473.4375 4320.6797,2473.3594 Q4320.8281,2473.2813 4321.0313,2473.2813 Q4321.3594,2473.2813 4321.6172,2473.5391 Q4321.875,2473.7969 4321.875,2474.1406 Q4321.875,2474.4844 4321.5313,2474.8906 Q4321.0313,2475.4688 4320.2344,2475.7969 Q4319.1563,2476.25 4317.8594,2476.25 Q4316.3438,2476.25 4315.1406,2475.625 Q4314.1563,2475.125 4313.4688,2474.0547 Q4312.7813,2472.9844 4312.7813,2471.7031 L4312.7813,2470.5469 Q4312.7813,2469.2188 4313.3984,2468.0703 Q4314.0156,2466.9219 4315.1094,2466.3047 Q4316.2031,2465.6875 4317.4375,2465.6875 Q4318.1719,2465.6875 4318.8203,2465.8516 Q4319.4688,2466.0156 4320.0156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="81" x="4337.75" y="2475.4102">NormalShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4175.5" x2="4548.5" y1="2486.5" y2="2486.5"/><ellipse cx="4185.5" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="4194.5" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="4185.5" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="4194.5" y="2515.7549">vso : vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4175.5" x2="4548.5" y1="2522.1719" y2="2522.1719"/><ellipse cx="4185.5" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="4194.5" y="2537.5908">computePixelColor(NoVariables var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[15b5752e8b201803574c3aded88b4f18]
class eng.NormalVertexShader--><rect codeLine="569" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.NormalVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="3098" y="1608.5"/><ellipse cx="3274.75" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3277.5156,1620.375 Q3277.6719,1620.1563 3277.8594,1620.0469 Q3278.0469,1619.9375 3278.2656,1619.9375 Q3278.6406,1619.9375 3278.875,1620.1953 Q3279.1094,1620.4531 3279.1094,1621.0625 L3279.1094,1622.5156 Q3279.1094,1623.125 3278.875,1623.3906 Q3278.6406,1623.6563 3278.2656,1623.6563 Q3277.9219,1623.6563 3277.7188,1623.4531 Q3277.5156,1623.2656 3277.4063,1622.75 Q3277.3594,1622.3906 3277.1719,1622.2031 Q3276.8438,1621.8281 3276.2344,1621.6094 Q3275.625,1621.3906 3275,1621.3906 Q3274.2344,1621.3906 3273.6016,1621.7188 Q3272.9688,1622.0469 3272.4766,1622.7969 Q3271.9844,1623.5469 3271.9844,1624.5781 L3271.9844,1625.6719 Q3271.9844,1626.9063 3272.875,1627.7266 Q3273.7656,1628.5469 3275.3594,1628.5469 Q3276.2969,1628.5469 3276.9531,1628.2969 Q3277.3438,1628.1406 3277.7656,1627.7031 Q3278.0313,1627.4375 3278.1797,1627.3594 Q3278.3281,1627.2813 3278.5313,1627.2813 Q3278.8594,1627.2813 3279.1172,1627.5391 Q3279.375,1627.7969 3279.375,1628.1406 Q3279.375,1628.4844 3279.0313,1628.8906 Q3278.5313,1629.4688 3277.7344,1629.7969 Q3276.6563,1630.25 3275.3594,1630.25 Q3273.8438,1630.25 3272.6406,1629.625 Q3271.6563,1629.125 3270.9688,1628.0547 Q3270.2813,1626.9844 3270.2813,1625.7031 L3270.2813,1624.5469 Q3270.2813,1623.2188 3270.8984,1622.0703 Q3271.5156,1620.9219 3272.6094,1620.3047 Q3273.7031,1619.6875 3274.9375,1619.6875 Q3275.6719,1619.6875 3276.3203,1619.8516 Q3276.9688,1620.0156 3277.5156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="114" x="3295.25" y="1629.4102">NormalVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3099" x2="3573" y1="1640.5" y2="1640.5"/><ellipse cx="3109" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="3118" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="3109" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="3118" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3099" x2="3573" y1="1676.1719" y2="1676.1719"/><ellipse cx="3109" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="3118" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="3109" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="3118" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[8947120c143e4de7777ef7d98f4e58ea]
class eng.NormalVertexShader::Output--><rect codeLine="576" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.NormalVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="277" x="3455.5" y="2145.5"/><ellipse cx="3511.75" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3514.5156,2157.375 Q3514.6719,2157.1563 3514.8594,2157.0469 Q3515.0469,2156.9375 3515.2656,2156.9375 Q3515.6406,2156.9375 3515.875,2157.1953 Q3516.1094,2157.4531 3516.1094,2158.0625 L3516.1094,2159.5156 Q3516.1094,2160.125 3515.875,2160.3906 Q3515.6406,2160.6563 3515.2656,2160.6563 Q3514.9219,2160.6563 3514.7188,2160.4531 Q3514.5156,2160.2656 3514.4063,2159.75 Q3514.3594,2159.3906 3514.1719,2159.2031 Q3513.8438,2158.8281 3513.2344,2158.6094 Q3512.625,2158.3906 3512,2158.3906 Q3511.2344,2158.3906 3510.6016,2158.7188 Q3509.9688,2159.0469 3509.4766,2159.7969 Q3508.9844,2160.5469 3508.9844,2161.5781 L3508.9844,2162.6719 Q3508.9844,2163.9063 3509.875,2164.7266 Q3510.7656,2165.5469 3512.3594,2165.5469 Q3513.2969,2165.5469 3513.9531,2165.2969 Q3514.3438,2165.1406 3514.7656,2164.7031 Q3515.0313,2164.4375 3515.1797,2164.3594 Q3515.3281,2164.2813 3515.5313,2164.2813 Q3515.8594,2164.2813 3516.1172,2164.5391 Q3516.375,2164.7969 3516.375,2165.1406 Q3516.375,2165.4844 3516.0313,2165.8906 Q3515.5313,2166.4688 3514.7344,2166.7969 Q3513.6563,2167.25 3512.3594,2167.25 Q3510.8438,2167.25 3509.6406,2166.625 Q3508.6563,2166.125 3507.9688,2165.0547 Q3507.2813,2163.9844 3507.2813,2162.7031 L3507.2813,2161.5469 Q3507.2813,2160.2188 3507.8984,2159.0703 Q3508.5156,2157.9219 3509.6094,2157.3047 Q3510.7031,2156.6875 3511.9375,2156.6875 Q3512.6719,2156.6875 3513.3203,2156.8516 Q3513.9688,2157.0156 3514.5156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="156" x="3532.25" y="2166.4102">NormalVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3456.5" x2="3731.5" y1="2177.5" y2="2177.5"/><ellipse cx="3466.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="3475.5" y="2192.9189">uniformOutput : NormalShader::VertexShaderOutput</text><ellipse cx="3466.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="3475.5" y="2206.7549">triangle : Triangle&lt;NormalShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3456.5" x2="3731.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[d594545a547744a797861325ba70001a]
class eng.OneVariable--><rect codeLine="581" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.OneVariable" style="stroke:#A80036;stroke-width:1.5;" width="304" x="10174" y="1608.5"/><ellipse cx="10222.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10225.0156,1620.375 Q10225.1719,1620.1563 10225.3594,1620.0469 Q10225.5469,1619.9375 10225.7656,1619.9375 Q10226.1406,1619.9375 10226.375,1620.1953 Q10226.6094,1620.4531 10226.6094,1621.0625 L10226.6094,1622.5156 Q10226.6094,1623.125 10226.375,1623.3906 Q10226.1406,1623.6563 10225.7656,1623.6563 Q10225.4219,1623.6563 10225.2188,1623.4531 Q10225.0156,1623.2656 10224.9063,1622.75 Q10224.8594,1622.3906 10224.6719,1622.2031 Q10224.3438,1621.8281 10223.7344,1621.6094 Q10223.125,1621.3906 10222.5,1621.3906 Q10221.7344,1621.3906 10221.1016,1621.7188 Q10220.4688,1622.0469 10219.9766,1622.7969 Q10219.4844,1623.5469 10219.4844,1624.5781 L10219.4844,1625.6719 Q10219.4844,1626.9063 10220.375,1627.7266 Q10221.2656,1628.5469 10222.8594,1628.5469 Q10223.7969,1628.5469 10224.4531,1628.2969 Q10224.8438,1628.1406 10225.2656,1627.7031 Q10225.5313,1627.4375 10225.6797,1627.3594 Q10225.8281,1627.2813 10226.0313,1627.2813 Q10226.3594,1627.2813 10226.6172,1627.5391 Q10226.875,1627.7969 10226.875,1628.1406 Q10226.875,1628.4844 10226.5313,1628.8906 Q10226.0313,1629.4688 10225.2344,1629.7969 Q10224.1563,1630.25 10222.8594,1630.25 Q10221.3438,1630.25 10220.1406,1629.625 Q10219.1563,1629.125 10218.4688,1628.0547 Q10217.7813,1626.9844 10217.7813,1625.7031 L10217.7813,1624.5469 Q10217.7813,1623.2188 10218.3984,1622.0703 Q10219.0156,1620.9219 10220.1094,1620.3047 Q10221.2031,1619.6875 10222.4375,1619.6875 Q10223.1719,1619.6875 10223.8203,1619.8516 Q10224.4688,1620.0156 10225.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="10242.75" y="1629.4102">OneVariable</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="129" x="10352" y="1605.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="127" x="10353" y="1618.957">template&lt;typename T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10175" x2="10477" y1="1640.5" y2="1640.5"/><ellipse cx="10185" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="18" x="10194" y="1655.9189">t : T</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10175" x2="10477" y1="1662.3359" y2="1662.3359"/><ellipse cx="10185" cy="1673.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="10194" y="1677.7549">operator*(float t_) : OneVariable {query}</text><ellipse cx="10185" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="10194" y="1691.5908">operator+(const OneVariable&amp; oth) : OneVariable {query}</text><ellipse cx="10185" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="10194" y="1705.4268">operator*=(float t_) : void</text><!--MD5=[66a7dddc7a4bd47c39291fa10cc2129c]
class eng.ParallaxMapShader--><rect codeLine="588" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.ParallaxMapShader" style="stroke:#A80036;stroke-width:1.5;" width="494" x="1259" y="2454.5"/><ellipse cx="1448.25" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1451.0156,2466.375 Q1451.1719,2466.1563 1451.3594,2466.0469 Q1451.5469,2465.9375 1451.7656,2465.9375 Q1452.1406,2465.9375 1452.375,2466.1953 Q1452.6094,2466.4531 1452.6094,2467.0625 L1452.6094,2468.5156 Q1452.6094,2469.125 1452.375,2469.3906 Q1452.1406,2469.6563 1451.7656,2469.6563 Q1451.4219,2469.6563 1451.2188,2469.4531 Q1451.0156,2469.2656 1450.9063,2468.75 Q1450.8594,2468.3906 1450.6719,2468.2031 Q1450.3438,2467.8281 1449.7344,2467.6094 Q1449.125,2467.3906 1448.5,2467.3906 Q1447.7344,2467.3906 1447.1016,2467.7188 Q1446.4688,2468.0469 1445.9766,2468.7969 Q1445.4844,2469.5469 1445.4844,2470.5781 L1445.4844,2471.6719 Q1445.4844,2472.9063 1446.375,2473.7266 Q1447.2656,2474.5469 1448.8594,2474.5469 Q1449.7969,2474.5469 1450.4531,2474.2969 Q1450.8438,2474.1406 1451.2656,2473.7031 Q1451.5313,2473.4375 1451.6797,2473.3594 Q1451.8281,2473.2813 1452.0313,2473.2813 Q1452.3594,2473.2813 1452.6172,2473.5391 Q1452.875,2473.7969 1452.875,2474.1406 Q1452.875,2474.4844 1452.5313,2474.8906 Q1452.0313,2475.4688 1451.2344,2475.7969 Q1450.1563,2476.25 1448.8594,2476.25 Q1447.3438,2476.25 1446.1406,2475.625 Q1445.1563,2475.125 1444.4688,2474.0547 Q1443.7813,2472.9844 1443.7813,2471.7031 L1443.7813,2470.5469 Q1443.7813,2469.2188 1444.3984,2468.0703 Q1445.0156,2466.9219 1446.1094,2466.3047 Q1447.2031,2465.6875 1448.4375,2465.6875 Q1449.1719,2465.6875 1449.8203,2465.8516 Q1450.4688,2466.0156 1451.0156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="107" x="1468.75" y="2475.4102">ParallaxMapShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1260" x2="1752" y1="2486.5" y2="2486.5"/><ellipse cx="1270" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="1279" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="1270" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1279" y="2515.7549">vso : VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1260" x2="1752" y1="2522.1719" y2="2522.1719"/><ellipse cx="1270" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1279" y="2537.5908">computePixelColor(TwoVariables&lt;glm::vec3, glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[3cd4c8e199c89e4039044df781ae3b58]
class eng.ParallaxMapShader::VertexShaderOutput--><rect codeLine="594" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.ParallaxMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="254" x="1237" y="2666.5"/><ellipse cx="1252" cy="2682.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1254.7656,2678.375 Q1254.9219,2678.1563 1255.1094,2678.0469 Q1255.2969,2677.9375 1255.5156,2677.9375 Q1255.8906,2677.9375 1256.125,2678.1953 Q1256.3594,2678.4531 1256.3594,2679.0625 L1256.3594,2680.5156 Q1256.3594,2681.125 1256.125,2681.3906 Q1255.8906,2681.6563 1255.5156,2681.6563 Q1255.1719,2681.6563 1254.9688,2681.4531 Q1254.7656,2681.2656 1254.6563,2680.75 Q1254.6094,2680.3906 1254.4219,2680.2031 Q1254.0938,2679.8281 1253.4844,2679.6094 Q1252.875,2679.3906 1252.25,2679.3906 Q1251.4844,2679.3906 1250.8516,2679.7188 Q1250.2188,2680.0469 1249.7266,2680.7969 Q1249.2344,2681.5469 1249.2344,2682.5781 L1249.2344,2683.6719 Q1249.2344,2684.9063 1250.125,2685.7266 Q1251.0156,2686.5469 1252.6094,2686.5469 Q1253.5469,2686.5469 1254.2031,2686.2969 Q1254.5938,2686.1406 1255.0156,2685.7031 Q1255.2813,2685.4375 1255.4297,2685.3594 Q1255.5781,2685.2813 1255.7813,2685.2813 Q1256.1094,2685.2813 1256.3672,2685.5391 Q1256.625,2685.7969 1256.625,2686.1406 Q1256.625,2686.4844 1256.2813,2686.8906 Q1255.7813,2687.4688 1254.9844,2687.7969 Q1253.9063,2688.25 1252.6094,2688.25 Q1251.0938,2688.25 1249.8906,2687.625 Q1248.9063,2687.125 1248.2188,2686.0547 Q1247.5313,2684.9844 1247.5313,2683.7031 L1247.5313,2682.5469 Q1247.5313,2681.2188 1248.1484,2680.0703 Q1248.7656,2678.9219 1249.8594,2678.3047 Q1250.9531,2677.6875 1252.1875,2677.6875 Q1252.9219,2677.6875 1253.5703,2677.8516 Q1254.2188,2678.0156 1254.7656,2678.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="222" x="1266" y="2687.4102">ParallaxMapShader::VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1238" x2="1490" y1="2698.5" y2="2698.5"/><ellipse cx="1248" cy="2709.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="1257" y="2713.9189">TBN : glm::mat3</text><ellipse cx="1248" cy="2723.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1257" y="2727.7549">viewPos : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1238" x2="1490" y1="2734.1719" y2="2734.1719"/><!--MD5=[3285f7f61a43179d8c8c0974877b9f42]
class eng.ParallaxMapVertexShader--><rect codeLine="599" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.ParallaxMapVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="1054" y="1608.5"/><ellipse cx="1217.75" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1220.5156,1620.375 Q1220.6719,1620.1563 1220.8594,1620.0469 Q1221.0469,1619.9375 1221.2656,1619.9375 Q1221.6406,1619.9375 1221.875,1620.1953 Q1222.1094,1620.4531 1222.1094,1621.0625 L1222.1094,1622.5156 Q1222.1094,1623.125 1221.875,1623.3906 Q1221.6406,1623.6563 1221.2656,1623.6563 Q1220.9219,1623.6563 1220.7188,1623.4531 Q1220.5156,1623.2656 1220.4063,1622.75 Q1220.3594,1622.3906 1220.1719,1622.2031 Q1219.8438,1621.8281 1219.2344,1621.6094 Q1218.625,1621.3906 1218,1621.3906 Q1217.2344,1621.3906 1216.6016,1621.7188 Q1215.9688,1622.0469 1215.4766,1622.7969 Q1214.9844,1623.5469 1214.9844,1624.5781 L1214.9844,1625.6719 Q1214.9844,1626.9063 1215.875,1627.7266 Q1216.7656,1628.5469 1218.3594,1628.5469 Q1219.2969,1628.5469 1219.9531,1628.2969 Q1220.3438,1628.1406 1220.7656,1627.7031 Q1221.0313,1627.4375 1221.1797,1627.3594 Q1221.3281,1627.2813 1221.5313,1627.2813 Q1221.8594,1627.2813 1222.1172,1627.5391 Q1222.375,1627.7969 1222.375,1628.1406 Q1222.375,1628.4844 1222.0313,1628.8906 Q1221.5313,1629.4688 1220.7344,1629.7969 Q1219.6563,1630.25 1218.3594,1630.25 Q1216.8438,1630.25 1215.6406,1629.625 Q1214.6563,1629.125 1213.9688,1628.0547 Q1213.2813,1626.9844 1213.2813,1625.7031 L1213.2813,1624.5469 Q1213.2813,1623.2188 1213.8984,1622.0703 Q1214.5156,1620.9219 1215.6094,1620.3047 Q1216.7031,1619.6875 1217.9375,1619.6875 Q1218.6719,1619.6875 1219.3203,1619.8516 Q1219.9688,1620.0156 1220.5156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="140" x="1238.25" y="1629.4102">ParallaxMapVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1055" x2="1529" y1="1640.5" y2="1640.5"/><ellipse cx="1065" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1074" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="1065" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1074" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1055" x2="1529" y1="1676.1719" y2="1676.1719"/><ellipse cx="1065" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1074" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="1065" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="1074" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[ea08a4d66969b666b1a9148ea24f4f42]
class eng.ParallaxMapVertexShader::Output--><rect codeLine="606" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.ParallaxMapVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="302" x="1248" y="2145.5"/><ellipse cx="1303.75" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1306.5156,2157.375 Q1306.6719,2157.1563 1306.8594,2157.0469 Q1307.0469,2156.9375 1307.2656,2156.9375 Q1307.6406,2156.9375 1307.875,2157.1953 Q1308.1094,2157.4531 1308.1094,2158.0625 L1308.1094,2159.5156 Q1308.1094,2160.125 1307.875,2160.3906 Q1307.6406,2160.6563 1307.2656,2160.6563 Q1306.9219,2160.6563 1306.7188,2160.4531 Q1306.5156,2160.2656 1306.4063,2159.75 Q1306.3594,2159.3906 1306.1719,2159.2031 Q1305.8438,2158.8281 1305.2344,2158.6094 Q1304.625,2158.3906 1304,2158.3906 Q1303.2344,2158.3906 1302.6016,2158.7188 Q1301.9688,2159.0469 1301.4766,2159.7969 Q1300.9844,2160.5469 1300.9844,2161.5781 L1300.9844,2162.6719 Q1300.9844,2163.9063 1301.875,2164.7266 Q1302.7656,2165.5469 1304.3594,2165.5469 Q1305.2969,2165.5469 1305.9531,2165.2969 Q1306.3438,2165.1406 1306.7656,2164.7031 Q1307.0313,2164.4375 1307.1797,2164.3594 Q1307.3281,2164.2813 1307.5313,2164.2813 Q1307.8594,2164.2813 1308.1172,2164.5391 Q1308.375,2164.7969 1308.375,2165.1406 Q1308.375,2165.4844 1308.0313,2165.8906 Q1307.5313,2166.4688 1306.7344,2166.7969 Q1305.6563,2167.25 1304.3594,2167.25 Q1302.8438,2167.25 1301.6406,2166.625 Q1300.6563,2166.125 1299.9688,2165.0547 Q1299.2813,2163.9844 1299.2813,2162.7031 L1299.2813,2161.5469 Q1299.2813,2160.2188 1299.8984,2159.0703 Q1300.5156,2157.9219 1301.6094,2157.3047 Q1302.7031,2156.6875 1303.9375,2156.6875 Q1304.6719,2156.6875 1305.3203,2156.8516 Q1305.9688,2157.0156 1306.5156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="182" x="1324.25" y="2166.4102">ParallaxMapVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1249" x2="1549" y1="2177.5" y2="2177.5"/><ellipse cx="1259" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="1268" y="2192.9189">uniformOutput : ParallaxMapShader::VertexShaderOutput</text><ellipse cx="1259" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="1268" y="2206.7549">triangle : Triangle&lt;ParallaxMapShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1249" x2="1549" y1="2213.1719" y2="2213.1719"/><!--MD5=[e4bd8eda639cb9c3fe23ae0b497635b7]
class eng.PhongShader--><rect codeLine="611" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.PhongShader" style="stroke:#A80036;stroke-width:1.5;" width="494" x="69" y="2454.5"/><ellipse cx="273.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M276.5156,2466.375 Q276.6719,2466.1563 276.8594,2466.0469 Q277.0469,2465.9375 277.2656,2465.9375 Q277.6406,2465.9375 277.875,2466.1953 Q278.1094,2466.4531 278.1094,2467.0625 L278.1094,2468.5156 Q278.1094,2469.125 277.875,2469.3906 Q277.6406,2469.6563 277.2656,2469.6563 Q276.9219,2469.6563 276.7188,2469.4531 Q276.5156,2469.2656 276.4063,2468.75 Q276.3594,2468.3906 276.1719,2468.2031 Q275.8438,2467.8281 275.2344,2467.6094 Q274.625,2467.3906 274,2467.3906 Q273.2344,2467.3906 272.6016,2467.7188 Q271.9688,2468.0469 271.4766,2468.7969 Q270.9844,2469.5469 270.9844,2470.5781 L270.9844,2471.6719 Q270.9844,2472.9063 271.875,2473.7266 Q272.7656,2474.5469 274.3594,2474.5469 Q275.2969,2474.5469 275.9531,2474.2969 Q276.3438,2474.1406 276.7656,2473.7031 Q277.0313,2473.4375 277.1797,2473.3594 Q277.3281,2473.2813 277.5313,2473.2813 Q277.8594,2473.2813 278.1172,2473.5391 Q278.375,2473.7969 278.375,2474.1406 Q278.375,2474.4844 278.0313,2474.8906 Q277.5313,2475.4688 276.7344,2475.7969 Q275.6563,2476.25 274.3594,2476.25 Q272.8438,2476.25 271.6406,2475.625 Q270.6563,2475.125 269.9688,2474.0547 Q269.2813,2472.9844 269.2813,2471.7031 L269.2813,2470.5469 Q269.2813,2469.2188 269.8984,2468.0703 Q270.5156,2466.9219 271.6094,2466.3047 Q272.7031,2465.6875 273.9375,2465.6875 Q274.6719,2465.6875 275.3203,2465.8516 Q275.9688,2466.0156 276.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="76" x="294.25" y="2475.4102">PhongShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="70" x2="562" y1="2486.5" y2="2486.5"/><ellipse cx="80" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="89" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="80" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="89" y="2515.7549">vso : VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="70" x2="562" y1="2522.1719" y2="2522.1719"/><ellipse cx="80" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="89" y="2537.5908">computePixelColor(TwoVariables&lt;glm::vec3, glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[d926c786e903cad155424e808b49d09c]
class eng.PhongShader::VertexShaderOutput--><rect codeLine="617" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.PhongShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="223" x="156.5" y="2666.5"/><ellipse cx="171.5" cy="2682.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M174.2656,2678.375 Q174.4219,2678.1563 174.6094,2678.0469 Q174.7969,2677.9375 175.0156,2677.9375 Q175.3906,2677.9375 175.625,2678.1953 Q175.8594,2678.4531 175.8594,2679.0625 L175.8594,2680.5156 Q175.8594,2681.125 175.625,2681.3906 Q175.3906,2681.6563 175.0156,2681.6563 Q174.6719,2681.6563 174.4688,2681.4531 Q174.2656,2681.2656 174.1563,2680.75 Q174.1094,2680.3906 173.9219,2680.2031 Q173.5938,2679.8281 172.9844,2679.6094 Q172.375,2679.3906 171.75,2679.3906 Q170.9844,2679.3906 170.3516,2679.7188 Q169.7188,2680.0469 169.2266,2680.7969 Q168.7344,2681.5469 168.7344,2682.5781 L168.7344,2683.6719 Q168.7344,2684.9063 169.625,2685.7266 Q170.5156,2686.5469 172.1094,2686.5469 Q173.0469,2686.5469 173.7031,2686.2969 Q174.0938,2686.1406 174.5156,2685.7031 Q174.7813,2685.4375 174.9297,2685.3594 Q175.0781,2685.2813 175.2813,2685.2813 Q175.6094,2685.2813 175.8672,2685.5391 Q176.125,2685.7969 176.125,2686.1406 Q176.125,2686.4844 175.7813,2686.8906 Q175.2813,2687.4688 174.4844,2687.7969 Q173.4063,2688.25 172.1094,2688.25 Q170.5938,2688.25 169.3906,2687.625 Q168.4063,2687.125 167.7188,2686.0547 Q167.0313,2684.9844 167.0313,2683.7031 L167.0313,2682.5469 Q167.0313,2681.2188 167.6484,2680.0703 Q168.2656,2678.9219 169.3594,2678.3047 Q170.4531,2677.6875 171.6875,2677.6875 Q172.4219,2677.6875 173.0703,2677.8516 Q173.7188,2678.0156 174.2656,2678.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="191" x="185.5" y="2687.4102">PhongShader::VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="157.5" x2="378.5" y1="2698.5" y2="2698.5"/><ellipse cx="167.5" cy="2709.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="176.5" y="2713.9189">normal : glm::vec3</text><ellipse cx="167.5" cy="2723.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="176.5" y="2727.7549">viewPos : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="157.5" x2="378.5" y1="2734.1719" y2="2734.1719"/><!--MD5=[eb9a6d1a8b539fb7e8fea63070300402]
class eng.PhongShadowMappingShader--><rect codeLine="622" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.PhongShadowMappingShader" style="stroke:#A80036;stroke-width:1.5;" width="552" x="635" y="2454.5"/><ellipse cx="822.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M825.5156,2466.375 Q825.6719,2466.1563 825.8594,2466.0469 Q826.0469,2465.9375 826.2656,2465.9375 Q826.6406,2465.9375 826.875,2466.1953 Q827.1094,2466.4531 827.1094,2467.0625 L827.1094,2468.5156 Q827.1094,2469.125 826.875,2469.3906 Q826.6406,2469.6563 826.2656,2469.6563 Q825.9219,2469.6563 825.7188,2469.4531 Q825.5156,2469.2656 825.4063,2468.75 Q825.3594,2468.3906 825.1719,2468.2031 Q824.8438,2467.8281 824.2344,2467.6094 Q823.625,2467.3906 823,2467.3906 Q822.2344,2467.3906 821.6016,2467.7188 Q820.9688,2468.0469 820.4766,2468.7969 Q819.9844,2469.5469 819.9844,2470.5781 L819.9844,2471.6719 Q819.9844,2472.9063 820.875,2473.7266 Q821.7656,2474.5469 823.3594,2474.5469 Q824.2969,2474.5469 824.9531,2474.2969 Q825.3438,2474.1406 825.7656,2473.7031 Q826.0313,2473.4375 826.1797,2473.3594 Q826.3281,2473.2813 826.5313,2473.2813 Q826.8594,2473.2813 827.1172,2473.5391 Q827.375,2473.7969 827.375,2474.1406 Q827.375,2474.4844 827.0313,2474.8906 Q826.5313,2475.4688 825.7344,2475.7969 Q824.6563,2476.25 823.3594,2476.25 Q821.8438,2476.25 820.6406,2475.625 Q819.6563,2475.125 818.9688,2474.0547 Q818.2813,2472.9844 818.2813,2471.7031 L818.2813,2470.5469 Q818.2813,2469.2188 818.8984,2468.0703 Q819.5156,2466.9219 820.6094,2466.3047 Q821.7031,2465.6875 822.9375,2465.6875 Q823.6719,2465.6875 824.3203,2465.8516 Q824.9688,2466.0156 825.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="168" x="843.25" y="2475.4102">PhongShadowMappingShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="636" x2="1186" y1="2486.5" y2="2486.5"/><ellipse cx="646" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="655" y="2501.9189">uniform : FragmentShaderUniform</text><ellipse cx="646" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="655" y="2515.7549">vso : VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="636" x2="1186" y1="2522.1719" y2="2522.1719"/><ellipse cx="646" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="526" x="655" y="2537.5908">computePixelColor(ThreeVariables&lt;glm::vec4, glm::vec3, glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[da85f5631611cac9ecfda724dcf6ccc9]
class eng.PhongShadowMappingShader::VertexShaderOutput--><rect codeLine="628" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.PhongShadowMappingShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.5;" width="315" x="489.5" y="2666.5"/><ellipse cx="504.5" cy="2682.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M507.2656,2678.375 Q507.4219,2678.1563 507.6094,2678.0469 Q507.7969,2677.9375 508.0156,2677.9375 Q508.3906,2677.9375 508.625,2678.1953 Q508.8594,2678.4531 508.8594,2679.0625 L508.8594,2680.5156 Q508.8594,2681.125 508.625,2681.3906 Q508.3906,2681.6563 508.0156,2681.6563 Q507.6719,2681.6563 507.4688,2681.4531 Q507.2656,2681.2656 507.1563,2680.75 Q507.1094,2680.3906 506.9219,2680.2031 Q506.5938,2679.8281 505.9844,2679.6094 Q505.375,2679.3906 504.75,2679.3906 Q503.9844,2679.3906 503.3516,2679.7188 Q502.7188,2680.0469 502.2266,2680.7969 Q501.7344,2681.5469 501.7344,2682.5781 L501.7344,2683.6719 Q501.7344,2684.9063 502.625,2685.7266 Q503.5156,2686.5469 505.1094,2686.5469 Q506.0469,2686.5469 506.7031,2686.2969 Q507.0938,2686.1406 507.5156,2685.7031 Q507.7813,2685.4375 507.9297,2685.3594 Q508.0781,2685.2813 508.2813,2685.2813 Q508.6094,2685.2813 508.8672,2685.5391 Q509.125,2685.7969 509.125,2686.1406 Q509.125,2686.4844 508.7813,2686.8906 Q508.2813,2687.4688 507.4844,2687.7969 Q506.4063,2688.25 505.1094,2688.25 Q503.5938,2688.25 502.3906,2687.625 Q501.4063,2687.125 500.7188,2686.0547 Q500.0313,2684.9844 500.0313,2683.7031 L500.0313,2682.5469 Q500.0313,2681.2188 500.6484,2680.0703 Q501.2656,2678.9219 502.3594,2678.3047 Q503.4531,2677.6875 504.6875,2677.6875 Q505.4219,2677.6875 506.0703,2677.8516 Q506.7188,2678.0156 507.2656,2678.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="283" x="518.5" y="2687.4102">PhongShadowMappingShader::VertexShaderOutput</text><line style="stroke:#A80036;stroke-width:1.5;" x1="490.5" x2="803.5" y1="2698.5" y2="2698.5"/><ellipse cx="500.5" cy="2709.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="509.5" y="2713.9189">normal : glm::vec3</text><ellipse cx="500.5" cy="2723.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="509.5" y="2727.7549">viewPos : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="490.5" x2="803.5" y1="2734.1719" y2="2734.1719"/><!--MD5=[45b2333178581eace4784dbda3a7f9eb]
class eng.PhongShadowMappingVertexShader--><rect codeLine="633" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.PhongShadowMappingVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="543" y="1608.5"/><ellipse cx="676.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M679.0156,1620.375 Q679.1719,1620.1563 679.3594,1620.0469 Q679.5469,1619.9375 679.7656,1619.9375 Q680.1406,1619.9375 680.375,1620.1953 Q680.6094,1620.4531 680.6094,1621.0625 L680.6094,1622.5156 Q680.6094,1623.125 680.375,1623.3906 Q680.1406,1623.6563 679.7656,1623.6563 Q679.4219,1623.6563 679.2188,1623.4531 Q679.0156,1623.2656 678.9063,1622.75 Q678.8594,1622.3906 678.6719,1622.2031 Q678.3438,1621.8281 677.7344,1621.6094 Q677.125,1621.3906 676.5,1621.3906 Q675.7344,1621.3906 675.1016,1621.7188 Q674.4688,1622.0469 673.9766,1622.7969 Q673.4844,1623.5469 673.4844,1624.5781 L673.4844,1625.6719 Q673.4844,1626.9063 674.375,1627.7266 Q675.2656,1628.5469 676.8594,1628.5469 Q677.7969,1628.5469 678.4531,1628.2969 Q678.8438,1628.1406 679.2656,1627.7031 Q679.5313,1627.4375 679.6797,1627.3594 Q679.8281,1627.2813 680.0313,1627.2813 Q680.3594,1627.2813 680.6172,1627.5391 Q680.875,1627.7969 680.875,1628.1406 Q680.875,1628.4844 680.5313,1628.8906 Q680.0313,1629.4688 679.2344,1629.7969 Q678.1563,1630.25 676.8594,1630.25 Q675.3438,1630.25 674.1406,1629.625 Q673.1563,1629.125 672.4688,1628.0547 Q671.7813,1626.9844 671.7813,1625.7031 L671.7813,1624.5469 Q671.7813,1623.2188 672.3984,1622.0703 Q673.0156,1620.9219 674.1094,1620.3047 Q675.2031,1619.6875 676.4375,1619.6875 Q677.1719,1619.6875 677.8203,1619.8516 Q678.4688,1620.0156 679.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="201" x="696.75" y="1629.4102">PhongShadowMappingVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="544" x2="1018" y1="1640.5" y2="1640.5"/><ellipse cx="554" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="563" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="554" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="563" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="544" x2="1018" y1="1676.1719" y2="1676.1719"/><ellipse cx="554" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="563" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="554" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="563" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[33514885e37c57ac6a745767ae32a216]
class eng.PhongShadowMappingVertexShader::Output--><rect codeLine="640" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.PhongShadowMappingVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="355" x="668.5" y="2145.5"/><ellipse cx="720.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M723.0156,2157.375 Q723.1719,2157.1563 723.3594,2157.0469 Q723.5469,2156.9375 723.7656,2156.9375 Q724.1406,2156.9375 724.375,2157.1953 Q724.6094,2157.4531 724.6094,2158.0625 L724.6094,2159.5156 Q724.6094,2160.125 724.375,2160.3906 Q724.1406,2160.6563 723.7656,2160.6563 Q723.4219,2160.6563 723.2188,2160.4531 Q723.0156,2160.2656 722.9063,2159.75 Q722.8594,2159.3906 722.6719,2159.2031 Q722.3438,2158.8281 721.7344,2158.6094 Q721.125,2158.3906 720.5,2158.3906 Q719.7344,2158.3906 719.1016,2158.7188 Q718.4688,2159.0469 717.9766,2159.7969 Q717.4844,2160.5469 717.4844,2161.5781 L717.4844,2162.6719 Q717.4844,2163.9063 718.375,2164.7266 Q719.2656,2165.5469 720.8594,2165.5469 Q721.7969,2165.5469 722.4531,2165.2969 Q722.8438,2165.1406 723.2656,2164.7031 Q723.5313,2164.4375 723.6797,2164.3594 Q723.8281,2164.2813 724.0313,2164.2813 Q724.3594,2164.2813 724.6172,2164.5391 Q724.875,2164.7969 724.875,2165.1406 Q724.875,2165.4844 724.5313,2165.8906 Q724.0313,2166.4688 723.2344,2166.7969 Q722.1563,2167.25 720.8594,2167.25 Q719.3438,2167.25 718.1406,2166.625 Q717.1563,2166.125 716.4688,2165.0547 Q715.7813,2163.9844 715.7813,2162.7031 L715.7813,2161.5469 Q715.7813,2160.2188 716.3984,2159.0703 Q717.0156,2157.9219 718.1094,2157.3047 Q719.2031,2156.6875 720.4375,2156.6875 Q721.1719,2156.6875 721.8203,2156.8516 Q722.4688,2157.0156 723.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="243" x="740.75" y="2166.4102">PhongShadowMappingVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="669.5" x2="1022.5" y1="2177.5" y2="2177.5"/><ellipse cx="679.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="688.5" y="2192.9189">uniformOutput : PhongShadowMappingShader::VertexShaderOutput</text><ellipse cx="679.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="688.5" y="2206.7549">triangle : Triangle&lt;PhongShadowMappingShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="669.5" x2="1022.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[458c4283401bcad6d245b9e60e85921f]
class eng.PhongVertexShader--><rect codeLine="645" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.PhongVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="32" y="1608.5"/><ellipse cx="211.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M214.0156,1620.375 Q214.1719,1620.1563 214.3594,1620.0469 Q214.5469,1619.9375 214.7656,1619.9375 Q215.1406,1619.9375 215.375,1620.1953 Q215.6094,1620.4531 215.6094,1621.0625 L215.6094,1622.5156 Q215.6094,1623.125 215.375,1623.3906 Q215.1406,1623.6563 214.7656,1623.6563 Q214.4219,1623.6563 214.2188,1623.4531 Q214.0156,1623.2656 213.9063,1622.75 Q213.8594,1622.3906 213.6719,1622.2031 Q213.3438,1621.8281 212.7344,1621.6094 Q212.125,1621.3906 211.5,1621.3906 Q210.7344,1621.3906 210.1016,1621.7188 Q209.4688,1622.0469 208.9766,1622.7969 Q208.4844,1623.5469 208.4844,1624.5781 L208.4844,1625.6719 Q208.4844,1626.9063 209.375,1627.7266 Q210.2656,1628.5469 211.8594,1628.5469 Q212.7969,1628.5469 213.4531,1628.2969 Q213.8438,1628.1406 214.2656,1627.7031 Q214.5313,1627.4375 214.6797,1627.3594 Q214.8281,1627.2813 215.0313,1627.2813 Q215.3594,1627.2813 215.6172,1627.5391 Q215.875,1627.7969 215.875,1628.1406 Q215.875,1628.4844 215.5313,1628.8906 Q215.0313,1629.4688 214.2344,1629.7969 Q213.1563,1630.25 211.8594,1630.25 Q210.3438,1630.25 209.1406,1629.625 Q208.1563,1629.125 207.4688,1628.0547 Q206.7813,1626.9844 206.7813,1625.7031 L206.7813,1624.5469 Q206.7813,1623.2188 207.3984,1622.0703 Q208.0156,1620.9219 209.1094,1620.3047 Q210.2031,1619.6875 211.4375,1619.6875 Q212.1719,1619.6875 212.8203,1619.8516 Q213.4688,1620.0156 214.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="109" x="231.75" y="1629.4102">PhongVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="33" x2="507" y1="1640.5" y2="1640.5"/><ellipse cx="43" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="52" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="43" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="52" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="33" x2="507" y1="1676.1719" y2="1676.1719"/><ellipse cx="43" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="52" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="43" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="52" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[f4671332457eaa9b150bc2814c97ff9e]
class eng.PhongVertexShader::Output--><rect codeLine="652" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.PhongVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="274" x="156" y="2145.5"/><ellipse cx="213.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M216.0156,2157.375 Q216.1719,2157.1563 216.3594,2157.0469 Q216.5469,2156.9375 216.7656,2156.9375 Q217.1406,2156.9375 217.375,2157.1953 Q217.6094,2157.4531 217.6094,2158.0625 L217.6094,2159.5156 Q217.6094,2160.125 217.375,2160.3906 Q217.1406,2160.6563 216.7656,2160.6563 Q216.4219,2160.6563 216.2188,2160.4531 Q216.0156,2160.2656 215.9063,2159.75 Q215.8594,2159.3906 215.6719,2159.2031 Q215.3438,2158.8281 214.7344,2158.6094 Q214.125,2158.3906 213.5,2158.3906 Q212.7344,2158.3906 212.1016,2158.7188 Q211.4688,2159.0469 210.9766,2159.7969 Q210.4844,2160.5469 210.4844,2161.5781 L210.4844,2162.6719 Q210.4844,2163.9063 211.375,2164.7266 Q212.2656,2165.5469 213.8594,2165.5469 Q214.7969,2165.5469 215.4531,2165.2969 Q215.8438,2165.1406 216.2656,2164.7031 Q216.5313,2164.4375 216.6797,2164.3594 Q216.8281,2164.2813 217.0313,2164.2813 Q217.3594,2164.2813 217.6172,2164.5391 Q217.875,2164.7969 217.875,2165.1406 Q217.875,2165.4844 217.5313,2165.8906 Q217.0313,2166.4688 216.2344,2166.7969 Q215.1563,2167.25 213.8594,2167.25 Q212.3438,2167.25 211.1406,2166.625 Q210.1563,2166.125 209.4688,2165.0547 Q208.7813,2163.9844 208.7813,2162.7031 L208.7813,2161.5469 Q208.7813,2160.2188 209.3984,2159.0703 Q210.0156,2157.9219 211.1094,2157.3047 Q212.2031,2156.6875 213.4375,2156.6875 Q214.1719,2156.6875 214.8203,2156.8516 Q215.4688,2157.0156 216.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="151" x="233.75" y="2166.4102">PhongVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="157" x2="429" y1="2177.5" y2="2177.5"/><ellipse cx="167" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="176" y="2192.9189">uniformOutput : PhongShader::VertexShaderOutput</text><ellipse cx="167" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="176" y="2206.7549">triangle : Triangle&lt;PhongShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="157" x2="429" y1="2213.1719" y2="2213.1719"/><!--MD5=[3290d25a443ae696847c3430eb6ea951]
class eng.PipelineResult--><rect codeLine="657" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.PipelineResult" style="stroke:#A80036;stroke-width:1.5;" width="136" x="10513" y="1622"/><ellipse cx="10538.35" cy="1638" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10541.1156,1633.875 Q10541.2719,1633.6563 10541.4594,1633.5469 Q10541.6469,1633.4375 10541.8656,1633.4375 Q10542.2406,1633.4375 10542.475,1633.6953 Q10542.7094,1633.9531 10542.7094,1634.5625 L10542.7094,1636.0156 Q10542.7094,1636.625 10542.475,1636.8906 Q10542.2406,1637.1563 10541.8656,1637.1563 Q10541.5219,1637.1563 10541.3188,1636.9531 Q10541.1156,1636.7656 10541.0063,1636.25 Q10540.9594,1635.8906 10540.7719,1635.7031 Q10540.4438,1635.3281 10539.8344,1635.1094 Q10539.225,1634.8906 10538.6,1634.8906 Q10537.8344,1634.8906 10537.2016,1635.2188 Q10536.5688,1635.5469 10536.0766,1636.2969 Q10535.5844,1637.0469 10535.5844,1638.0781 L10535.5844,1639.1719 Q10535.5844,1640.4063 10536.475,1641.2266 Q10537.3656,1642.0469 10538.9594,1642.0469 Q10539.8969,1642.0469 10540.5531,1641.7969 Q10540.9438,1641.6406 10541.3656,1641.2031 Q10541.6313,1640.9375 10541.7797,1640.8594 Q10541.9281,1640.7813 10542.1313,1640.7813 Q10542.4594,1640.7813 10542.7172,1641.0391 Q10542.975,1641.2969 10542.975,1641.6406 Q10542.975,1641.9844 10542.6313,1642.3906 Q10542.1313,1642.9688 10541.3344,1643.2969 Q10540.2563,1643.75 10538.9594,1643.75 Q10537.4438,1643.75 10536.2406,1643.125 Q10535.2563,1642.625 10534.5688,1641.5547 Q10533.8813,1640.4844 10533.8813,1639.2031 L10533.8813,1638.0469 Q10533.8813,1636.7188 10534.4984,1635.5703 Q10535.1156,1634.4219 10536.2094,1633.8047 Q10537.3031,1633.1875 10538.5375,1633.1875 Q10539.2719,1633.1875 10539.9203,1633.3516 Q10540.5688,1633.5156 10541.1156,1633.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="81" x="10554.65" y="1642.9102">PipelineResult</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10514" x2="10648" y1="1654" y2="1654"/><ellipse cx="10524" cy="1665" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="10533" y="1669.4189">buffer : const Color32*</text><ellipse cx="10524" cy="1678.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="10533" y="1683.2549">trianglesCount : size_t</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10514" x2="10648" y1="1689.6719" y2="1689.6719"/><!--MD5=[8f387064409e0b172703044dfbbfadc8]
class eng.PointLight--><rect codeLine="662" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="255.5391" id="eng.PointLight" style="stroke:#A80036;stroke-width:1.5;" width="1063" x="7078.5" y="2055.5"/><ellipse cx="7578.25" cy="2071.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7581.0156,2067.375 Q7581.1719,2067.1563 7581.3594,2067.0469 Q7581.5469,2066.9375 7581.7656,2066.9375 Q7582.1406,2066.9375 7582.375,2067.1953 Q7582.6094,2067.4531 7582.6094,2068.0625 L7582.6094,2069.5156 Q7582.6094,2070.125 7582.375,2070.3906 Q7582.1406,2070.6563 7581.7656,2070.6563 Q7581.4219,2070.6563 7581.2188,2070.4531 Q7581.0156,2070.2656 7580.9063,2069.75 Q7580.8594,2069.3906 7580.6719,2069.2031 Q7580.3438,2068.8281 7579.7344,2068.6094 Q7579.125,2068.3906 7578.5,2068.3906 Q7577.7344,2068.3906 7577.1016,2068.7188 Q7576.4688,2069.0469 7575.9766,2069.7969 Q7575.4844,2070.5469 7575.4844,2071.5781 L7575.4844,2072.6719 Q7575.4844,2073.9063 7576.375,2074.7266 Q7577.2656,2075.5469 7578.8594,2075.5469 Q7579.7969,2075.5469 7580.4531,2075.2969 Q7580.8438,2075.1406 7581.2656,2074.7031 Q7581.5313,2074.4375 7581.6797,2074.3594 Q7581.8281,2074.2813 7582.0313,2074.2813 Q7582.3594,2074.2813 7582.6172,2074.5391 Q7582.875,2074.7969 7582.875,2075.1406 Q7582.875,2075.4844 7582.5313,2075.8906 Q7582.0313,2076.4688 7581.2344,2076.7969 Q7580.1563,2077.25 7578.8594,2077.25 Q7577.3438,2077.25 7576.1406,2076.625 Q7575.1563,2076.125 7574.4688,2075.0547 Q7573.7813,2073.9844 7573.7813,2072.7031 L7573.7813,2071.5469 Q7573.7813,2070.2188 7574.3984,2069.0703 Q7575.0156,2067.9219 7576.1094,2067.3047 Q7577.2031,2066.6875 7578.4375,2066.6875 Q7579.1719,2066.6875 7579.8203,2066.8516 Q7580.4688,2067.0156 7581.0156,2067.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="7598.75" y="2076.4102">PointLight</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7079.5" x2="8140.5" y1="2087.5" y2="2087.5"/><ellipse cx="7089.5" cy="2098.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="7098.5" y="2102.9189">cubicAttenuationCoefficient : float</text><ellipse cx="7089.5" cy="2112.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="7098.5" y="2116.7549">diffuseCoefficient : float</text><ellipse cx="7089.5" cy="2126.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="7098.5" y="2130.5908">intensity : float</text><ellipse cx="7089.5" cy="2140.0078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="7098.5" y="2144.4268">linearAttenuationCoefficient : float</text><ellipse cx="7089.5" cy="2153.8438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="7098.5" y="2158.2627">quadraticAttenuationCoefficient : float</text><ellipse cx="7089.5" cy="2167.6797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="7098.5" y="2172.0986">specularCoefficient : float</text><ellipse cx="7089.5" cy="2181.5156" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="7098.5" y="2185.9346">color : glm::vec3</text><ellipse cx="7089.5" cy="2195.3516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="7098.5" y="2199.7705">position : glm::vec3</text><ellipse cx="7089.5" cy="2209.1875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="7098.5" y="2213.6064">defaultCubicAttenuationCoefficient : static constexpr const float</text><ellipse cx="7089.5" cy="2223.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="261" x="7098.5" y="2227.4424">defaultDiffuseCoefficient : static constexpr const float</text><ellipse cx="7089.5" cy="2236.8594" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="7098.5" y="2241.2783">defaultIntensity : static constexpr const float</text><ellipse cx="7089.5" cy="2250.6953" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="311" x="7098.5" y="2255.1143">defaultLinearAttenuationCoefficient : static constexpr const float</text><ellipse cx="7089.5" cy="2264.5313" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="7098.5" y="2268.9502">defaultQuadraticAttenuationCoefficient : static constexpr const float</text><ellipse cx="7089.5" cy="2278.3672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="269" x="7098.5" y="2282.7861">defaultSpecularCoefficient : static constexpr const float</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7079.5" x2="8140.5" y1="2289.2031" y2="2289.2031"/><ellipse cx="7089.5" cy="2300.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="1037" x="7098.5" y="2304.6221">PointLight(glm::vec3 position, glm::vec3 color, float intensity, float specularCoefficient, float diffuseCoefficient, float linearAttenuationCoefficient, float quadraticAttenuationCoefficient, float cubicAttenuationCoefficient)</text><!--MD5=[f44a4babbd8e55cd721050df76baed32]
class eng.Properties--><rect codeLine="680" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="338.5547" id="eng.Properties" style="stroke:#A80036;stroke-width:1.5;" width="210" x="8177" y="2014"/><ellipse cx="8249.25" cy="2030" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8252.0156,2025.875 Q8252.1719,2025.6563 8252.3594,2025.5469 Q8252.5469,2025.4375 8252.7656,2025.4375 Q8253.1406,2025.4375 8253.375,2025.6953 Q8253.6094,2025.9531 8253.6094,2026.5625 L8253.6094,2028.0156 Q8253.6094,2028.625 8253.375,2028.8906 Q8253.1406,2029.1563 8252.7656,2029.1563 Q8252.4219,2029.1563 8252.2188,2028.9531 Q8252.0156,2028.7656 8251.9063,2028.25 Q8251.8594,2027.8906 8251.6719,2027.7031 Q8251.3438,2027.3281 8250.7344,2027.1094 Q8250.125,2026.8906 8249.5,2026.8906 Q8248.7344,2026.8906 8248.1016,2027.2188 Q8247.4688,2027.5469 8246.9766,2028.2969 Q8246.4844,2029.0469 8246.4844,2030.0781 L8246.4844,2031.1719 Q8246.4844,2032.4063 8247.375,2033.2266 Q8248.2656,2034.0469 8249.8594,2034.0469 Q8250.7969,2034.0469 8251.4531,2033.7969 Q8251.8438,2033.6406 8252.2656,2033.2031 Q8252.5313,2032.9375 8252.6797,2032.8594 Q8252.8281,2032.7813 8253.0313,2032.7813 Q8253.3594,2032.7813 8253.6172,2033.0391 Q8253.875,2033.2969 8253.875,2033.6406 Q8253.875,2033.9844 8253.5313,2034.3906 Q8253.0313,2034.9688 8252.2344,2035.2969 Q8251.1563,2035.75 8249.8594,2035.75 Q8248.3438,2035.75 8247.1406,2035.125 Q8246.1563,2034.625 8245.4688,2033.5547 Q8244.7813,2032.4844 8244.7813,2031.2031 L8244.7813,2030.0469 Q8244.7813,2028.7188 8245.3984,2027.5703 Q8246.0156,2026.4219 8247.1094,2025.8047 Q8248.2031,2025.1875 8249.4375,2025.1875 Q8250.1719,2025.1875 8250.8203,2025.3516 Q8251.4688,2025.5156 8252.0156,2025.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="8269.75" y="2034.9102">Properties</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8178" x2="8386" y1="2046" y2="2046"/><ellipse cx="8188" cy="2057" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="8197" y="2061.4189">cubemapDefaultFormat : bool</text><ellipse cx="8188" cy="2070.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="8197" y="2075.2549">drawBackface : bool</text><ellipse cx="8188" cy="2084.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="8197" y="2089.0908">drawingEnabled : bool</text><ellipse cx="8188" cy="2098.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="8197" y="2102.9268">isTransparent : bool</text><ellipse cx="8188" cy="2112.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="8197" y="2116.7627">meshInvertNormals : bool</text><ellipse cx="8188" cy="2126.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="8197" y="2130.5986">meshOnlyVertices : bool</text><ellipse cx="8188" cy="2140.0156" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="8197" y="2144.4346">wireframeMode : bool</text><ellipse cx="8188" cy="2153.8516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="8197" y="2158.2705">writeToDepthBuffer : bool</text><ellipse cx="8188" cy="2167.6875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="83" x="8197" y="2172.1064">meshScale : float</text><ellipse cx="8188" cy="2181.5234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="8197" y="2185.9424">flatColor : glm::vec3</text><ellipse cx="8188" cy="2195.3594" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="8197" y="2199.7783">transformPosition : glm::vec3</text><ellipse cx="8188" cy="2209.1953" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="8197" y="2213.6143">transformScale : glm::vec3</text><ellipse cx="8188" cy="2223.0313" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="8197" y="2227.4502">wireframeColor : glm::vec3</text><ellipse cx="8188" cy="2236.8672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="8197" y="2241.2861">cubemapImageFormat : std::string</text><ellipse cx="8188" cy="2250.7031" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="8197" y="2255.1221">cubemapTextureName : std::string</text><ellipse cx="8188" cy="2264.5391" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="8197" y="2268.958">diffuseTextureName : std::string</text><ellipse cx="8188" cy="2278.375" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="8197" y="2282.7939">displacementTextureName : std::string</text><ellipse cx="8188" cy="2292.2109" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="8197" y="2296.6299">meshFileName : std::string</text><ellipse cx="8188" cy="2306.0469" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="83" x="8197" y="2310.4658">name : std::string</text><ellipse cx="8188" cy="2319.8828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="8197" y="2324.3018">normalTextureName : std::string</text><ellipse cx="8188" cy="2333.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="8197" y="2338.1377">typeName : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8178" x2="8386" y1="2344.5547" y2="2344.5547"/><!--MD5=[7188e6c38c301aad2a814b6421558f75]
class eng.SSAOGeometryPassVertexShader--><rect codeLine="704" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="117.1797" id="eng.SSAOGeometryPassVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="4120" y="1601.5"/><ellipse cx="4260.25" cy="1617.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4263.0156,1613.375 Q4263.1719,1613.1563 4263.3594,1613.0469 Q4263.5469,1612.9375 4263.7656,1612.9375 Q4264.1406,1612.9375 4264.375,1613.1953 Q4264.6094,1613.4531 4264.6094,1614.0625 L4264.6094,1615.5156 Q4264.6094,1616.125 4264.375,1616.3906 Q4264.1406,1616.6563 4263.7656,1616.6563 Q4263.4219,1616.6563 4263.2188,1616.4531 Q4263.0156,1616.2656 4262.9063,1615.75 Q4262.8594,1615.3906 4262.6719,1615.2031 Q4262.3438,1614.8281 4261.7344,1614.6094 Q4261.125,1614.3906 4260.5,1614.3906 Q4259.7344,1614.3906 4259.1016,1614.7188 Q4258.4688,1615.0469 4257.9766,1615.7969 Q4257.4844,1616.5469 4257.4844,1617.5781 L4257.4844,1618.6719 Q4257.4844,1619.9063 4258.375,1620.7266 Q4259.2656,1621.5469 4260.8594,1621.5469 Q4261.7969,1621.5469 4262.4531,1621.2969 Q4262.8438,1621.1406 4263.2656,1620.7031 Q4263.5313,1620.4375 4263.6797,1620.3594 Q4263.8281,1620.2813 4264.0313,1620.2813 Q4264.3594,1620.2813 4264.6172,1620.5391 Q4264.875,1620.7969 4264.875,1621.1406 Q4264.875,1621.4844 4264.5313,1621.8906 Q4264.0313,1622.4688 4263.2344,1622.7969 Q4262.1563,1623.25 4260.8594,1623.25 Q4259.3438,1623.25 4258.1406,1622.625 Q4257.1563,1622.125 4256.4688,1621.0547 Q4255.7813,1619.9844 4255.7813,1618.7031 L4255.7813,1617.5469 Q4255.7813,1616.2188 4256.3984,1615.0703 Q4257.0156,1613.9219 4258.1094,1613.3047 Q4259.2031,1612.6875 4260.4375,1612.6875 Q4261.1719,1612.6875 4261.8203,1612.8516 Q4262.4688,1613.0156 4263.0156,1613.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="187" x="4280.75" y="1622.4102">SSAOGeometryPassVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4121" x2="4595" y1="1633.5" y2="1633.5"/><ellipse cx="4131" cy="1644.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="4140" y="1648.9189">bvs : BasicVertexShader</text><ellipse cx="4131" cy="1658.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="4140" y="1662.7549">uniform : VertexShaderUniform</text><ellipse cx="4131" cy="1672.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="4140" y="1676.5908">normalMatrix : glm::mat3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4121" x2="4595" y1="1683.0078" y2="1683.0078"/><ellipse cx="4131" cy="1694.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="4140" y="1698.4268">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="4131" cy="1707.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="4140" y="1712.2627">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[8613f5067175ef5ba0ad5f23a13c871b]
class eng.SSAOGeometryPassVertexShader::Output--><rect codeLine="712" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.SSAOGeometryPassVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="315" x="4240.5" y="2145.5"/><ellipse cx="4279.8" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4282.5656,2157.375 Q4282.7219,2157.1563 4282.9094,2157.0469 Q4283.0969,2156.9375 4283.3156,2156.9375 Q4283.6906,2156.9375 4283.925,2157.1953 Q4284.1594,2157.4531 4284.1594,2158.0625 L4284.1594,2159.5156 Q4284.1594,2160.125 4283.925,2160.3906 Q4283.6906,2160.6563 4283.3156,2160.6563 Q4282.9719,2160.6563 4282.7688,2160.4531 Q4282.5656,2160.2656 4282.4563,2159.75 Q4282.4094,2159.3906 4282.2219,2159.2031 Q4281.8938,2158.8281 4281.2844,2158.6094 Q4280.675,2158.3906 4280.05,2158.3906 Q4279.2844,2158.3906 4278.6516,2158.7188 Q4278.0188,2159.0469 4277.5266,2159.7969 Q4277.0344,2160.5469 4277.0344,2161.5781 L4277.0344,2162.6719 Q4277.0344,2163.9063 4277.925,2164.7266 Q4278.8156,2165.5469 4280.4094,2165.5469 Q4281.3469,2165.5469 4282.0031,2165.2969 Q4282.3938,2165.1406 4282.8156,2164.7031 Q4283.0813,2164.4375 4283.2297,2164.3594 Q4283.3781,2164.2813 4283.5813,2164.2813 Q4283.9094,2164.2813 4284.1672,2164.5391 Q4284.425,2164.7969 4284.425,2165.1406 Q4284.425,2165.4844 4284.0813,2165.8906 Q4283.5813,2166.4688 4282.7844,2166.7969 Q4281.7063,2167.25 4280.4094,2167.25 Q4278.8938,2167.25 4277.6906,2166.625 Q4276.7063,2166.125 4276.0188,2165.0547 Q4275.3313,2163.9844 4275.3313,2162.7031 L4275.3313,2161.5469 Q4275.3313,2160.2188 4275.9484,2159.0703 Q4276.5656,2157.9219 4277.6594,2157.3047 Q4278.7531,2156.6875 4279.9875,2156.6875 Q4280.7219,2156.6875 4281.3703,2156.8516 Q4282.0188,2157.0156 4282.5656,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="229" x="4299.2" y="2166.4102">SSAOGeometryPassVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4241.5" x2="4554.5" y1="2177.5" y2="2177.5"/><ellipse cx="4251.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="4260.5" y="2192.9189">uniformOutput : GeometryPassShader::VertexShaderOutput</text><ellipse cx="4251.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="4260.5" y="2206.7549">triangle : Triangle&lt;GeometryPassShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="4241.5" x2="4554.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[e79bfb5f85d560691f5e75343c4ad57c]
class eng.ShadowMappingInfo--><rect codeLine="717" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.ShadowMappingInfo" style="stroke:#A80036;stroke-width:1.5;" width="318" x="7343" y="1133.5"/><ellipse cx="7441.75" cy="1149.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7444.5156,1145.375 Q7444.6719,1145.1563 7444.8594,1145.0469 Q7445.0469,1144.9375 7445.2656,1144.9375 Q7445.6406,1144.9375 7445.875,1145.1953 Q7446.1094,1145.4531 7446.1094,1146.0625 L7446.1094,1147.5156 Q7446.1094,1148.125 7445.875,1148.3906 Q7445.6406,1148.6563 7445.2656,1148.6563 Q7444.9219,1148.6563 7444.7188,1148.4531 Q7444.5156,1148.2656 7444.4063,1147.75 Q7444.3594,1147.3906 7444.1719,1147.2031 Q7443.8438,1146.8281 7443.2344,1146.6094 Q7442.625,1146.3906 7442,1146.3906 Q7441.2344,1146.3906 7440.6016,1146.7188 Q7439.9688,1147.0469 7439.4766,1147.7969 Q7438.9844,1148.5469 7438.9844,1149.5781 L7438.9844,1150.6719 Q7438.9844,1151.9063 7439.875,1152.7266 Q7440.7656,1153.5469 7442.3594,1153.5469 Q7443.2969,1153.5469 7443.9531,1153.2969 Q7444.3438,1153.1406 7444.7656,1152.7031 Q7445.0313,1152.4375 7445.1797,1152.3594 Q7445.3281,1152.2813 7445.5313,1152.2813 Q7445.8594,1152.2813 7446.1172,1152.5391 Q7446.375,1152.7969 7446.375,1153.1406 Q7446.375,1153.4844 7446.0313,1153.8906 Q7445.5313,1154.4688 7444.7344,1154.7969 Q7443.6563,1155.25 7442.3594,1155.25 Q7440.8438,1155.25 7439.6406,1154.625 Q7438.6563,1154.125 7437.9688,1153.0547 Q7437.2813,1151.9844 7437.2813,1150.7031 L7437.2813,1149.5469 Q7437.2813,1148.2188 7437.8984,1147.0703 Q7438.5156,1145.9219 7439.6094,1145.3047 Q7440.7031,1144.6875 7441.9375,1144.6875 Q7442.6719,1144.6875 7443.3203,1144.8516 Q7443.9688,1145.0156 7444.5156,1145.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="112" x="7462.25" y="1154.4102">ShadowMappingInfo</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7344" x2="7660" y1="1165.5" y2="1165.5"/><ellipse cx="7354" cy="1176.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="7363" y="1180.9189">depthMap : std::reference_wrapper&lt;const DepthBuffer&gt;</text><ellipse cx="7354" cy="1190.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="7363" y="1194.7549">lightSpaceMatrix : std::reference_wrapper&lt;const glm::mat4&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7344" x2="7660" y1="1201.1719" y2="1201.1719"/><!--MD5=[e4397d80ac0e29fd740b2888ab9cbb3d]
class eng.Texture--><rect codeLine="722" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="144.8516" id="eng.Texture" style="stroke:#A80036;stroke-width:1.5;" width="220" x="8879" y="1587.5"/><ellipse cx="8964.75" cy="1603.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8967.5156,1599.375 Q8967.6719,1599.1563 8967.8594,1599.0469 Q8968.0469,1598.9375 8968.2656,1598.9375 Q8968.6406,1598.9375 8968.875,1599.1953 Q8969.1094,1599.4531 8969.1094,1600.0625 L8969.1094,1601.5156 Q8969.1094,1602.125 8968.875,1602.3906 Q8968.6406,1602.6563 8968.2656,1602.6563 Q8967.9219,1602.6563 8967.7188,1602.4531 Q8967.5156,1602.2656 8967.4063,1601.75 Q8967.3594,1601.3906 8967.1719,1601.2031 Q8966.8438,1600.8281 8966.2344,1600.6094 Q8965.625,1600.3906 8965,1600.3906 Q8964.2344,1600.3906 8963.6016,1600.7188 Q8962.9688,1601.0469 8962.4766,1601.7969 Q8961.9844,1602.5469 8961.9844,1603.5781 L8961.9844,1604.6719 Q8961.9844,1605.9063 8962.875,1606.7266 Q8963.7656,1607.5469 8965.3594,1607.5469 Q8966.2969,1607.5469 8966.9531,1607.2969 Q8967.3438,1607.1406 8967.7656,1606.7031 Q8968.0313,1606.4375 8968.1797,1606.3594 Q8968.3281,1606.2813 8968.5313,1606.2813 Q8968.8594,1606.2813 8969.1172,1606.5391 Q8969.375,1606.7969 8969.375,1607.1406 Q8969.375,1607.4844 8969.0313,1607.8906 Q8968.5313,1608.4688 8967.7344,1608.7969 Q8966.6563,1609.25 8965.3594,1609.25 Q8963.8438,1609.25 8962.6406,1608.625 Q8961.6563,1608.125 8960.9688,1607.0547 Q8960.2813,1605.9844 8960.2813,1604.7031 L8960.2813,1603.5469 Q8960.2813,1602.2188 8960.8984,1601.0703 Q8961.5156,1599.9219 8962.6094,1599.3047 Q8963.7031,1598.6875 8964.9375,1598.6875 Q8965.6719,1598.6875 8966.3203,1598.8516 Q8966.9688,1599.0156 8967.5156,1599.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="8985.25" y="1608.4102">Texture</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8880" x2="9098" y1="1619.5" y2="1619.5"/><ellipse cx="8890" cy="1630.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="8899" y="1634.9189">colorBuffer : ColorBuffer128</text><ellipse cx="8890" cy="1644.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="8899" y="1648.7549">textureHeight : Pixels</text><ellipse cx="8890" cy="1658.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="8899" y="1662.5908">textureWidth : Pixels</text><ellipse cx="8890" cy="1672.0078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="8899" y="1676.4268">fileName : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8880" x2="9098" y1="1682.8438" y2="1682.8438"/><ellipse cx="8890" cy="1693.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="8899" y="1698.2627">Texture()</text><ellipse cx="8890" cy="1707.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="8899" y="1712.0986">Texture(const std::string&amp; file)</text><ellipse cx="8890" cy="1721.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="8899" y="1725.9346">sample(glm::vec2 uv) : Color128 {query}</text><!--MD5=[ca44be5367026cbbf1714282a145197f]
class eng.TextureShader--><rect codeLine="732" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.TextureShader" style="stroke:#A80036;stroke-width:1.5;" width="434" x="3705" y="2454.5"/><ellipse cx="3877.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3880.5156,2466.375 Q3880.6719,2466.1563 3880.8594,2466.0469 Q3881.0469,2465.9375 3881.2656,2465.9375 Q3881.6406,2465.9375 3881.875,2466.1953 Q3882.1094,2466.4531 3882.1094,2467.0625 L3882.1094,2468.5156 Q3882.1094,2469.125 3881.875,2469.3906 Q3881.6406,2469.6563 3881.2656,2469.6563 Q3880.9219,2469.6563 3880.7188,2469.4531 Q3880.5156,2469.2656 3880.4063,2468.75 Q3880.3594,2468.3906 3880.1719,2468.2031 Q3879.8438,2467.8281 3879.2344,2467.6094 Q3878.625,2467.3906 3878,2467.3906 Q3877.2344,2467.3906 3876.6016,2467.7188 Q3875.9688,2468.0469 3875.4766,2468.7969 Q3874.9844,2469.5469 3874.9844,2470.5781 L3874.9844,2471.6719 Q3874.9844,2472.9063 3875.875,2473.7266 Q3876.7656,2474.5469 3878.3594,2474.5469 Q3879.2969,2474.5469 3879.9531,2474.2969 Q3880.3438,2474.1406 3880.7656,2473.7031 Q3881.0313,2473.4375 3881.1797,2473.3594 Q3881.3281,2473.2813 3881.5313,2473.2813 Q3881.8594,2473.2813 3882.1172,2473.5391 Q3882.375,2473.7969 3882.375,2474.1406 Q3882.375,2474.4844 3882.0313,2474.8906 Q3881.5313,2475.4688 3880.7344,2475.7969 Q3879.6563,2476.25 3878.3594,2476.25 Q3876.8438,2476.25 3875.6406,2475.625 Q3874.6563,2475.125 3873.9688,2474.0547 Q3873.2813,2472.9844 3873.2813,2471.7031 L3873.2813,2470.5469 Q3873.2813,2469.2188 3873.8984,2468.0703 Q3874.5156,2466.9219 3875.6094,2466.3047 Q3876.7031,2465.6875 3877.9375,2465.6875 Q3878.6719,2465.6875 3879.3203,2465.8516 Q3879.9688,2466.0156 3880.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="80" x="3898.25" y="2475.4102">TextureShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3706" x2="4138" y1="2486.5" y2="2486.5"/><ellipse cx="3716" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="3725" y="2501.9189">vso : EmptyStruct</text><ellipse cx="3716" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="3725" y="2515.7549">uniform : FragmentShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3706" x2="4138" y1="2522.1719" y2="2522.1719"/><ellipse cx="3716" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="3725" y="2537.5908">computePixelColor(OneVariable&lt;glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[8b1344206df57fc6dd80201fcac6605b]
class eng.TextureVertexShader--><rect codeLine="738" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="103.3438" id="eng.TextureVertexShader" style="stroke:#A80036;stroke-width:1.5;" width="476" x="2587" y="1608.5"/><ellipse cx="2764.25" cy="1624.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2767.0156,1620.375 Q2767.1719,1620.1563 2767.3594,1620.0469 Q2767.5469,1619.9375 2767.7656,1619.9375 Q2768.1406,1619.9375 2768.375,1620.1953 Q2768.6094,1620.4531 2768.6094,1621.0625 L2768.6094,1622.5156 Q2768.6094,1623.125 2768.375,1623.3906 Q2768.1406,1623.6563 2767.7656,1623.6563 Q2767.4219,1623.6563 2767.2188,1623.4531 Q2767.0156,1623.2656 2766.9063,1622.75 Q2766.8594,1622.3906 2766.6719,1622.2031 Q2766.3438,1621.8281 2765.7344,1621.6094 Q2765.125,1621.3906 2764.5,1621.3906 Q2763.7344,1621.3906 2763.1016,1621.7188 Q2762.4688,1622.0469 2761.9766,1622.7969 Q2761.4844,1623.5469 2761.4844,1624.5781 L2761.4844,1625.6719 Q2761.4844,1626.9063 2762.375,1627.7266 Q2763.2656,1628.5469 2764.8594,1628.5469 Q2765.7969,1628.5469 2766.4531,1628.2969 Q2766.8438,1628.1406 2767.2656,1627.7031 Q2767.5313,1627.4375 2767.6797,1627.3594 Q2767.8281,1627.2813 2768.0313,1627.2813 Q2768.3594,1627.2813 2768.6172,1627.5391 Q2768.875,1627.7969 2768.875,1628.1406 Q2768.875,1628.4844 2768.5313,1628.8906 Q2768.0313,1629.4688 2767.2344,1629.7969 Q2766.1563,1630.25 2764.8594,1630.25 Q2763.3438,1630.25 2762.1406,1629.625 Q2761.1563,1629.125 2760.4688,1628.0547 Q2759.7813,1626.9844 2759.7813,1625.7031 L2759.7813,1624.5469 Q2759.7813,1623.2188 2760.3984,1622.0703 Q2761.0156,1620.9219 2762.1094,1620.3047 Q2763.2031,1619.6875 2764.4375,1619.6875 Q2765.1719,1619.6875 2765.8203,1619.8516 Q2766.4688,1620.0156 2767.0156,1620.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="113" x="2784.75" y="1629.4102">TextureVertexShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2588" x2="3062" y1="1640.5" y2="1640.5"/><ellipse cx="2598" cy="1651.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="2607" y="1655.9189">bvs : BasicVertexShader</text><ellipse cx="2598" cy="1665.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="2607" y="1669.7549">uniform : VertexShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2588" x2="3062" y1="1676.1719" y2="1676.1719"/><ellipse cx="2598" cy="1687.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="2607" y="1691.5908">run(const WorldSpaceTriangle&amp; tr) : Output</text><ellipse cx="2598" cy="1701.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="450" x="2607" y="1705.4268">setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void</text><!--MD5=[673871102c71f42f793ece64293679ac]
class eng.TextureVertexShader::Output--><rect codeLine="745" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="75.6719" id="eng.TextureVertexShader::Output" style="stroke:#A80036;stroke-width:1.5;" width="281" x="3139.5" y="2145.5"/><ellipse cx="3198.25" cy="2161.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3201.0156,2157.375 Q3201.1719,2157.1563 3201.3594,2157.0469 Q3201.5469,2156.9375 3201.7656,2156.9375 Q3202.1406,2156.9375 3202.375,2157.1953 Q3202.6094,2157.4531 3202.6094,2158.0625 L3202.6094,2159.5156 Q3202.6094,2160.125 3202.375,2160.3906 Q3202.1406,2160.6563 3201.7656,2160.6563 Q3201.4219,2160.6563 3201.2188,2160.4531 Q3201.0156,2160.2656 3200.9063,2159.75 Q3200.8594,2159.3906 3200.6719,2159.2031 Q3200.3438,2158.8281 3199.7344,2158.6094 Q3199.125,2158.3906 3198.5,2158.3906 Q3197.7344,2158.3906 3197.1016,2158.7188 Q3196.4688,2159.0469 3195.9766,2159.7969 Q3195.4844,2160.5469 3195.4844,2161.5781 L3195.4844,2162.6719 Q3195.4844,2163.9063 3196.375,2164.7266 Q3197.2656,2165.5469 3198.8594,2165.5469 Q3199.7969,2165.5469 3200.4531,2165.2969 Q3200.8438,2165.1406 3201.2656,2164.7031 Q3201.5313,2164.4375 3201.6797,2164.3594 Q3201.8281,2164.2813 3202.0313,2164.2813 Q3202.3594,2164.2813 3202.6172,2164.5391 Q3202.875,2164.7969 3202.875,2165.1406 Q3202.875,2165.4844 3202.5313,2165.8906 Q3202.0313,2166.4688 3201.2344,2166.7969 Q3200.1563,2167.25 3198.8594,2167.25 Q3197.3438,2167.25 3196.1406,2166.625 Q3195.1563,2166.125 3194.4688,2165.0547 Q3193.7813,2163.9844 3193.7813,2162.7031 L3193.7813,2161.5469 Q3193.7813,2160.2188 3194.3984,2159.0703 Q3195.0156,2157.9219 3196.1094,2157.3047 Q3197.2031,2156.6875 3198.4375,2156.6875 Q3199.1719,2156.6875 3199.8203,2156.8516 Q3200.4688,2157.0156 3201.0156,2157.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="155" x="3218.75" y="2166.4102">TextureVertexShader::Output</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3140.5" x2="3419.5" y1="2177.5" y2="2177.5"/><ellipse cx="3150.5" cy="2188.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="3159.5" y="2192.9189">uniformOutput : TextureShader::VertexShaderOutput</text><ellipse cx="3150.5" cy="2202.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="3159.5" y="2206.7549">triangle : Triangle&lt;TextureShader::Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3140.5" x2="3419.5" y1="2213.1719" y2="2213.1719"/><!--MD5=[2d7de6cf64cf7b7edf6349fd1c33c88f]
class eng.ThreeVariables--><rect codeLine="750" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="131.0156" id="eng.ThreeVariables" style="stroke:#A80036;stroke-width:1.5;" width="410" x="8422" y="2118"/><ellipse cx="8437" cy="2134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8439.7656,2129.875 Q8439.9219,2129.6563 8440.1094,2129.5469 Q8440.2969,2129.4375 8440.5156,2129.4375 Q8440.8906,2129.4375 8441.125,2129.6953 Q8441.3594,2129.9531 8441.3594,2130.5625 L8441.3594,2132.0156 Q8441.3594,2132.625 8441.125,2132.8906 Q8440.8906,2133.1563 8440.5156,2133.1563 Q8440.1719,2133.1563 8439.9688,2132.9531 Q8439.7656,2132.7656 8439.6563,2132.25 Q8439.6094,2131.8906 8439.4219,2131.7031 Q8439.0938,2131.3281 8438.4844,2131.1094 Q8437.875,2130.8906 8437.25,2130.8906 Q8436.4844,2130.8906 8435.8516,2131.2188 Q8435.2188,2131.5469 8434.7266,2132.2969 Q8434.2344,2133.0469 8434.2344,2134.0781 L8434.2344,2135.1719 Q8434.2344,2136.4063 8435.125,2137.2266 Q8436.0156,2138.0469 8437.6094,2138.0469 Q8438.5469,2138.0469 8439.2031,2137.7969 Q8439.5938,2137.6406 8440.0156,2137.2031 Q8440.2813,2136.9375 8440.4297,2136.8594 Q8440.5781,2136.7813 8440.7813,2136.7813 Q8441.1094,2136.7813 8441.3672,2137.0391 Q8441.625,2137.2969 8441.625,2137.6406 Q8441.625,2137.9844 8441.2813,2138.3906 Q8440.7813,2138.9688 8439.9844,2139.2969 Q8438.9063,2139.75 8437.6094,2139.75 Q8436.0938,2139.75 8434.8906,2139.125 Q8433.9063,2138.625 8433.2188,2137.5547 Q8432.5313,2136.4844 8432.5313,2135.2031 L8432.5313,2134.0469 Q8432.5313,2132.7188 8433.1484,2131.5703 Q8433.7656,2130.4219 8434.8594,2129.8047 Q8435.9531,2129.1875 8437.1875,2129.1875 Q8437.9219,2129.1875 8438.5703,2129.3516 Q8439.2188,2129.5156 8439.7656,2129.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="84" x="8451" y="2138.9102">ThreeVariables</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="292" x="8543" y="2115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="290" x="8544" y="2128.457">template&lt;typename T1, typename T2, typename T3&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8423" x2="8831" y1="2150" y2="2150"/><ellipse cx="8433" cy="2161" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="8442" y="2165.4189">t1 : T1</text><ellipse cx="8433" cy="2174.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="8442" y="2179.2549">t2 : T2</text><ellipse cx="8433" cy="2188.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="8442" y="2193.0908">t3 : T3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8423" x2="8831" y1="2199.5078" y2="2199.5078"/><ellipse cx="8433" cy="2210.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="8442" y="2214.9268">operator*(float t) : ThreeVariables {query}</text><ellipse cx="8433" cy="2224.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="8442" y="2228.7627">operator+(const ThreeVariables&amp; oth) : ThreeVariables {query}</text><ellipse cx="8433" cy="2238.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="8442" y="2242.5986">operator*=(float t) : void</text><!--MD5=[957fc8a8f318d96d21685cb3d470155b]
class eng.TransformationConversion--><rect codeLine="759" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.TransformationConversion" style="stroke:#A80036;stroke-width:1.5;" width="597" x="8867.5" y="2152.5"/><ellipse cx="8882.5" cy="2168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8885.2656,2164.375 Q8885.4219,2164.1563 8885.6094,2164.0469 Q8885.7969,2163.9375 8886.0156,2163.9375 Q8886.3906,2163.9375 8886.625,2164.1953 Q8886.8594,2164.4531 8886.8594,2165.0625 L8886.8594,2166.5156 Q8886.8594,2167.125 8886.625,2167.3906 Q8886.3906,2167.6563 8886.0156,2167.6563 Q8885.6719,2167.6563 8885.4688,2167.4531 Q8885.2656,2167.2656 8885.1563,2166.75 Q8885.1094,2166.3906 8884.9219,2166.2031 Q8884.5938,2165.8281 8883.9844,2165.6094 Q8883.375,2165.3906 8882.75,2165.3906 Q8881.9844,2165.3906 8881.3516,2165.7188 Q8880.7188,2166.0469 8880.2266,2166.7969 Q8879.7344,2167.5469 8879.7344,2168.5781 L8879.7344,2169.6719 Q8879.7344,2170.9063 8880.625,2171.7266 Q8881.5156,2172.5469 8883.1094,2172.5469 Q8884.0469,2172.5469 8884.7031,2172.2969 Q8885.0938,2172.1406 8885.5156,2171.7031 Q8885.7813,2171.4375 8885.9297,2171.3594 Q8886.0781,2171.2813 8886.2813,2171.2813 Q8886.6094,2171.2813 8886.8672,2171.5391 Q8887.125,2171.7969 8887.125,2172.1406 Q8887.125,2172.4844 8886.7813,2172.8906 Q8886.2813,2173.4688 8885.4844,2173.7969 Q8884.4063,2174.25 8883.1094,2174.25 Q8881.5938,2174.25 8880.3906,2173.625 Q8879.4063,2173.125 8878.7188,2172.0547 Q8878.0313,2170.9844 8878.0313,2169.7031 L8878.0313,2168.5469 Q8878.0313,2167.2188 8878.6484,2166.0703 Q8879.2656,2164.9219 8880.3594,2164.3047 Q8881.4531,2163.6875 8882.6875,2163.6875 Q8883.4219,2163.6875 8884.0703,2163.8516 Q8884.7188,2164.0156 8885.2656,2164.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="147" x="8896.5" y="2173.4102">TransformationConversion</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="416" x="9051.5" y="2149.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="414" x="9052.5" y="2162.957">template&lt;typename Color1, typename Color2, typename T1, typename T2&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8868.5" x2="9463.5" y1="2184.5" y2="2184.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8868.5" x2="9463.5" y1="2192.5" y2="2192.5"/><ellipse cx="8878.5" cy="2203.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="168" x="8887.5" y="2207.9189">convertColor(Color1 color) : Color2</text><!--MD5=[9acee0ffed9554a34efbc69944b99677]
class eng.TransformationConversionColor,Color,T1,T2--><rect codeLine="763" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.TransformationConversionColor,Color,T1,T2" style="stroke:#A80036;stroke-width:1.5;" width="586" x="9500" y="2152.5"/><ellipse cx="9515" cy="2168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9517.7656,2164.375 Q9517.9219,2164.1563 9518.1094,2164.0469 Q9518.2969,2163.9375 9518.5156,2163.9375 Q9518.8906,2163.9375 9519.125,2164.1953 Q9519.3594,2164.4531 9519.3594,2165.0625 L9519.3594,2166.5156 Q9519.3594,2167.125 9519.125,2167.3906 Q9518.8906,2167.6563 9518.5156,2167.6563 Q9518.1719,2167.6563 9517.9688,2167.4531 Q9517.7656,2167.2656 9517.6563,2166.75 Q9517.6094,2166.3906 9517.4219,2166.2031 Q9517.0938,2165.8281 9516.4844,2165.6094 Q9515.875,2165.3906 9515.25,2165.3906 Q9514.4844,2165.3906 9513.8516,2165.7188 Q9513.2188,2166.0469 9512.7266,2166.7969 Q9512.2344,2167.5469 9512.2344,2168.5781 L9512.2344,2169.6719 Q9512.2344,2170.9063 9513.125,2171.7266 Q9514.0156,2172.5469 9515.6094,2172.5469 Q9516.5469,2172.5469 9517.2031,2172.2969 Q9517.5938,2172.1406 9518.0156,2171.7031 Q9518.2813,2171.4375 9518.4297,2171.3594 Q9518.5781,2171.2813 9518.7813,2171.2813 Q9519.1094,2171.2813 9519.3672,2171.5391 Q9519.625,2171.7969 9519.625,2172.1406 Q9519.625,2172.4844 9519.2813,2172.8906 Q9518.7813,2173.4688 9517.9844,2173.7969 Q9516.9063,2174.25 9515.6094,2174.25 Q9514.0938,2174.25 9512.8906,2173.625 Q9511.9063,2173.125 9511.2188,2172.0547 Q9510.5313,2170.9844 9510.5313,2169.7031 L9510.5313,2168.5469 Q9510.5313,2167.2188 9511.1484,2166.0703 Q9511.7656,2164.9219 9512.8594,2164.3047 Q9513.9531,2163.6875 9515.1875,2163.6875 Q9515.9219,2163.6875 9516.5703,2163.8516 Q9517.2188,2164.0156 9517.7656,2164.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="244" x="9529" y="2173.4102">TransformationConversionColor,Color,T1,T2</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="308" x="9781" y="2149.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="306" x="9782" y="2162.957">template&lt;typename Color, typename T1, typename T2&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="9501" x2="10085" y1="2184.5" y2="2184.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="9501" x2="10085" y1="2192.5" y2="2192.5"/><ellipse cx="9511" cy="2203.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="9520" y="2207.9189">convertColor(Color color) : Color</text><!--MD5=[4b6d9b483dd58f2472f995239271feda]
class eng.TransformationConversionColor128,Color32,T1,T2--><rect codeLine="767" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.TransformationConversionColor128,Color32,T1,T2" style="stroke:#A80036;stroke-width:1.5;" width="527" x="10121.5" y="2152.5"/><ellipse cx="10136.5" cy="2168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10139.2656,2164.375 Q10139.4219,2164.1563 10139.6094,2164.0469 Q10139.7969,2163.9375 10140.0156,2163.9375 Q10140.3906,2163.9375 10140.625,2164.1953 Q10140.8594,2164.4531 10140.8594,2165.0625 L10140.8594,2166.5156 Q10140.8594,2167.125 10140.625,2167.3906 Q10140.3906,2167.6563 10140.0156,2167.6563 Q10139.6719,2167.6563 10139.4688,2167.4531 Q10139.2656,2167.2656 10139.1563,2166.75 Q10139.1094,2166.3906 10138.9219,2166.2031 Q10138.5938,2165.8281 10137.9844,2165.6094 Q10137.375,2165.3906 10136.75,2165.3906 Q10135.9844,2165.3906 10135.3516,2165.7188 Q10134.7188,2166.0469 10134.2266,2166.7969 Q10133.7344,2167.5469 10133.7344,2168.5781 L10133.7344,2169.6719 Q10133.7344,2170.9063 10134.625,2171.7266 Q10135.5156,2172.5469 10137.1094,2172.5469 Q10138.0469,2172.5469 10138.7031,2172.2969 Q10139.0938,2172.1406 10139.5156,2171.7031 Q10139.7813,2171.4375 10139.9297,2171.3594 Q10140.0781,2171.2813 10140.2813,2171.2813 Q10140.6094,2171.2813 10140.8672,2171.5391 Q10141.125,2171.7969 10141.125,2172.1406 Q10141.125,2172.4844 10140.7813,2172.8906 Q10140.2813,2173.4688 10139.4844,2173.7969 Q10138.4063,2174.25 10137.1094,2174.25 Q10135.5938,2174.25 10134.3906,2173.625 Q10133.4063,2173.125 10132.7188,2172.0547 Q10132.0313,2170.9844 10132.0313,2169.7031 L10132.0313,2168.5469 Q10132.0313,2167.2188 10132.6484,2166.0703 Q10133.2656,2164.9219 10134.3594,2164.3047 Q10135.4531,2163.6875 10136.6875,2163.6875 Q10137.4219,2163.6875 10138.0703,2163.8516 Q10138.7188,2164.0156 10139.2656,2164.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="279" x="10150.5" y="2173.4102">TransformationConversionColor128,Color32,T1,T2</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="214" x="10437.5" y="2149.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="212" x="10438.5" y="2162.957">template&lt;typename T1, typename T2&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10122.5" x2="10647.5" y1="2184.5" y2="2184.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="10122.5" x2="10647.5" y1="2192.5" y2="2192.5"/><ellipse cx="10132.5" cy="2203.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="10141.5" y="2207.9189">convertColor(Color128 color) : Color32</text><!--MD5=[244a5a6c972d10aa87e7f6c0244cbebf]
class eng.TransformationConversionColor32,Color128,T1,T2--><rect codeLine="771" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.TransformationConversionColor32,Color128,T1,T2" style="stroke:#A80036;stroke-width:1.5;" width="527" x="7346.5" y="2468.5"/><ellipse cx="7361.5" cy="2484.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7364.2656,2480.375 Q7364.4219,2480.1563 7364.6094,2480.0469 Q7364.7969,2479.9375 7365.0156,2479.9375 Q7365.3906,2479.9375 7365.625,2480.1953 Q7365.8594,2480.4531 7365.8594,2481.0625 L7365.8594,2482.5156 Q7365.8594,2483.125 7365.625,2483.3906 Q7365.3906,2483.6563 7365.0156,2483.6563 Q7364.6719,2483.6563 7364.4688,2483.4531 Q7364.2656,2483.2656 7364.1563,2482.75 Q7364.1094,2482.3906 7363.9219,2482.2031 Q7363.5938,2481.8281 7362.9844,2481.6094 Q7362.375,2481.3906 7361.75,2481.3906 Q7360.9844,2481.3906 7360.3516,2481.7188 Q7359.7188,2482.0469 7359.2266,2482.7969 Q7358.7344,2483.5469 7358.7344,2484.5781 L7358.7344,2485.6719 Q7358.7344,2486.9063 7359.625,2487.7266 Q7360.5156,2488.5469 7362.1094,2488.5469 Q7363.0469,2488.5469 7363.7031,2488.2969 Q7364.0938,2488.1406 7364.5156,2487.7031 Q7364.7813,2487.4375 7364.9297,2487.3594 Q7365.0781,2487.2813 7365.2813,2487.2813 Q7365.6094,2487.2813 7365.8672,2487.5391 Q7366.125,2487.7969 7366.125,2488.1406 Q7366.125,2488.4844 7365.7813,2488.8906 Q7365.2813,2489.4688 7364.4844,2489.7969 Q7363.4063,2490.25 7362.1094,2490.25 Q7360.5938,2490.25 7359.3906,2489.625 Q7358.4063,2489.125 7357.7188,2488.0547 Q7357.0313,2486.9844 7357.0313,2485.7031 L7357.0313,2484.5469 Q7357.0313,2483.2188 7357.6484,2482.0703 Q7358.2656,2480.9219 7359.3594,2480.3047 Q7360.4531,2479.6875 7361.6875,2479.6875 Q7362.4219,2479.6875 7363.0703,2479.8516 Q7363.7188,2480.0156 7364.2656,2480.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="279" x="7375.5" y="2489.4102">TransformationConversionColor32,Color128,T1,T2</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="214" x="7662.5" y="2465.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="212" x="7663.5" y="2478.957">template&lt;typename T1, typename T2&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7347.5" x2="7872.5" y1="2500.5" y2="2500.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="7347.5" x2="7872.5" y1="2508.5" y2="2508.5"/><ellipse cx="7357.5" cy="2519.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="7366.5" y="2523.9189">convertColor(Color32 color) : Color128</text><!--MD5=[4effb292d18e6bcb235068c0c274e07a]
class eng.TransparentTriangle--><rect codeLine="775" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.TransparentTriangle" style="stroke:#A80036;stroke-width:1.5;" width="166" x="7909" y="2454.5"/><ellipse cx="7933.9" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7936.6656,2466.375 Q7936.8219,2466.1563 7937.0094,2466.0469 Q7937.1969,2465.9375 7937.4156,2465.9375 Q7937.7906,2465.9375 7938.025,2466.1953 Q7938.2594,2466.4531 7938.2594,2467.0625 L7938.2594,2468.5156 Q7938.2594,2469.125 7938.025,2469.3906 Q7937.7906,2469.6563 7937.4156,2469.6563 Q7937.0719,2469.6563 7936.8688,2469.4531 Q7936.6656,2469.2656 7936.5563,2468.75 Q7936.5094,2468.3906 7936.3219,2468.2031 Q7935.9938,2467.8281 7935.3844,2467.6094 Q7934.775,2467.3906 7934.15,2467.3906 Q7933.3844,2467.3906 7932.7516,2467.7188 Q7932.1188,2468.0469 7931.6266,2468.7969 Q7931.1344,2469.5469 7931.1344,2470.5781 L7931.1344,2471.6719 Q7931.1344,2472.9063 7932.025,2473.7266 Q7932.9156,2474.5469 7934.5094,2474.5469 Q7935.4469,2474.5469 7936.1031,2474.2969 Q7936.4938,2474.1406 7936.9156,2473.7031 Q7937.1813,2473.4375 7937.3297,2473.3594 Q7937.4781,2473.2813 7937.6813,2473.2813 Q7938.0094,2473.2813 7938.2672,2473.5391 Q7938.525,2473.7969 7938.525,2474.1406 Q7938.525,2474.4844 7938.1813,2474.8906 Q7937.6813,2475.4688 7936.8844,2475.7969 Q7935.8063,2476.25 7934.5094,2476.25 Q7932.9938,2476.25 7931.7906,2475.625 Q7930.8063,2475.125 7930.1188,2474.0547 Q7929.4313,2472.9844 7929.4313,2471.7031 L7929.4313,2470.5469 Q7929.4313,2469.2188 7930.0484,2468.0703 Q7930.6656,2466.9219 7931.7594,2466.3047 Q7932.8531,2465.6875 7934.0875,2465.6875 Q7934.8219,2465.6875 7935.4703,2465.8516 Q7936.1188,2466.0156 7936.6656,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="112" x="7950.1" y="2475.4102">TransparentTriangle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7910" x2="8074" y1="2486.5" y2="2486.5"/><ellipse cx="7920" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="7929" y="2501.9189">distance : float</text><ellipse cx="7920" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="7929" y="2515.7549">faceIndex : size_t</text><ellipse cx="7920" cy="2525.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="7929" y="2529.5908">meshName : std::string_view</text><line style="stroke:#A80036;stroke-width:1.5;" x1="7910" x2="8074" y1="2536.0078" y2="2536.0078"/><!--MD5=[533d421e40a91516ff6cdc83e22fa2d0]
class eng.Triangle--><rect codeLine="781" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="131.0156" id="eng.Triangle" style="stroke:#A80036;stroke-width:1.5;" width="220" x="3450" y="2434"/><ellipse cx="3465" cy="2450" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3467.7656,2445.875 Q3467.9219,2445.6563 3468.1094,2445.5469 Q3468.2969,2445.4375 3468.5156,2445.4375 Q3468.8906,2445.4375 3469.125,2445.6953 Q3469.3594,2445.9531 3469.3594,2446.5625 L3469.3594,2448.0156 Q3469.3594,2448.625 3469.125,2448.8906 Q3468.8906,2449.1563 3468.5156,2449.1563 Q3468.1719,2449.1563 3467.9688,2448.9531 Q3467.7656,2448.7656 3467.6563,2448.25 Q3467.6094,2447.8906 3467.4219,2447.7031 Q3467.0938,2447.3281 3466.4844,2447.1094 Q3465.875,2446.8906 3465.25,2446.8906 Q3464.4844,2446.8906 3463.8516,2447.2188 Q3463.2188,2447.5469 3462.7266,2448.2969 Q3462.2344,2449.0469 3462.2344,2450.0781 L3462.2344,2451.1719 Q3462.2344,2452.4063 3463.125,2453.2266 Q3464.0156,2454.0469 3465.6094,2454.0469 Q3466.5469,2454.0469 3467.2031,2453.7969 Q3467.5938,2453.6406 3468.0156,2453.2031 Q3468.2813,2452.9375 3468.4297,2452.8594 Q3468.5781,2452.7813 3468.7813,2452.7813 Q3469.1094,2452.7813 3469.3672,2453.0391 Q3469.625,2453.2969 3469.625,2453.6406 Q3469.625,2453.9844 3469.2813,2454.3906 Q3468.7813,2454.9688 3467.9844,2455.2969 Q3466.9063,2455.75 3465.6094,2455.75 Q3464.0938,2455.75 3462.8906,2455.125 Q3461.9063,2454.625 3461.2188,2453.5547 Q3460.5313,2452.4844 3460.5313,2451.2031 L3460.5313,2450.0469 Q3460.5313,2448.7188 3461.1484,2447.5703 Q3461.7656,2446.4219 3462.8594,2445.8047 Q3463.9531,2445.1875 3465.1875,2445.1875 Q3465.9219,2445.1875 3466.5703,2445.3516 Q3467.2188,2445.5156 3467.7656,2445.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="45" x="3479" y="2454.9102">Triangle</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="141" x="3532" y="2431"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="139" x="3533" y="2444.457">template&lt;typename Var&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3451" x2="3669" y1="2466" y2="2466"/><ellipse cx="3461" cy="2477" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="3470" y="2481.4189">v0 : Var</text><ellipse cx="3461" cy="2490.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="3470" y="2495.2549">v1 : Var</text><ellipse cx="3461" cy="2504.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="3470" y="2509.0908">v2 : Var</text><ellipse cx="3461" cy="2518.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3470" y="2522.9268">p0 : glm::vec4</text><ellipse cx="3461" cy="2532.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3470" y="2536.7627">p1 : glm::vec4</text><ellipse cx="3461" cy="2546.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3470" y="2550.5986">p2 : glm::vec4</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3451" x2="3669" y1="2557.0156" y2="2557.0156"/><!--MD5=[fa0a6e99f3a3eac1851b3bfb6891d5b5]
class eng.TwoVariables--><rect codeLine="790" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="117.1797" id="eng.TwoVariables" style="stroke:#A80036;stroke-width:1.5;" width="323" x="8110.5" y="2441"/><ellipse cx="8125.5" cy="2457" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8128.2656,2452.875 Q8128.4219,2452.6563 8128.6094,2452.5469 Q8128.7969,2452.4375 8129.0156,2452.4375 Q8129.3906,2452.4375 8129.625,2452.6953 Q8129.8594,2452.9531 8129.8594,2453.5625 L8129.8594,2455.0156 Q8129.8594,2455.625 8129.625,2455.8906 Q8129.3906,2456.1563 8129.0156,2456.1563 Q8128.6719,2456.1563 8128.4688,2455.9531 Q8128.2656,2455.7656 8128.1563,2455.25 Q8128.1094,2454.8906 8127.9219,2454.7031 Q8127.5938,2454.3281 8126.9844,2454.1094 Q8126.375,2453.8906 8125.75,2453.8906 Q8124.9844,2453.8906 8124.3516,2454.2188 Q8123.7188,2454.5469 8123.2266,2455.2969 Q8122.7344,2456.0469 8122.7344,2457.0781 L8122.7344,2458.1719 Q8122.7344,2459.4063 8123.625,2460.2266 Q8124.5156,2461.0469 8126.1094,2461.0469 Q8127.0469,2461.0469 8127.7031,2460.7969 Q8128.0938,2460.6406 8128.5156,2460.2031 Q8128.7813,2459.9375 8128.9297,2459.8594 Q8129.0781,2459.7813 8129.2813,2459.7813 Q8129.6094,2459.7813 8129.8672,2460.0391 Q8130.125,2460.2969 8130.125,2460.6406 Q8130.125,2460.9844 8129.7813,2461.3906 Q8129.2813,2461.9688 8128.4844,2462.2969 Q8127.4063,2462.75 8126.1094,2462.75 Q8124.5938,2462.75 8123.3906,2462.125 Q8122.4063,2461.625 8121.7188,2460.5547 Q8121.0313,2459.4844 8121.0313,2458.2031 L8121.0313,2457.0469 Q8121.0313,2455.7188 8121.6484,2454.5703 Q8122.2656,2453.4219 8123.3594,2452.8047 Q8124.4531,2452.1875 8125.6875,2452.1875 Q8126.4219,2452.1875 8127.0703,2452.3516 Q8127.7188,2452.5156 8128.2656,2452.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="75" x="8139.5" y="2461.9102">TwoVariables</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="214" x="8222.5" y="2438"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="212" x="8223.5" y="2451.457">template&lt;typename T1, typename T2&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8111.5" x2="8432.5" y1="2473" y2="2473"/><ellipse cx="8121.5" cy="2484" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="8130.5" y="2488.4189">t1 : T1</text><ellipse cx="8121.5" cy="2497.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="8130.5" y="2502.2549">t2 : T2</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8111.5" x2="8432.5" y1="2508.6719" y2="2508.6719"/><ellipse cx="8121.5" cy="2519.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="8130.5" y="2524.0908">operator*(float t) : TwoVariables {query}</text><ellipse cx="8121.5" cy="2533.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="8130.5" y="2537.9268">operator+(const TwoVariables&amp; oth) : TwoVariables {query}</text><ellipse cx="8121.5" cy="2547.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="8130.5" y="2551.7627">operator*=(float t) : void</text><!--MD5=[0d764512f5306d9482df355d19812a4f]
class eng.TypeNameMap--><rect codeLine="798" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="61.8359" id="eng.TypeNameMap" style="stroke:#A80036;stroke-width:1.5;" width="246" x="8469" y="2468.5"/><ellipse cx="8484" cy="2484.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8486.7656,2480.375 Q8486.9219,2480.1563 8487.1094,2480.0469 Q8487.2969,2479.9375 8487.5156,2479.9375 Q8487.8906,2479.9375 8488.125,2480.1953 Q8488.3594,2480.4531 8488.3594,2481.0625 L8488.3594,2482.5156 Q8488.3594,2483.125 8488.125,2483.3906 Q8487.8906,2483.6563 8487.5156,2483.6563 Q8487.1719,2483.6563 8486.9688,2483.4531 Q8486.7656,2483.2656 8486.6563,2482.75 Q8486.6094,2482.3906 8486.4219,2482.2031 Q8486.0938,2481.8281 8485.4844,2481.6094 Q8484.875,2481.3906 8484.25,2481.3906 Q8483.4844,2481.3906 8482.8516,2481.7188 Q8482.2188,2482.0469 8481.7266,2482.7969 Q8481.2344,2483.5469 8481.2344,2484.5781 L8481.2344,2485.6719 Q8481.2344,2486.9063 8482.125,2487.7266 Q8483.0156,2488.5469 8484.6094,2488.5469 Q8485.5469,2488.5469 8486.2031,2488.2969 Q8486.5938,2488.1406 8487.0156,2487.7031 Q8487.2813,2487.4375 8487.4297,2487.3594 Q8487.5781,2487.2813 8487.7813,2487.2813 Q8488.1094,2487.2813 8488.3672,2487.5391 Q8488.625,2487.7969 8488.625,2488.1406 Q8488.625,2488.4844 8488.2813,2488.8906 Q8487.7813,2489.4688 8486.9844,2489.7969 Q8485.9063,2490.25 8484.6094,2490.25 Q8483.0938,2490.25 8481.8906,2489.625 Q8480.9063,2489.125 8480.2188,2488.0547 Q8479.5313,2486.9844 8479.5313,2485.7031 L8479.5313,2484.5469 Q8479.5313,2483.2188 8480.1484,2482.0703 Q8480.7656,2480.9219 8481.8594,2480.3047 Q8482.9531,2479.6875 8484.1875,2479.6875 Q8484.9219,2479.6875 8485.5703,2479.8516 Q8486.2188,2480.0156 8486.7656,2480.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="83" x="8498" y="2489.4102">TypeNameMap</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="129" x="8589" y="2465.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="127" x="8590" y="2478.957">template&lt;typename T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8470" x2="8714" y1="2500.5" y2="2500.5"/><ellipse cx="8480" cy="2511.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="8489" y="2515.9189">name : static const std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8470" x2="8714" y1="2522.3359" y2="2522.3359"/><!--MD5=[45e022f443c0a8e115620210c4a59001]
class eng.UVShader--><rect codeLine="802" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="89.5078" id="eng.UVShader" style="stroke:#A80036;stroke-width:1.5;" width="434" x="2664" y="2454.5"/><ellipse cx="2848.75" cy="2470.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2851.5156,2466.375 Q2851.6719,2466.1563 2851.8594,2466.0469 Q2852.0469,2465.9375 2852.2656,2465.9375 Q2852.6406,2465.9375 2852.875,2466.1953 Q2853.1094,2466.4531 2853.1094,2467.0625 L2853.1094,2468.5156 Q2853.1094,2469.125 2852.875,2469.3906 Q2852.6406,2469.6563 2852.2656,2469.6563 Q2851.9219,2469.6563 2851.7188,2469.4531 Q2851.5156,2469.2656 2851.4063,2468.75 Q2851.3594,2468.3906 2851.1719,2468.2031 Q2850.8438,2467.8281 2850.2344,2467.6094 Q2849.625,2467.3906 2849,2467.3906 Q2848.2344,2467.3906 2847.6016,2467.7188 Q2846.9688,2468.0469 2846.4766,2468.7969 Q2845.9844,2469.5469 2845.9844,2470.5781 L2845.9844,2471.6719 Q2845.9844,2472.9063 2846.875,2473.7266 Q2847.7656,2474.5469 2849.3594,2474.5469 Q2850.2969,2474.5469 2850.9531,2474.2969 Q2851.3438,2474.1406 2851.7656,2473.7031 Q2852.0313,2473.4375 2852.1797,2473.3594 Q2852.3281,2473.2813 2852.5313,2473.2813 Q2852.8594,2473.2813 2853.1172,2473.5391 Q2853.375,2473.7969 2853.375,2474.1406 Q2853.375,2474.4844 2853.0313,2474.8906 Q2852.5313,2475.4688 2851.7344,2475.7969 Q2850.6563,2476.25 2849.3594,2476.25 Q2847.8438,2476.25 2846.6406,2475.625 Q2845.6563,2475.125 2844.9688,2474.0547 Q2844.2813,2472.9844 2844.2813,2471.7031 L2844.2813,2470.5469 Q2844.2813,2469.2188 2844.8984,2468.0703 Q2845.5156,2466.9219 2846.6094,2466.3047 Q2847.7031,2465.6875 2848.9375,2465.6875 Q2849.6719,2465.6875 2850.3203,2465.8516 Q2850.9688,2466.0156 2851.5156,2466.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="2869.25" y="2475.4102">UVShader</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2665" x2="3097" y1="2486.5" y2="2486.5"/><ellipse cx="2675" cy="2497.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="2684" y="2501.9189">vso : EmptyStruct</text><ellipse cx="2675" cy="2511.3359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="2684" y="2515.7549">uniform : FragmentShaderUniform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2665" x2="3097" y1="2522.1719" y2="2522.1719"/><ellipse cx="2675" cy="2533.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="2684" y="2537.5908">computePixelColor(OneVariable&lt;glm::vec2&gt; var, const LightsVec&amp; lights) : glm::vec4</text><!--MD5=[fc3a865017d3679556449e3aa884f1aa]
class eng.WorldSpaceTriangle--><rect codeLine="808" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="172.5234" id="eng.WorldSpaceTriangle" style="stroke:#A80036;stroke-width:1.5;" width="144" x="8750" y="2413"/><ellipse cx="8765" cy="2429" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8767.7656,2424.875 Q8767.9219,2424.6563 8768.1094,2424.5469 Q8768.2969,2424.4375 8768.5156,2424.4375 Q8768.8906,2424.4375 8769.125,2424.6953 Q8769.3594,2424.9531 8769.3594,2425.5625 L8769.3594,2427.0156 Q8769.3594,2427.625 8769.125,2427.8906 Q8768.8906,2428.1563 8768.5156,2428.1563 Q8768.1719,2428.1563 8767.9688,2427.9531 Q8767.7656,2427.7656 8767.6563,2427.25 Q8767.6094,2426.8906 8767.4219,2426.7031 Q8767.0938,2426.3281 8766.4844,2426.1094 Q8765.875,2425.8906 8765.25,2425.8906 Q8764.4844,2425.8906 8763.8516,2426.2188 Q8763.2188,2426.5469 8762.7266,2427.2969 Q8762.2344,2428.0469 8762.2344,2429.0781 L8762.2344,2430.1719 Q8762.2344,2431.4063 8763.125,2432.2266 Q8764.0156,2433.0469 8765.6094,2433.0469 Q8766.5469,2433.0469 8767.2031,2432.7969 Q8767.5938,2432.6406 8768.0156,2432.2031 Q8768.2813,2431.9375 8768.4297,2431.8594 Q8768.5781,2431.7813 8768.7813,2431.7813 Q8769.1094,2431.7813 8769.3672,2432.0391 Q8769.625,2432.2969 8769.625,2432.6406 Q8769.625,2432.9844 8769.2813,2433.3906 Q8768.7813,2433.9688 8767.9844,2434.2969 Q8766.9063,2434.75 8765.6094,2434.75 Q8764.0938,2434.75 8762.8906,2434.125 Q8761.9063,2433.625 8761.2188,2432.5547 Q8760.5313,2431.4844 8760.5313,2430.2031 L8760.5313,2429.0469 Q8760.5313,2427.7188 8761.1484,2426.5703 Q8761.7656,2425.4219 8762.8594,2424.8047 Q8763.9531,2424.1875 8765.1875,2424.1875 Q8765.9219,2424.1875 8766.5703,2424.3516 Q8767.2188,2424.5156 8767.7656,2424.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="112" x="8779" y="2433.9102">WorldSpaceTriangle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8751" x2="8893" y1="2445" y2="2445"/><ellipse cx="8761" cy="2456" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="8770" y="2460.4189">t0 : glm::vec2</text><ellipse cx="8761" cy="2469.8359" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="8770" y="2474.2549">t1 : glm::vec2</text><ellipse cx="8761" cy="2483.6719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="8770" y="2488.0908">t2 : glm::vec2</text><ellipse cx="8761" cy="2497.5078" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="8770" y="2501.9268">bitangent : glm::vec3</text><ellipse cx="8761" cy="2511.3438" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="8770" y="2515.7627">normal : glm::vec3</text><ellipse cx="8761" cy="2525.1797" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="8770" y="2529.5986">tangent : glm::vec3</text><ellipse cx="8761" cy="2539.0156" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="8770" y="2543.4346">v0 : glm::vec3</text><ellipse cx="8761" cy="2552.8516" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="8770" y="2557.2705">v1 : glm::vec3</text><ellipse cx="8761" cy="2566.6875" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="8770" y="2571.1064">v2 : glm::vec3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8751" x2="8893" y1="2577.5234" y2="2577.5234"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect codeLine="8" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="297.0469" id="Application" style="stroke:#A80036;stroke-width:1.5;" width="336" x="5957" y="7"/><ellipse cx="6090.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6093.5156,18.875 Q6093.6719,18.6563 6093.8594,18.5469 Q6094.0469,18.4375 6094.2656,18.4375 Q6094.6406,18.4375 6094.875,18.6953 Q6095.1094,18.9531 6095.1094,19.5625 L6095.1094,21.0156 Q6095.1094,21.625 6094.875,21.8906 Q6094.6406,22.1563 6094.2656,22.1563 Q6093.9219,22.1563 6093.7188,21.9531 Q6093.5156,21.7656 6093.4063,21.25 Q6093.3594,20.8906 6093.1719,20.7031 Q6092.8438,20.3281 6092.2344,20.1094 Q6091.625,19.8906 6091,19.8906 Q6090.2344,19.8906 6089.6016,20.2188 Q6088.9688,20.5469 6088.4766,21.2969 Q6087.9844,22.0469 6087.9844,23.0781 L6087.9844,24.1719 Q6087.9844,25.4063 6088.875,26.2266 Q6089.7656,27.0469 6091.3594,27.0469 Q6092.2969,27.0469 6092.9531,26.7969 Q6093.3438,26.6406 6093.7656,26.2031 Q6094.0313,25.9375 6094.1797,25.8594 Q6094.3281,25.7813 6094.5313,25.7813 Q6094.8594,25.7813 6095.1172,26.0391 Q6095.375,26.2969 6095.375,26.6406 Q6095.375,26.9844 6095.0313,27.3906 Q6094.5313,27.9688 6093.7344,28.2969 Q6092.6563,28.75 6091.3594,28.75 Q6089.8438,28.75 6088.6406,28.125 Q6087.6563,27.625 6086.9688,26.5547 Q6086.2813,25.4844 6086.2813,24.2031 L6086.2813,23.0469 Q6086.2813,21.7188 6086.8984,20.5703 Q6087.5156,19.4219 6088.6094,18.8047 Q6089.7031,18.1875 6090.9375,18.1875 Q6091.6719,18.1875 6092.3203,18.3516 Q6092.9688,18.5156 6093.5156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="6111.25" y="27.9102">Application</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5958" x2="6292" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="5977" y="54.4189">renderer_ : SFMLRenderer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="60.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="5977" y="68.2549">userInterface_ : UserInterface</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="74.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="5977" y="82.0908">pause : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="88.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="5977" y="95.9268">cameraControl_ : eng::CameraControl</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="102.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="5977" y="109.7627">mainAppWindow_ : sf::RenderWindow</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="116.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="5977" y="123.5986">currentSceneIndex_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="130.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="217" x="5977" y="137.4346">defaultHeight_ : static constexpr const Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="143.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="214" x="5977" y="151.2705">defaultWidth_ : static constexpr const Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="157.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="234" x="5977" y="165.1064">mainWindowMsg_ : static constexpr const char*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="171.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="5977" y="178.9424">scenes_ : std::vector&lt;eng::Scene&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5958" x2="6292" y1="185.3594" y2="185.3594"/><ellipse cx="5968" cy="196.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="5977" y="200.7783">Application()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="207.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="5977" y="214.6143">onClose() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="221.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="5977" y="228.4502">onKeyPressOrRelease(sf::Keyboard::Key key, bool mode) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="234.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="5977" y="242.2861">onMouseEnter() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="248.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="5977" y="256.1221">onMouseMove(glm::vec2 newPosition) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="262.5391"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="5977" y="269.958">processEvents() : void</text><ellipse cx="5968" cy="279.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="5977" y="283.7939">run() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5965" y="290.2109"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="5977" y="297.6299">update(float dt) : void</text><!--MD5=[1f065ddbe680190dc5395e359f56eb9a]
class SFMLRenderer--><rect codeLine="30" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="172.5234" id="SFMLRenderer" style="stroke:#A80036;stroke-width:1.5;" width="419" x="2291.5" y="405.5"/><ellipse cx="2455.25" cy="421.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2458.0156,417.375 Q2458.1719,417.1563 2458.3594,417.0469 Q2458.5469,416.9375 2458.7656,416.9375 Q2459.1406,416.9375 2459.375,417.1953 Q2459.6094,417.4531 2459.6094,418.0625 L2459.6094,419.5156 Q2459.6094,420.125 2459.375,420.3906 Q2459.1406,420.6563 2458.7656,420.6563 Q2458.4219,420.6563 2458.2188,420.4531 Q2458.0156,420.2656 2457.9063,419.75 Q2457.8594,419.3906 2457.6719,419.2031 Q2457.3438,418.8281 2456.7344,418.6094 Q2456.125,418.3906 2455.5,418.3906 Q2454.7344,418.3906 2454.1016,418.7188 Q2453.4688,419.0469 2452.9766,419.7969 Q2452.4844,420.5469 2452.4844,421.5781 L2452.4844,422.6719 Q2452.4844,423.9063 2453.375,424.7266 Q2454.2656,425.5469 2455.8594,425.5469 Q2456.7969,425.5469 2457.4531,425.2969 Q2457.8438,425.1406 2458.2656,424.7031 Q2458.5313,424.4375 2458.6797,424.3594 Q2458.8281,424.2813 2459.0313,424.2813 Q2459.3594,424.2813 2459.6172,424.5391 Q2459.875,424.7969 2459.875,425.1406 Q2459.875,425.4844 2459.5313,425.8906 Q2459.0313,426.4688 2458.2344,426.7969 Q2457.1563,427.25 2455.8594,427.25 Q2454.3438,427.25 2453.1406,426.625 Q2452.1563,426.125 2451.4688,425.0547 Q2450.7813,423.9844 2450.7813,422.7031 L2450.7813,421.5469 Q2450.7813,420.2188 2451.3984,419.0703 Q2452.0156,417.9219 2453.1094,417.3047 Q2454.2031,416.6875 2455.4375,416.6875 Q2456.1719,416.6875 2456.8203,416.8516 Q2457.4688,417.0156 2458.0156,417.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="83" x="2475.75" y="426.4102">SFMLRenderer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2292.5" x2="2709.5" y1="437.5" y2="437.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="445.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="2311.5" y="452.9189">windowHeight_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="459.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="2311.5" y="466.7549">windowWidth_ : Pixels</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="473.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="2311.5" y="480.5908">renderer_ : eng::Renderer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="487.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="2311.5" y="494.4268">screenSprite_ : sf::Sprite</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="500.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="2311.5" y="508.2627">screenTexture_ : sf::Texture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2299.5" y="514.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="2311.5" y="522.0986">mainAppWindow_ : std::reference_wrapper&lt;sf::RenderWindow&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2292.5" x2="2709.5" y1="528.5156" y2="528.5156"/><ellipse cx="2302.5" cy="539.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="2311.5" y="543.9346">SFMLRenderer(Pixels width, Pixels height, sf::RenderWindow&amp; mainAppWindow)</text><ellipse cx="2302.5" cy="553.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="2311.5" y="557.7705">render(eng::Scene&amp; scene) : size_t</text><ellipse cx="2302.5" cy="567.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="2311.5" y="571.6064">renderToFile(eng::Scene&amp; scene, const std::string&amp; file) : void</text><!--MD5=[a7661dae5b0d701614a666888c8235ba]
class UserInterface--><rect codeLine="43" fill="#FEFECE" filter="url(#f6pk6owyqu5u0)" height="255.5391" id="UserInterface" style="stroke:#A80036;stroke-width:1.5;" width="591" x="5655.5" y="364"/><ellipse cx="5909.75" cy="380" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5912.5156,375.875 Q5912.6719,375.6563 5912.8594,375.5469 Q5913.0469,375.4375 5913.2656,375.4375 Q5913.6406,375.4375 5913.875,375.6953 Q5914.1094,375.9531 5914.1094,376.5625 L5914.1094,378.0156 Q5914.1094,378.625 5913.875,378.8906 Q5913.6406,379.1563 5913.2656,379.1563 Q5912.9219,379.1563 5912.7188,378.9531 Q5912.5156,378.7656 5912.4063,378.25 Q5912.3594,377.8906 5912.1719,377.7031 Q5911.8438,377.3281 5911.2344,377.1094 Q5910.625,376.8906 5910,376.8906 Q5909.2344,376.8906 5908.6016,377.2188 Q5907.9688,377.5469 5907.4766,378.2969 Q5906.9844,379.0469 5906.9844,380.0781 L5906.9844,381.1719 Q5906.9844,382.4063 5907.875,383.2266 Q5908.7656,384.0469 5910.3594,384.0469 Q5911.2969,384.0469 5911.9531,383.7969 Q5912.3438,383.6406 5912.7656,383.2031 Q5913.0313,382.9375 5913.1797,382.8594 Q5913.3281,382.7813 5913.5313,382.7813 Q5913.8594,382.7813 5914.1172,383.0391 Q5914.375,383.2969 5914.375,383.6406 Q5914.375,383.9844 5914.0313,384.3906 Q5913.5313,384.9688 5912.7344,385.2969 Q5911.6563,385.75 5910.3594,385.75 Q5908.8438,385.75 5907.6406,385.125 Q5906.6563,384.625 5905.9688,383.5547 Q5905.2813,382.4844 5905.2813,381.2031 L5905.2813,380.0469 Q5905.2813,378.7188 5905.8984,377.5703 Q5906.5156,376.4219 5907.6094,375.8047 Q5908.7031,375.1875 5909.9375,375.1875 Q5910.6719,375.1875 5911.3203,375.3516 Q5911.9688,375.5156 5912.5156,375.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="74" x="5930.25" y="384.9102">UserInterface</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5656.5" x2="6245.5" y1="396" y2="396"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="404"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="5675.5" y="411.4189">pause : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="417.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="5675.5" y="425.2549">currentTime_ : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="431.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="5675.5" y="439.0908">framesPerSecond_ : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="445.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="5675.5" y="452.9268">lastTime_ : float</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="459.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="5675.5" y="466.7627">font_ : sf::Font</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="473.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="5675.5" y="480.5986">text2_ : sf::Text</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="487.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="5675.5" y="494.4346">text3_ : sf::Text</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="500.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="5675.5" y="508.2705">text4_ : sf::Text</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="514.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="5675.5" y="522.1064">text5_ : sf::Text</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="528.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="5675.5" y="535.9424">text_ : sf::Text</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="542.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="5675.5" y="549.7783">frames_ : size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5663.5" y="556.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="5675.5" y="563.6143">mainAppWindow_ : std::reference_wrapper&lt;sf::RenderWindow&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="5656.5" x2="6245.5" y1="570.0313" y2="570.0313"/><ellipse cx="5666.5" cy="581.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="5675.5" y="585.4502">UserInterface(sf::RenderWindow&amp; window_)</text><ellipse cx="5666.5" cy="594.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="5675.5" y="599.2861">togglePause() : void</text><ellipse cx="5666.5" cy="608.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="565" x="5675.5" y="613.1221">updateAndDraw(float deltaTime, size_t trianglesCount, size_t&amp; sceneIndex, std::vector&lt;eng::Scene&gt;&amp; scenes) : void</text><!--MD5=[949c4b0f8ebe29baf3d6f5f30e2d3023]
reverse link Application to eng.CameraControl--><path codeLine="832" d="M6243.08,316.05 C6251.22,331.74 6258.4,347.84 6264,364 C6304.73,481.43 6309.49,625.31 6306.81,721.32 " fill="none" id="Application-backto-eng.CameraControl" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6236.69,304.14,6236.0068,311.3187,6242.3706,314.7103,6243.0537,307.5316,6236.69,304.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5b7d82a6c518ae3c240e9ac0a61ca8c7]
reverse link Application to SFMLRenderer--><path codeLine="835" d="M5943.6,173.24 C5333.98,229.51 3360.77,411.64 2710.78,471.64 " fill="none" id="Application-backto-SFMLRenderer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5956.87,172.02,5950.5263,168.591,5944.9212,173.1278,5951.2649,176.5568,5956.87,172.02" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[29631a91399ded5a172e75b54e217bfa]
reverse link Application to eng.Scene--><path codeLine="838" d="M6269.47,314.39 C6283.46,330.9 6297.19,347.63 6310,364 C6389.83,466.02 6472.19,587 6532.95,679.78 " fill="none" id="Application-backto-eng.Scene" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6260.74,304.14,6261.5949,311.3002,6268.5332,313.265,6267.6783,306.1048,6260.74,304.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0d38b60d7e5c1aae5ee83e710dc5b72b]
reverse link Application to UserInterface--><path codeLine="841" d="M6042.1,315.86 C6033.74,331.93 6025.34,348.09 6017.19,363.76 " fill="none" id="Application-backto-UserInterface" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6048.17,304.19,6041.8518,307.6657,6042.63,314.8347,6048.9482,311.359,6048.17,304.19" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e222035d674db8329d46423db52ce9b5]
reverse link eng.Assets to eng.CubemapTexture--><path codeLine="844" d="M7212.44,945.9 C7171.23,996.64 7124.22,1054.52 7088.24,1098.81 " fill="none" id="eng.Assets-backto-eng.CubemapTexture" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="7220.87,935.53,7213.9831,937.668,7213.3079,944.8474,7220.1947,942.7094,7220.87,935.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4b74427235658aca247b2c70d7feb50f]
reverse link eng.Assets to eng.ShadowMappingInfo--><path codeLine="847" d="M7374.27,947.13 C7411.53,1012.29 7455.33,1088.88 7480.75,1133.34 " fill="none" id="eng.Assets-backto-eng.ShadowMappingInfo" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="7367.63,935.53,7367.1378,942.7243,7373.5893,945.9457,7374.0816,938.7514,7367.63,935.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7d847275c984c0595d6051cebf6b4b75]
reverse link eng.Assets to eng.Texture--><path codeLine="850" d="M7303.52,948.63 C7300.9,1081.54 7301.26,1281.28 7326,1306 C7446.82,1426.72 8721.08,1269.5 8862,1366 C8935.19,1416.12 8966.5,1518.04 8979.69,1587.44 " fill="none" id="eng.Assets-backto-eng.Texture" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="7303.79,935.59,7299.6656,941.5052,7303.5395,947.5874,7307.6639,941.6722,7303.79,935.59" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[97b8ceddcc52f164ab6858cebe9fcb40]
reverse link eng.BloomPipeline to eng.ColorAndDepthBuffer--><path codeLine="853" d="M3371.69,1243.81 C3413.72,1268.47 3463.8,1293.13 3513,1306 C3951.93,1420.87 7153.63,1265.17 7596,1366 C7683.67,1385.98 7773.73,1419.02 7857.42,1455.86 " fill="none" id="eng.BloomPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3360.34,1237.04,3363.4405,1243.5505,3370.6427,1243.1926,3367.5422,1236.6821,3360.34,1237.04" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[3ccdb62753f3806080980c9ab35acb56]
reverse link eng.BloomPipeline to eng.NoBlending--><path codeLine="856" d="M3371.7,1243.78 C3413.73,1268.43 3463.81,1293.1 3513,1306 C3717.07,1359.52 7131.96,1252.82 7310,1366 C7403.86,1425.67 7437.88,1566.37 7448.63,1628.54 " fill="none" id="eng.BloomPipeline-backto-eng.NoBlending" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3360.35,1237.01,3363.4505,1243.5205,3370.6527,1243.1626,3367.5522,1236.6521,3360.35,1237.01" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[72a7ed515f41db1907b7e40d200710c5]
reverse link eng.ColorAndDepthBuffer to eng.Vector2d--><path codeLine="859" d="M7829.25,1869.4 C7753.4,1902.18 7673.49,1932.34 7596,1954 C7365.57,2018.42 7274.73,1906.45 7061,2014 C7031.35,2028.92 7004.43,2051.87 6981.58,2076.09 " fill="none" id="eng.ColorAndDepthBuffer-backto-eng.Vector2d" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="7841.39,1864.12,7834.2927,1862.8438,7830.3849,1868.9042,7837.4822,1870.1805,7841.39,1864.12" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="7820.3345" y="1885.2493">2</text><!--MD5=[a84893e1796c7456942649a3f47d896b]
reverse link eng.ConvertingPipeline to eng.ColorAndDepthBuffer--><path codeLine="862" d="M2327.69,1230.27 C2372.21,1259.02 2430.06,1290.82 2487,1306 C3035.54,1452.26 7042.3,1240.66 7596,1366 C7683.84,1385.89 7774.07,1418.95 7857.89,1455.85 " fill="none" id="eng.ConvertingPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2316.67,1223.04,2319.4941,1229.6751,2326.705,1229.6201,2323.8809,1222.9851,2316.67,1223.04" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0334694cd8dad7d150c4abafe926ca72]
reverse link eng.ConvertingPipeline to eng.NoBlending--><path codeLine="865" d="M2327.69,1230.26 C2372.21,1259 2430.06,1290.8 2487,1306 C2616.45,1340.56 7196.81,1294.31 7310,1366 C7404.2,1425.67 7438.1,1567.01 7448.73,1628.99 " fill="none" id="eng.ConvertingPipeline-backto-eng.NoBlending" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2316.67,1223.03,2319.488,1229.6677,2326.699,1229.6193,2323.8809,1222.9817,2316.67,1223.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[94d66342360d54d2314d6d2f8e1df781]
reverse link eng.ConvertingPipeline to eng.NoDiscard--><path codeLine="868" d="M2327.7,1230.24 C2372.22,1258.98 2430.07,1290.78 2487,1306 C2608.65,1338.53 6913,1299.6 7020,1366 C7115.65,1425.36 7152.92,1566.87 7165.01,1628.94 " fill="none" id="eng.ConvertingPipeline-backto-eng.NoDiscard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2316.67,1223.01,2319.4941,1229.6451,2326.705,1229.5901,2323.8809,1222.9551,2316.67,1223.01" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[860922a4645222b6aabc65de2515a383]
reverse link eng.CubemapShader to eng.EmptyStruct--><path codeLine="871" d="M2449.62,2555.45 C2477.63,2596.36 2514.46,2650.14 2535.14,2680.34 " fill="none" id="eng.CubemapShader-backto-eng.EmptyStruct" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2442.16,2544.55,2442.2544,2551.7605,2448.9466,2554.4466,2448.8522,2547.2361,2442.16,2544.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[da6d26c1ad2e23683c2bc17a2fe2d87e]
reverse link eng.CubemapShader to eng.FragmentShaderUniform--><path codeLine="874" d="M2526.12,2549.89 C2601.4,2582.48 2699.38,2624.89 2773.32,2656.89 " fill="none" id="eng.CubemapShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2513.77,2544.55,2517.69,2550.6026,2524.7847,2549.312,2520.8647,2543.2595,2513.77,2544.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[fea2edbb3c4e2019ee82580c51082783]
reverse link eng.CubemapTexture to eng.Texture--><path codeLine="877" d="M7158.48,1250.28 C7201.35,1272.42 7250.37,1293.83 7298,1306 C7466.49,1349.07 8718.48,1267.8 8862,1366 C8935.21,1416.09 8966.52,1518.02 8979.7,1587.43 " fill="none" id="eng.CubemapTexture-backto-eng.Texture" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="7146.84,1244.17,7150.294,1250.5001,7157.4656,1249.7465,7154.0116,1243.4164,7146.84,1244.17" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2a78e1b14af3e9afebd83c094136ef22]
reverse link eng.CubemapVertexShader to eng.BasicVertexShader--><path codeLine="880" d="M2363.35,1721.87 C2413.42,1782.55 2494.14,1877.48 2570,1954 C2621.7,2006.15 2683.05,2060.94 2732.84,2103.79 " fill="none" id="eng.CubemapVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2354.97,1711.69,2355.6908,1718.865,2362.5911,1720.9592,2361.8703,1713.7843,2354.97,1711.69" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2a913ce07d834e050b40c8e2485b84d3]
reverse link eng.CubemapVertexShader::Output to eng.CubemapShader--><path codeLine="883" d="M2409.48,2234.8 C2410.06,2295.54 2411.03,2396.72 2411.58,2454.49 " fill="none" id="eng.CubemapVertexShader::Output-backto-eng.CubemapShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2409.36,2221.75,2405.4195,2227.7893,2409.4787,2233.7494,2413.4191,2227.7101,2409.36,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2401.8596" y="2242.6704">2</text><!--MD5=[7cc7eff13e2693c36821dbddd95a0ab8]
reverse link eng.CubemapVertexShader::Output to eng.Triangle--><path codeLine="886" d="M2440.23,2232.61 C2469.13,2272.57 2516.01,2326.93 2572,2353 C2745.87,2433.96 3251.62,2350.66 3433,2413 C3447.96,2418.14 3462.82,2425.51 3476.83,2433.8 " fill="none" id="eng.CubemapVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2432.56,2221.76,2432.7557,2228.9684,2439.4849,2231.5603,2439.2892,2224.3519,2432.56,2221.76" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6a7acfc9852e667def1106599dd7d8dc]
reverse link eng.DeferredShadingPipeline to eng.ColorAndDepthBuffer--><path codeLine="889" d="M1852.86,1236.94 C1898.41,1263.83 1954.86,1292.03 2010,1306 C2611.69,1458.44 6990.55,1229.26 7596,1366 C7684,1385.88 7774.39,1419 7858.33,1455.97 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.53,1230.14,1844.617,1236.6569,1851.8199,1236.3139,1848.7329,1229.797,1841.53,1230.14" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1844.4055" y="1251.7673">2</text><!--MD5=[610f5fe335344fb74639350e5e02ce8f]
reverse link eng.DeferredShadingPipeline to eng.GeometryInfo--><path codeLine="892" d="M1853.22,1236.8 C1898.73,1263.58 1955.05,1291.73 2010,1306 C2151.51,1342.76 4523.46,1279.05 4641,1366 C4719.61,1424.16 4735.44,1548.3 4738.04,1614.79 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.GeometryInfo" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.89,1230.03,1844.9868,1236.5423,1852.1892,1236.1884,1849.0924,1229.6761,1841.89,1230.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[083377ad06168fdfb9ebc3b96f3e98d4]
reverse link eng.DeferredShadingPipeline to eng.GeometryPassShader--><path codeLine="895" d="M1852.87,1236.91 C1898.42,1263.79 1954.87,1291.99 2010,1306 C2143.14,1339.83 6858.45,1268.28 6955,1366 C7046.83,1458.95 7042.36,1856.83 6955,1954 C6870.88,2047.56 6488.3,1933.03 6392,2014 C6272.05,2114.85 6411.69,2248.4 6295,2353 C6209.19,2429.92 5919.23,2466.94 5701.67,2484.24 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.GeometryPassShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.54,1230.11,1844.627,1236.6269,1851.8299,1236.2839,1848.7429,1229.767,1841.54,1230.11" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[875b0c00d08b5d9766547f4287f8e6e5]
reverse link eng.DeferredShadingPipeline to eng.GeometryPassVertexShader--><path codeLine="898" d="M1853.21,1236.84 C1898.72,1263.63 1955.04,1291.77 2010,1306 C2312.96,1384.46 4542.58,1233.27 4826,1366 C4934.86,1416.98 5015.75,1539.02 5054.85,1608.44 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.GeometryPassVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.88,1230.06,1844.9768,1236.5723,1852.1792,1236.2184,1849.0824,1229.7061,1841.88,1230.06" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b65404a8eb35ac11ddc61e3c3f0a309a]
reverse link eng.DeferredShadingPipeline to eng.Mesh--><path codeLine="901" d="M1853.19,1236.92 C1898.69,1263.73 1955.02,1291.86 2010,1306 C2368.07,1398.11 4973.43,1298.81 5337,1366 C5342.78,1367.07 5348.58,1368.17 5354.39,1369.31 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.Mesh" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.86,1230.14,1844.9568,1236.6523,1852.1592,1236.2984,1849.0624,1229.7861,1841.86,1230.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[42fe349cb3f9e64763bc43b01fd9f056]
reverse link eng.DeferredShadingPipeline to eng.NoBlending--><path codeLine="904" d="M1852.87,1236.93 C1898.41,1263.82 1954.86,1292.01 2010,1306 C2152.71,1342.2 7185.57,1287.29 7310,1366 C7404.24,1425.61 7438.12,1566.99 7448.73,1628.98 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.NoBlending" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.53,1230.13,1844.617,1236.6469,1851.8199,1236.3039,1848.7329,1229.787,1841.53,1230.13" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1852.2587" y="1251.7561">2</text><!--MD5=[61de7c0109831a4becf3d72d32931117]
reverse link eng.DeferredShadingPipeline to eng.NoDiscard--><path codeLine="907" d="M1852.87,1236.91 C1898.42,1263.8 1954.86,1291.99 2010,1306 C2144.89,1340.27 6901.7,1292.68 7020,1366 C7115.69,1425.3 7152.93,1566.84 7165.02,1628.93 " fill="none" id="eng.DeferredShadingPipeline-backto-eng.NoDiscard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1841.54,1230.11,1844.6307,1236.6252,1851.8334,1236.2781,1848.7427,1229.7629,1841.54,1230.11" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1872.021" y="1251.052">2</text><!--MD5=[409c298098a9f86dfb017343d036e80b]
reverse link eng.FlatShader to eng.EmptyStruct--><path codeLine="910" d="M2086.04,2549.63 C2115.72,2562.05 2147.89,2574.97 2178,2586 C2292.76,2628.02 2430.54,2669.04 2502.24,2689.69 " fill="none" id="eng.FlatShader-backto-eng.EmptyStruct" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2073.92,2544.53,2077.8992,2550.5438,2084.9809,2549.1837,2081.0017,2543.1699,2073.92,2544.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8b5445108a2009cca7685b0768c90dc1]
reverse link eng.FlatShader to eng.FragmentShaderUniform--><path codeLine="913" d="M2076.86,2549.76 C2108.68,2563.31 2144.25,2576.79 2178,2586 C2367.98,2637.83 2423.09,2611.69 2617,2646 C2668.73,2655.15 2725.73,2667.3 2773.48,2678.08 " fill="none" id="eng.FlatShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2064.87,2544.57,2068.7926,2550.6209,2075.8867,2549.3272,2071.9641,2543.2764,2064.87,2544.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[45e11b751dc2e0d0941ef43d6b96c5d5]
reverse link eng.FlatVertexShader to eng.BasicVertexShader--><path codeLine="916" d="M1837.61,1722.73 C1880.03,1791.9 1958.79,1901.23 2059,1954 C2261.73,2060.75 2355.73,1935.57 2571,2014 C2628.12,2034.81 2685.24,2070.61 2730.99,2103.87 " fill="none" id="eng.FlatVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1830.87,1711.57,1830.5487,1718.7739,1837.075,1721.8412,1837.3962,1714.6373,1830.87,1711.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e755bfe189d36baa6f003f182eb2a994]
reverse link eng.FlatVertexShader::Output to eng.FlatShader--><path codeLine="919" d="M1974,2234.8 C1974,2295.54 1974,2396.72 1974,2454.49 " fill="none" id="eng.FlatVertexShader::Output-backto-eng.FlatShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1974,2221.75,1970,2227.75,1974,2233.75,1978,2227.75,1974,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1966.4422" y="2242.6704">2</text><!--MD5=[9090654003f95ccc4d00d46305559c15]
reverse link eng.FlatVertexShader::Output to eng.Triangle--><path codeLine="922" d="M2028.68,2229.91 C2081.06,2270.42 2164.16,2327.22 2247,2353 C2750.94,2509.86 2932.26,2246.21 3433,2413 C3448.26,2418.08 3463.4,2425.54 3477.62,2433.96 " fill="none" id="eng.FlatVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2018.3,2221.78,2020.5606,2228.6276,2027.7509,2229.1746,2025.4903,2222.327,2018.3,2221.78" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f94a10beb021ded7ed87245202ae4084]
reverse link eng.GeometryPassShader to eng.FragmentShaderUniform--><path codeLine="925" d="M5279.61,2547.87 C5222.25,2562.5 5157.22,2577.09 5097,2586 C4682.78,2647.31 3374.26,2689.22 2988.83,2700.47 " fill="none" id="eng.GeometryPassShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5292.48,2544.55,5285.6717,2542.1736,5280.8595,2547.5441,5287.6678,2549.9206,5292.48,2544.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[357b1b7505a7856ea64f331c65620154]
reverse link eng.GeometryPassVertexShader to eng.BasicVertexShader--><path codeLine="928" d="M5048.02,1723.01 C5006.69,1793.48 4928.63,1905.06 4826,1954 C4654.99,2035.54 3304.22,1962.18 3122,2014 C3055.77,2032.84 2988.59,2069.54 2935.1,2103.89 " fill="none" id="eng.GeometryPassVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5054.58,1711.64,5048.1188,1714.842,5048.5894,1722.0377,5055.0506,1718.8357,5054.58,1711.64" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9d3856eb9087f59ec8d0540f329f0561]
reverse link eng.GeometryPassVertexShader::Output to eng.GeometryPassShader--><path codeLine="931" d="M5291.27,2233.28 C5326.38,2293.84 5385.73,2396.24 5419.49,2454.49 " fill="none" id="eng.GeometryPassVertexShader::Output-backto-eng.GeometryPassShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5284.59,2221.75,5284.137,2228.9469,5290.6061,2232.133,5291.059,2224.9361,5284.59,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="5280.4731" y="2242.6704">2</text><!--MD5=[97cd3998699515e4a68274d57c825ec5]
reverse link eng.GeometryPassVertexShader::Output to eng.GeometryPassShader::VertexShaderOutput--><path codeLine="934" d="M5433.25,2222.17 C5535.24,2254.45 5656.81,2312.28 5719,2413 C5759.39,2478.42 5761.32,2521.81 5719,2586 C5687.59,2633.64 5632.42,2662.04 5579.77,2678.94 " fill="none" id="eng.GeometryPassVertexShader::Output-backto-eng.GeometryPassShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5420.6,2218.26,5425.1547,2223.8506,5432.0671,2221.7964,5427.5123,2216.2059,5420.6,2218.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6f478287d2a77ba81d0db8b2e3738670]
reverse link eng.GeometryPassVertexShader::Output to eng.Triangle--><path codeLine="937" d="M5126.63,2225.17 C4988.44,2264.62 4767.83,2322.84 4573,2353 C4183.41,2413.32 4061.18,2285.89 3688,2413 C3672.82,2418.17 3657.73,2425.61 3643.51,2433.98 " fill="none" id="eng.GeometryPassVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5139.33,2221.53,5132.4597,2219.3395,5127.7952,2224.8388,5134.6655,2227.0294,5139.33,2221.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[687f3314a20b9e6c0d4f7eaf3512c8da]
reverse link eng.Mesh to eng.FragmentShaderUniform--><path codeLine="940" d="M6014.24,1966.11 C5899.67,2228.16 5747.64,2566.83 5719,2586 C5661.2,2624.69 3499.61,2686.48 2988.52,2700.58 " fill="none" id="eng.Mesh-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6019.49,1954.09,6013.4239,1957.989,6014.6899,1965.0881,6020.756,1961.1891,6019.49,1954.09" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[46e05ffc4e9ad90a877344c400af2a5d]
reverse link eng.Mesh to eng.MeshData--><path codeLine="943" d="M6392.04,1964.33 C6424.47,2004.32 6455.79,2042.93 6482.84,2076.27 " fill="none" id="eng.Mesh-backto-eng.MeshData" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6383.77,1954.14,6384.4403,1961.3199,6391.3257,1963.4626,6390.6554,1956.2828,6383.77,1954.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[75d29d628eb827ffd62eacf46a4f893f]
reverse link eng.Mesh to eng.ObjectTransform--><path codeLine="946" d="M6146,1967.4 C6146,1998.23 6146,2028.18 6146,2055.46 " fill="none" id="eng.Mesh-backto-eng.ObjectTransform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6146,1954.14,6142,1960.14,6146,1966.14,6150,1960.14,6146,1954.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1ca05b4f48e52f5b61d332dbe1518e9f]
reverse link eng.MeshData to eng.Face--><path codeLine="949" d="M6569,2304.01 C6569,2340.25 6569,2379.32 6569,2412.86 " fill="none" id="eng.MeshData-backto-eng.Face" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6569,2290.81,6565,2296.81,6569,2302.81,6573,2296.81,6569,2290.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[24ca5e5d058862c53cdb99d48358171e]
reverse link eng.NormalMapShader to eng.FragmentShaderUniform--><path codeLine="952" d="M4703.66,2548.83 C4660.78,2563.1 4612.36,2577.24 4567,2586 C4262.34,2644.86 3310.29,2686.66 2988.51,2699.42 " fill="none" id="eng.NormalMapShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4716.19,2544.6,4709.2264,2542.7268,4704.819,2548.4342,4711.7826,2550.3074,4716.19,2544.6" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[52cbce5938bc58b1dad7325f4bf50f3d]
reverse link eng.NormalMapVertexShader to eng.BasicVertexShader--><path codeLine="955" d="M3812.31,1722.84 C3769.98,1791.85 3691.58,1900.78 3592,1954 C3406.27,2053.26 3321.7,1947.16 3122,2014 C3058.38,2035.29 2993.05,2070.93 2940.1,2103.96 " fill="none" id="eng.NormalMapVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3819.04,1711.7,3812.5126,1714.7649,3812.8312,1721.9689,3819.3586,1718.9041,3819.04,1711.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0dfefce93fc72adab566569850f79a9d]
reverse link eng.NormalMapVertexShader::Output to eng.NormalMapShader--><path codeLine="958" d="M4039.38,2230.61 C4083.92,2269.52 4153.02,2323.46 4223,2353 C4365.98,2413.35 4416.34,2375.75 4567,2413 C4613.46,2424.49 4663.62,2439.88 4707.66,2454.43 " fill="none" id="eng.NormalMapVertexShader::Output-backto-eng.NormalMapShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4029.42,2221.81,4031.2654,2228.781,4038.41,2229.7586,4036.5645,2222.7876,4029.42,2221.81" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="4028.1448" y="2242.7399">2</text><!--MD5=[81eb90df4459e73d4c70f81b064cb79e]
reverse link eng.NormalMapVertexShader::Output to eng.NormalMapShader::VertexShaderOutput--><path codeLine="961" d="M4036.66,2230.6 C4080.66,2270.83 4150.49,2326.75 4223,2353 C4314.53,2386.13 5030.57,2341.85 5097,2413 C5149.47,2469.2 5127.38,2515.37 5097,2586 C5083.06,2618.42 5055.28,2646.09 5029.55,2666.42 " fill="none" id="eng.NormalMapVertexShader::Output-backto-eng.NormalMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4026.87,2221.51,4028.547,2228.5234,4035.6659,2229.6729,4033.9889,2222.6595,4026.87,2221.51" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[02c208e9a177ead4e6ff35381f9d57c4]
reverse link eng.NormalMapVertexShader::Output to eng.Triangle--><path codeLine="964" d="M3928.09,2229.71 C3854.76,2283.26 3732.05,2372.86 3648.65,2433.76 " fill="none" id="eng.NormalMapVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3938.98,2221.75,3931.7756,2222.0598,3929.2906,2228.8292,3936.495,2228.5194,3938.98,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[039fb4eb7e3348d22251d2ca625a08fc]
reverse link eng.NormalShader to eng.FragmentShaderUniform--><path codeLine="967" d="M4260.72,2549.88 C4228.28,2563.74 4191.76,2577.36 4157,2586 C3733.83,2691.12 3210.67,2704.15 2988.69,2704.49 " fill="none" id="eng.NormalShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4272.93,2544.57,4265.8327,2543.2938,4261.9249,2549.3542,4269.0222,2550.6305,4272.93,2544.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[52190971368b2b93d97bb72198162dca]
reverse link eng.NormalVertexShader to eng.BasicVertexShader--><path codeLine="970" d="M3286.79,1721.8 C3236.88,1782.43 3156.44,1877.31 3081,1954 C3029.73,2006.12 2968.96,2061.01 2919.71,2103.94 " fill="none" id="eng.NormalVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3295.14,1711.63,3288.2397,1713.7243,3287.5189,1720.8992,3294.4192,1718.805,3295.14,1711.63" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d6865da80b4782cf9816c263cde55c9f]
reverse link eng.NormalVertexShader::Output to eng.NormalShader--><path codeLine="973" d="M3642.67,2230.53 C3686.6,2269.39 3754.79,2323.31 3824,2353 C3962.2,2412.29 4012.76,2370.47 4157,2413 C4194.27,2423.99 4233.95,2439.57 4268.38,2454.43 " fill="none" id="eng.NormalVertexShader::Output-backto-eng.NormalShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3632.86,2221.74,3634.6622,2228.7223,3641.8005,2229.7442,3639.9983,2222.762,3632.86,2221.74" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="3631.4955" y="2242.6588">2</text><!--MD5=[126e7c30aa9bc45f5b2c7cf082ca8054]
reverse link eng.NormalVertexShader::Output to eng.Triangle--><path codeLine="976" d="M3588.56,2234.76 C3582.71,2288.75 3573.4,2374.74 3567.01,2433.76 " fill="none" id="eng.NormalVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3589.97,2221.75,3585.3473,2227.2845,3588.6781,2233.6803,3593.3008,2228.1458,3589.97,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[42178795244c21eff06dd89ec04e5c07]
reverse link eng.OnePassPipeline to eng.ColorAndDepthBuffer--><path codeLine="979" d="M4730.79,1220.26 C4834.63,1250.98 4976.76,1288.35 5105,1306 C5653.55,1381.5 7056.71,1240.41 7596,1366 C7683.13,1386.29 7772.69,1419.27 7856.01,1455.92 " fill="none" id="eng.OnePassPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4718.32,1216.54,4722.9269,1222.0876,4729.8197,1219.9688,4725.2128,1214.4212,4718.32,1216.54" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a1975e50a41f5b1ad655964ed2d232eb]
reverse link eng.OnePassTransparentPipeline to eng.ColorAndDepthBuffer--><path codeLine="982" d="M5824.09,1219.97 C5934.61,1250.18 6084.88,1287.07 6220,1306 C6523.11,1348.47 7298.6,1293.68 7596,1366 C7681.9,1386.89 7770.28,1419.69 7852.74,1455.91 " fill="none" id="eng.OnePassTransparentPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="5811.49,1216.5,5816.2172,1221.9455,5823.062,1219.6764,5818.3348,1214.2309,5811.49,1216.5" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c7fa46475e358d627a952fb3215ceeef]
reverse link eng.ParallaxMapShader to eng.FragmentShaderUniform--><path codeLine="985" d="M1634.34,2548.79 C1677.22,2563.07 1725.65,2577.21 1771,2586 C2141.06,2657.73 2243.88,2592.42 2617,2646 C2668.89,2653.45 2725.78,2665.35 2773.42,2676.4 " fill="none" id="eng.ParallaxMapShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1621.82,2544.57,1626.2254,2550.279,1633.1896,2548.4082,1628.7842,2542.6992,1621.82,2544.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b47e9861fb16ec7e9b04df6a8d5bf709]
reverse link eng.ParallaxMapVertexShader to eng.BasicVertexShader--><path codeLine="988" d="M1325.55,1722.89 C1367.34,1792.99 1445.87,1903.95 1548,1954 C1752.49,2054.21 2354.86,1942.29 2571,2014 C2629.58,2033.44 2687.64,2069.85 2733.61,2103.88 " fill="none" id="eng.ParallaxMapVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1318.91,1711.58,1318.4992,1718.7794,1324.9868,1721.9276,1325.3976,1714.7282,1318.91,1711.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c9b2f9f1a80c779f7e35974dd0d54daf]
reverse link eng.ParallaxMapVertexShader::Output to eng.ParallaxMapShader--><path codeLine="991" d="M1416.01,2234.42 C1436.7,2295.12 1471.28,2396.6 1491,2454.49 " fill="none" id="eng.ParallaxMapVertexShader::Output-backto-eng.ParallaxMapShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1411.69,2221.75,1409.8435,2228.7207,1415.5677,2233.1062,1417.4143,2226.1355,1411.69,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1406.1547" y="2242.6704">2</text><!--MD5=[1fc653505d383b6b81eeb75445ea5092]
reverse link eng.ParallaxMapVertexShader::Output to eng.ParallaxMapShader::VertexShaderOutput--><path codeLine="994" d="M1353.62,2231.76 C1315.48,2275.01 1263.8,2342.78 1242,2413 C1219.2,2486.43 1211.91,2515.24 1242,2586 C1255.75,2618.34 1283.25,2646.09 1308.66,2666.49 " fill="none" id="eng.ParallaxMapVertexShader::Output-backto-eng.ParallaxMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1362.51,2221.84,1355.5262,2223.6364,1354.4985,2230.7739,1361.4822,2228.9775,1362.51,2221.84" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[69f891213b7c734563b8103a333b1ec7]
reverse link eng.ParallaxMapVertexShader::Output to eng.Triangle--><path codeLine="997" d="M1482.51,2227.29 C1566.73,2268.06 1701.72,2326.95 1826,2353 C2175.76,2426.3 3093.22,2302.31 3433,2413 C3448.42,2418.02 3463.7,2425.51 3478.03,2433.99 " fill="none" id="eng.ParallaxMapVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1470.71,2221.54,1474.3491,2227.7655,1481.4953,2226.8008,1477.8563,2220.5753,1470.71,2221.54" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d4e1fbbcee43ba6b74a00b2802fb7027]
reverse link eng.PhongShader to eng.FragmentShaderUniform--><path codeLine="1000" d="M457,2548.32 C506.94,2563.17 563.92,2577.79 617,2586 C1495.85,2721.86 1734.35,2537.58 2617,2646 C2668.91,2652.38 2725.68,2664.11 2773.24,2675.32 " fill="none" id="eng.PhongShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="444.46,2544.54,449.0494,2550.1022,455.9488,2548.0051,451.3594,2542.4429,444.46,2544.54" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[958535475504f0c3db4010c273414270]
reverse link eng.PhongShadowMappingShader to eng.FragmentShaderUniform--><path codeLine="1003" d="M1067.31,2548.04 C1122.05,2562.77 1184.27,2577.38 1242,2586 C1846.99,2676.32 2010.39,2567.29 2617,2646 C2668.87,2652.73 2725.63,2664.51 2773.19,2675.65 " fill="none" id="eng.PhongShadowMappingShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1054.66,2544.6,1059.3987,2550.0355,1066.2387,2547.7518,1061.5,2542.3164,1054.66,2544.6" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1ffae0ddbcb7faf610067f8a7a7804a5]
reverse link eng.PhongShadowMappingVertexShader to eng.BasicVertexShader--><path codeLine="1006" d="M814.2,1722.94 C855.79,1793.36 934.24,1904.88 1037,1954 C1344.79,2101.13 2246.18,1909.73 2571,2014 C2630.02,2032.95 2688.34,2069.54 2734.37,2103.8 " fill="none" id="eng.PhongShadowMappingVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="807.6,1711.58,807.1539,1718.7773,813.6259,1721.9573,814.0721,1714.76,807.6,1711.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b665c6b4e5ff4a3034e808d2868d22c0]
reverse link eng.PhongShadowMappingVertexShader::Output to eng.PhongShadowMappingShader--><path codeLine="1009" d="M856.41,2234.8 C868.99,2295.54 889.93,2396.72 901.89,2454.49 " fill="none" id="eng.PhongShadowMappingVertexShader::Output-backto-eng.PhongShadowMappingShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="853.71,2221.75,851.0133,2228.4379,856.1496,2233.4994,858.8462,2226.8115,853.71,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="847.381" y="2242.6704">2</text><!--MD5=[d6869bb7a6a3354cac16aba982caef49]
reverse link eng.PhongShadowMappingVertexShader::Output to eng.PhongShadowMappingShader::VertexShaderOutput--><path codeLine="1012" d="M777.59,2229.37 C722.58,2269.91 649.33,2335.06 617,2413 C581.64,2498.23 611.72,2609.1 632.07,2666.08 " fill="none" id="eng.PhongShadowMappingVertexShader::Output-backto-eng.PhongShadowMappingShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="788.33,2221.6,781.1244,2221.8813,778.6126,2228.6408,785.8183,2228.3595,788.33,2221.6" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[454f1fb8dc078e3ec9433300b470b56e]
reverse link eng.PhongShadowMappingVertexShader::Output to eng.Triangle--><path codeLine="1015" d="M921.52,2228.03 C997.06,2269 1117.96,2327.73 1231,2353 C1708.73,2459.78 2966.8,2263.72 3433,2413 C3448.44,2417.94 3463.73,2425.39 3478.07,2433.86 " fill="none" id="eng.PhongShadowMappingVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="909.79,2221.62,913.1347,2228.0085,920.3182,2227.3782,916.9735,2220.9897,909.79,2221.62" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d819be7f10534855af5109122bea3e5f]
reverse link eng.PhongVertexShader to eng.BasicVertexShader--><path codeLine="1018" d="M302.93,1723.11 C344.21,1793.69 422.22,1905.37 525,1954 C730.58,2051.28 2354.11,1945.55 2571,2014 C2630.37,2032.74 2688.94,2069.54 2735.05,2103.99 " fill="none" id="eng.PhongVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="296.38,1711.73,295.8986,1718.925,302.355,1722.1367,302.8364,1714.9417,296.38,1711.73" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0ea8a29b43f00f8647cc9aa550b10e64]
reverse link eng.PhongVertexShader::Output to eng.PhongShader--><path codeLine="1021" d="M296.68,2234.8 C301.13,2295.54 308.55,2396.72 312.78,2454.49 " fill="none" id="eng.PhongVertexShader::Output-backto-eng.PhongShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="295.73,2221.75,292.1755,2228.0242,296.6,2233.7184,300.1545,2227.4442,295.73,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="288.6073" y="2242.6704">2</text><!--MD5=[51145a90a0674109684df77e457039df]
reverse link eng.PhongVertexShader::Output to eng.PhongShader::VertexShaderOutput--><path codeLine="1024" d="M220.08,2228.96 C162.1,2268.98 85.22,2333.62 51,2413 C20.56,2483.61 11.65,2519.94 51,2586 C74.35,2625.2 115.83,2652.12 156.31,2670.19 " fill="none" id="eng.PhongVertexShader::Output-backto-eng.PhongShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="231.04,2221.53,223.8291,2221.5828,221.1044,2228.2593,228.3153,2228.2065,231.04,2221.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cc52a78c7f1ebdb1bec7fe3942c35b84]
reverse link eng.PhongVertexShader::Output to eng.Triangle--><path codeLine="1027" d="M362.89,2228.24 C432.79,2269.32 544.9,2328.07 651,2353 C951.99,2423.71 3138.28,2319.55 3433,2413 C3448.58,2417.94 3464.01,2425.44 3478.45,2433.99 " fill="none" id="eng.PhongVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="351.61,2221.56,354.7264,2228.0629,361.9277,2227.6874,358.8113,2221.1845,351.61,2221.56" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1fdfc9083722094250cadaf03a3eb77d]
reverse link eng.Renderer to eng.BloomPipeline--><path codeLine="1030" d="M2651.52,883.97 C2756.68,923.35 2899.61,979.53 3022,1037 C3066.4,1057.84 3114,1083.08 3155.33,1105.98 " fill="none" id="eng.Renderer-backto-eng.BloomPipeline" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2639.21,879.37,2643.4348,885.2139,2650.4541,883.5618,2646.2293,877.7179,2639.21,879.37" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f63dc40ab458b31c5cbff9aae6816041]
reverse link eng.Renderer to eng.ConvertingPipeline--><path codeLine="1033" d="M2409.22,953.21 C2366.58,1010.67 2318.24,1075.82 2285.71,1119.67 " fill="none" id="eng.Renderer-backto-eng.ConvertingPipeline" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2417.11,942.57,2410.3195,944.9969,2409.948,952.1984,2416.7385,949.7715,2417.11,942.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6a06dd787e8279ca896abd5ffd5b61cb]
reverse link eng.Renderer to eng.DeferredShadingPipeline--><path codeLine="1036" d="M2350.74,889.1 C2252.78,928.9 2122.68,983.58 2010,1037 C1960.41,1060.51 1906.49,1088.6 1861.23,1112.93 " fill="none" id="eng.Renderer-backto-eng.DeferredShadingPipeline" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2362.83,884.19,2355.767,882.7361,2351.7084,888.6966,2358.7714,890.1505,2362.83,884.19" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b67f6863a566df40b9dfe87adcae57a1]
reverse link eng.Renderer to eng.ProjectionInfo--><path codeLine="1039" d="M2652.36,848.3 C2853.03,875.96 3216.36,935.64 3513,1037 C3518.72,1038.96 3524.48,1041.01 3530.26,1043.14 " fill="none" id="eng.Renderer-backto-eng.ProjectionInfo" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2639.38,846.52,2644.7793,851.2999,2651.2682,848.1543,2645.8689,843.3744,2639.38,846.52" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cffa20dfb591c6983a9030221fe1ec11]
reverse link eng.Renderer to eng.SSAOPipeline--><path codeLine="1042" d="M2349.63,847.6 C2151.25,874.33 1794.53,932.8 1505,1037 C1478.25,1046.63 1450.81,1058.63 1424.33,1071.45 " fill="none" id="eng.Renderer-backto-eng.SSAOPipeline" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2362.76,845.85,2356.2849,842.6762,2350.8648,847.4325,2357.3399,850.6063,2362.76,845.85" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[31f6ad2fc640d787a106942946ac74e5]
reverse link eng.Renderer to eng.ShadowMappingPipeline--><path codeLine="1045" d="M2592.65,953.03 C2633.12,1007.57 2678.75,1069.08 2711.13,1112.72 " fill="none" id="eng.Renderer-backto-eng.ShadowMappingPipeline" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2584.89,942.57,2585.2615,949.7715,2592.052,952.1984,2591.6805,944.9969,2584.89,942.57" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f7b07747ff03ddb10889a6683ad4ea9f]
reverse link SFMLRenderer to eng.Renderer--><path codeLine="1048" d="M2501,591.78 C2501,630.23 2501,674.51 2501,714.24 " fill="none" id="SFMLRenderer-backto-eng.Renderer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2501,578.71,2497,584.71,2501,590.71,2505,584.71,2501,578.71" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ec13822cac5ae3bda5a6fc7537500af2]
reverse link SFMLRenderer to eng.Texture--><path codeLine="1051" d="M2278.27,528.53 C1765.45,618.61 576.74,879.5 1000,1306 C1153.84,1461.02 8679.89,1245.45 8862,1366 C8936.08,1415.04 8967.18,1517.49 8980.08,1587.28 " fill="none" id="SFMLRenderer-backto-eng.Texture" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2291.37,526.24,2284.7697,523.3356,2279.5501,528.3111,2286.1504,531.2155,2291.37,526.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[fc0f6669ebc9ae7587918786f69f8384]
reverse link eng.SSAOGeometryPassVertexShader to eng.BasicVertexShader--><path codeLine="1054" d="M4320.29,1730.07 C4277.73,1800.31 4201.41,1905.5 4103,1954 C3907.09,2050.54 3331.29,1951.54 3122,2014 C3056.44,2033.57 2989.72,2070 2936.36,2103.99 " fill="none" id="eng.SSAOGeometryPassVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4327.08,1718.68,4320.5724,1721.7866,4320.9371,1728.9885,4327.4447,1725.8819,4327.08,1718.68" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[290c9fe713bf375e9678edb31ed34237]
reverse link eng.SSAOGeometryPassVertexShader::Output to eng.GeometryPassShader--><path codeLine="1057" d="M4443.79,2230.62 C4486.29,2270.31 4553.33,2325.42 4623,2353 C4846.7,2441.55 4925.29,2364.79 5161,2413 C5212.58,2423.55 5268.27,2439.31 5316.55,2454.44 " fill="none" id="eng.SSAOGeometryPassVertexShader::Output-backto-eng.GeometryPassShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4434.32,2221.64,4435.9206,2228.6712,4443.0266,2229.8981,4441.426,2222.8668,4434.32,2221.64" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="4432.5507" y="2242.5428">2</text><!--MD5=[dfaf36fef3cb5c9b412f0305962b3774]
reverse link eng.SSAOGeometryPassVertexShader::Output to eng.GeometryPassShader::VertexShaderOutput--><path codeLine="1060" d="M4443.85,2230.47 C4486.39,2270.06 4553.45,2325.11 4623,2353 C4726.46,2394.48 5036.08,2340.79 5121,2413 C5181.97,2464.85 5118.01,2526.01 5171,2586 C5208.26,2628.19 5263.31,2655.74 5314.31,2673.47 " fill="none" id="eng.SSAOGeometryPassVertexShader::Output-backto-eng.GeometryPassShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4434.37,2221.52,4435.9868,2228.5475,4443.0956,2229.7579,4441.4788,2222.7304,4434.37,2221.52" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[086d0578afbe795a69c1b0d58bc00713]
reverse link eng.SSAOGeometryPassVertexShader::Output to eng.Triangle--><path codeLine="1063" d="M4347.85,2230.39 C4301.63,2269.86 4229.28,2324.76 4156,2353 C3960.33,2428.41 3884.39,2339.48 3688,2413 C3673.48,2418.43 3658.98,2425.79 3645.22,2433.93 " fill="none" id="eng.SSAOGeometryPassVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="4357.88,2221.72,4350.7245,2222.6142,4348.7978,2229.5631,4355.9533,2228.6689,4357.88,2221.72" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[13ee748068db74ccb368a30ec9fb20ec]
reverse link eng.SSAOPipeline to eng.ColorAndDepthBuffer--><path codeLine="1066" d="M1424.7,1277.19 C1450.83,1288.98 1478.07,1299.19 1505,1306 C2161.15,1471.93 6935.75,1217.19 7596,1366 C7684.01,1385.84 7774.4,1418.94 7858.34,1455.91 " fill="none" id="eng.SSAOPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1412.78,1271.66,1416.5407,1277.8128,1423.6666,1276.7079,1419.9059,1270.5551,1412.78,1271.66" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1417.3303" y="1293.1039">2</text><!--MD5=[ddebf07a6605c80ecbe83820525b4fc3]
reverse link eng.SSAOPipeline to eng.GeometryInfo--><path codeLine="1069" d="M1425.06,1277.1 C1451.09,1288.87 1478.21,1299.09 1505,1306 C1673.74,1349.5 4500.72,1262.62 4641,1366 C4719.72,1424.02 4735.5,1548.22 4738.07,1614.76 " fill="none" id="eng.SSAOPipeline-backto-eng.GeometryInfo" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1413.19,1271.59,1416.9478,1277.7446,1424.0743,1276.6429,1420.3165,1270.4884,1413.19,1271.59" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9489f04e3441c6dd0c2a4278c08364aa]
reverse link eng.SSAOPipeline to eng.GeometryPassShader--><path codeLine="1072" d="M1425.06,1277.09 C1451.09,1288.86 1478.21,1299.09 1505,1306 C1588.64,1327.57 4551.61,1306.27 4614,1366 C4661.29,1411.27 4622.71,1894.96 4651,1954 C4780.83,2224.95 5119.79,2383.85 5310.19,2454.47 " fill="none" id="eng.SSAOPipeline-backto-eng.GeometryPassShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1413.19,1271.58,1416.9478,1277.7346,1424.0743,1276.6329,1420.3165,1270.4784,1413.19,1271.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[06d3a647563bd4f51a4fbb583a4c9a3d]
reverse link eng.SSAOPipeline to eng.Mesh--><path codeLine="1075" d="M1424.74,1277.04 C1450.86,1288.86 1478.09,1299.11 1505,1306 C1917.53,1411.6 4918.17,1289.11 5337,1366 C5342.79,1367.06 5348.58,1368.16 5354.39,1369.29 " fill="none" id="eng.SSAOPipeline-backto-eng.Mesh" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1412.82,1271.51,1416.5778,1277.6646,1423.7043,1276.5629,1419.9465,1270.4084,1412.82,1271.51" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[192906eb7d006e22bc97e83361d22db2]
reverse link eng.SSAOPipeline to eng.NoBlending--><path codeLine="1078" d="M1424.7,1277.18 C1450.83,1288.97 1478.07,1299.18 1505,1306 C1661.33,1345.57 7173.68,1279.86 7310,1366 C7404.27,1425.57 7438.13,1566.96 7448.74,1628.98 " fill="none" id="eng.SSAOPipeline-backto-eng.NoBlending" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1412.78,1271.65,1416.5378,1277.8046,1423.6643,1276.7029,1419.9065,1270.5484,1412.78,1271.65" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1446.083" y="1292.7786">2</text><!--MD5=[c75356ae9cb5c8ce42013b0c5c947b67]
reverse link eng.SSAOPipeline to eng.NoDiscard--><path codeLine="1081" d="M1424.71,1277.16 C1450.83,1288.96 1478.07,1299.18 1505,1306 C1653.51,1343.64 6889.73,1285.37 7020,1366 C7115.72,1425.25 7152.95,1566.82 7165.02,1628.93 " fill="none" id="eng.SSAOPipeline-backto-eng.NoDiscard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1412.78,1271.64,1416.5468,1277.7891,1423.6717,1276.6771,1419.9048,1270.528,1412.78,1271.64" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1417.3303" y="1293.0824">2</text><!--MD5=[34e20cae26cb38749166f66c193c9dfd]
reverse link eng.SSAOPipeline to eng.SSAOGeometryPassVertexShader--><path codeLine="1084" d="M1425.39,1277.14 C1451.32,1288.86 1478.32,1299.07 1505,1306 C1784.46,1378.64 3841.62,1243.31 4103,1366 C4208.15,1415.36 4287.24,1530.94 4327.74,1601.29 " fill="none" id="eng.SSAOPipeline-backto-eng.SSAOGeometryPassVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1413.56,1271.65,1417.3178,1277.8046,1424.4443,1276.7029,1420.6865,1270.5484,1413.56,1271.65" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c9ce2c60e14b0b0cda09ee8ab0581970]
reverse link eng.SSAOPipeline to eng.Vector2d--><path codeLine="1087" d="M1424.71,1277.16 C1450.84,1288.96 1478.07,1299.17 1505,1306 C1651.76,1343.2 6848.54,1258.36 6955,1366 C7046.89,1458.9 6969.32,1824.12 6955,1954 C6950.55,1994.4 6941.79,2038.11 6932.77,2076.37 " fill="none" id="eng.SSAOPipeline-backto-eng.Vector2d" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1412.79,1271.63,1416.5568,1277.7791,1423.6817,1276.6671,1419.9148,1270.518,1412.79,1271.63" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1424.855" y="1293.0717">2</text><!--MD5=[2f000210934b21f4bab4f20246ee8db4]
reverse link eng.Scene to eng.Camera--><path codeLine="1090" d="M6627,990.47 C6627,1022.97 6627,1055.92 6627,1084.6 " fill="none" id="eng.Scene-backto-eng.Camera" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="6627,977.08,6623,983.08,6627,989.08,6631,983.08,6627,977.08" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[761f53755bd4673032b5acf7ac142258]
reverse link eng.ShadowMappingPipeline to eng.ColorAndDepthBuffer--><path codeLine="1093" d="M2855.43,1236.56 C2903.89,1263.54 2963.89,1291.92 3022,1306 C3515.98,1425.65 7100.35,1253.44 7596,1366 C7683.83,1385.95 7774.06,1419.03 7857.87,1455.94 " fill="none" id="eng.ShadowMappingPipeline-backto-eng.ColorAndDepthBuffer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2844.01,1230.1,2847.263,1236.5357,2854.4548,1236.0082,2851.2018,1229.5725,2844.01,1230.1" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2847.5534" y="1251.7225">2</text><!--MD5=[bf9dd5c20e36dd8969f3afd2cf127815]
reverse link eng.ShadowMappingPipeline to eng.NoBlending--><path codeLine="1096" d="M2855.44,1236.53 C2903.9,1263.52 2963.89,1291.9 3022,1306 C3137.76,1334.09 7209.41,1302.18 7310,1366 C7403.92,1425.59 7437.91,1566.33 7448.64,1628.53 " fill="none" id="eng.ShadowMappingPipeline-backto-eng.NoBlending" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2844.01,1230.08,2847.2726,1236.5108,2854.4636,1235.9725,2851.201,1229.5417,2844.01,1230.08" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2855.4065" y="1251.7">2</text><!--MD5=[22dd112db3ecc16376cbd5a6b1057604]
reverse link eng.ShadowMappingPipeline to eng.NoDiscard--><path codeLine="1099" d="M2855.45,1236.51 C2903.9,1263.48 2963.9,1291.87 3022,1306 C3237.84,1358.5 6831.36,1248.7 7020,1366 C7115.6,1425.45 7152.89,1566.91 7165,1628.96 " fill="none" id="eng.ShadowMappingPipeline-backto-eng.NoDiscard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2844.02,1230.05,2847.273,1236.4857,2854.4648,1235.9582,2851.2118,1229.5225,2844.02,1230.05" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="2879.1985" y="1252.2301">2</text><!--MD5=[6024d7e5ed19f653c231d61f7df05ca7]
reverse link eng.TextureShader to eng.EmptyStruct--><path codeLine="1102" d="M3808.48,2549.38 C3770.81,2563.59 3728.21,2577.54 3688,2586 C3281.81,2671.43 3165.17,2576.24 2756,2646 C2701.53,2655.29 2640.76,2673.34 2599.63,2686.75 " fill="none" id="eng.TextureShader-backto-eng.EmptyStruct" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3821.06,2544.56,3814.0255,2542.9738,3809.8558,2548.8571,3816.8903,2550.4433,3821.06,2544.56" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c2cd99119734f856eb3c665f694a4074]
reverse link eng.TextureShader to eng.FragmentShaderUniform--><path codeLine="1105" d="M3803.47,2549.17 C3766.93,2562.71 3726.24,2576.34 3688,2586 C3441.95,2648.16 3144.81,2680.88 2988.77,2694.91 " fill="none" id="eng.TextureShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3815.69,2544.59,3808.6667,2542.955,3804.4562,2548.8093,3811.4795,2550.4442,3815.69,2544.59" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8c27915dd077981820e3f0d165279c6a]
reverse link eng.TextureVertexShader to eng.BasicVertexShader--><path codeLine="1108" d="M2825.25,1725.15 C2825.61,1820.79 2826.3,2000.56 2826.7,2103.94 " fill="none" id="eng.TextureVertexShader-backto-eng.BasicVertexShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2825.2,1711.95,2821.2198,1717.9632,2825.2396,1723.9499,2829.2198,1717.9368,2825.2,1711.95" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b01f29802d1ef88e99b231dd106347ae]
reverse link eng.TextureVertexShader::Output to eng.TextureShader--><path codeLine="1111" d="M3312.77,2232.61 C3341.41,2270.95 3386.41,2323.01 3438,2353 C3536.79,2410.42 3578.6,2380 3688,2413 C3728.06,2425.08 3771.27,2440.25 3809.52,2454.43 " fill="none" id="eng.TextureVertexShader::Output-backto-eng.TextureShader" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3304.77,2221.69,3305.0862,2228.8942,3311.8578,2231.3731,3311.5416,2224.169,3304.77,2221.69" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="3301.1599" y="2242.6008">2</text><!--MD5=[f1d1a7a0cc117cbca452a9e9cd821997]
reverse link eng.TextureVertexShader::Output to eng.Triangle--><path codeLine="1114" d="M3322.09,2231.7 C3370.03,2285.46 3448.64,2373.61 3502.27,2433.76 " fill="none" id="eng.TextureVertexShader::Output-backto-eng.Triangle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3313.22,2221.75,3314.225,2228.8907,3321.203,2230.7094,3320.198,2223.5687,3313.22,2221.75" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7e8333c968e7aec2937ce0b0590948d8]
reverse link eng.UVShader to eng.EmptyStruct--><path codeLine="1117" d="M2797.99,2551.56 C2730.81,2592.89 2639.31,2649.18 2588.65,2680.34 " fill="none" id="eng.UVShader-backto-eng.EmptyStruct" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2809.39,2544.55,2802.1836,2544.2885,2799.1706,2550.8399,2806.3769,2551.1014,2809.39,2544.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0744d2ccfb32f3403e8ed3167def2ab7]
reverse link eng.UVShader to eng.FragmentShaderUniform--><path codeLine="1120" d="M2881,2557.57 C2881,2585.09 2881,2618.04 2881,2645.66 " fill="none" id="eng.UVShader-backto-eng.FragmentShaderUniform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2881,2544.55,2877,2550.55,2881,2556.55,2885,2550.55,2881,2544.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[95c53edff8dcffaaff107b7e2a49c764]
reverse link eng.BasicVertexShader to eng.BasicVertexShader::BasicVertexShaderOutput--><path codeLine="1129" d="M2951.43,2271.91 C3024.51,2323.25 3115.32,2387.03 3181.94,2433.83 " fill="none" id="eng.BasicVertexShader-backto-eng.BasicVertexShader::BasicVertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="2945.4803" cy="2267.7228" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2952.0306" x2="2938.93" y1="2272.3156" y2="2263.13"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2940.8875" x2="2950.0731" y1="2274.2731" y2="2261.1725"/><!--MD5=[0ca8bee3d873c2e70e42e164981079ac]
reverse link eng.CameraControl to eng.CameraControl::MovementDirection--><path codeLine="1132" d="M6318.09,950.45 C6325.92,1002.79 6334.77,1061.96 6341.32,1105.75 " fill="none" id="eng.CameraControl-backto-eng.CameraControl::MovementDirection" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="6317.0478" cy="943.4413" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="6318.2357" x2="6315.86" y1="951.3526" y2="935.53"/><line style="stroke:#A80036;stroke-width:1.0;" x1="6309.1365" x2="6324.9592" y1="944.6292" y2="942.2535"/><!--MD5=[6a16fa8871258477c78b9ae12ca2bc02]
reverse link eng.CubemapVertexShader to eng.CubemapVertexShader::Output--><path codeLine="1135" d="M2325.99,1726.84 C2346.18,1837.66 2386.31,2057.93 2402.25,2145.42 " fill="none" id="eng.CubemapVertexShader-backto-eng.CubemapVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="2324.7124" cy="1719.8207" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2326.1448" x2="2323.28" y1="1727.6914" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2316.8417" x2="2332.5831" y1="1721.2531" y2="1718.3883"/><!--MD5=[bf80374d6b68b7b159ead66e51c037d5]
reverse link eng.FlatVertexShader to eng.FlatVertexShader::Output--><path codeLine="1138" d="M1824.48,1726.5 C1860.78,1837.21 1933.12,2057.84 1961.84,2145.42 " fill="none" id="eng.FlatVertexShader-backto-eng.FlatVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="1822.2009" cy="1719.5523" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1824.6919" x2="1819.71" y1="1727.1546" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1814.5986" x2="1829.8033" y1="1722.0433" y2="1717.0614"/><!--MD5=[ba15341771c9861394a6e462e9f63a17]
reverse link eng.GeometryPassShader to eng.GeometryPassShader::VertexShaderOutput--><path codeLine="1141" d="M5445,2559.87 C5445,2597.1 5445,2643.53 5445,2673.35 " fill="none" id="eng.GeometryPassShader-backto-eng.GeometryPassShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="5445" cy="2552.55" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="5445" x2="5445" y1="2560.55" y2="2544.55"/><line style="stroke:#A80036;stroke-width:1.0;" x1="5437" x2="5453" y1="2552.55" y2="2552.55"/><!--MD5=[03c46885e9426e22af6c7cefa851cd15]
reverse link eng.GeometryPassVertexShader to eng.GeometryPassVertexShader::Output--><path codeLine="1144" d="M5103.74,1726.16 C5142.34,1836.76 5219.46,2057.75 5250.06,2145.42 " fill="none" id="eng.GeometryPassVertexShader-backto-eng.GeometryPassVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="5101.417" cy="1719.5029" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="5104.0541" x2="5098.78" y1="1727.0558" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="5093.8641" x2="5108.9699" y1="1722.1399" y2="1716.8659"/><!--MD5=[f8551b204ec51d6a5f7ae4416abba2bd]
reverse link eng.NormalMapShader to eng.NormalMapShader::VertexShaderOutput--><path codeLine="1147" d="M4871.22,2556.97 C4895.49,2591.9 4925.94,2635.75 4947.19,2666.34 " fill="none" id="eng.NormalMapShader-backto-eng.NormalMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="4867.1552" cy="2551.1196" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="4871.7203" x2="4862.59" y1="2557.6891" y2="2544.55"/><line style="stroke:#A80036;stroke-width:1.0;" x1="4860.5856" x2="4873.7247" y1="2555.6847" y2="2546.5544"/><!--MD5=[dab146cf69dad6586c45a55ee08b9bd1]
reverse link eng.NormalMapVertexShader to eng.NormalMapVertexShader::Output--><path codeLine="1150" d="M3864.96,1726.5 C3895.32,1837.21 3955.82,2057.84 3979.83,2145.42 " fill="none" id="eng.NormalMapVertexShader-backto-eng.NormalMapVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3863.0891" cy="1719.6642" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3865.2083" x2="3860.97" y1="1727.3785" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3855.3749" x2="3870.8034" y1="1721.7834" y2="1717.5451"/><!--MD5=[da65172da2b448ad00c8d3ebb05d9c7d]
reverse link eng.NormalVertexShader to eng.NormalVertexShader::Output--><path codeLine="1153" d="M3367.9,1725.49 C3422.51,1835.86 3532.2,2057.57 3575.66,2145.42 " fill="none" id="eng.NormalVertexShader-backto-eng.NormalVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="3364.7603" cy="1719.1191" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3368.3105" x2="3361.21" y1="1726.2882" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="3357.5912" x2="3371.9293" y1="1722.6693" y2="1715.5688"/><!--MD5=[8e3f29914e3554e2688198c2433ca1f4]
reverse link eng.ParallaxMapShader to eng.ParallaxMapShader::VertexShaderOutput--><path codeLine="1156" d="M1466.5,2556.97 C1442.06,2591.9 1411.39,2635.75 1389.99,2666.34 " fill="none" id="eng.ParallaxMapShader-backto-eng.ParallaxMapShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="1470.6023" cy="2551.1039" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1466.0146" x2="1475.19" y1="2557.6577" y2="2544.55"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1464.0484" x2="1477.1562" y1="2546.5162" y2="2555.6916"/><!--MD5=[76f4450e93ae84ce75e04e8505e44d74]
reverse link eng.ParallaxMapVertexShader to eng.ParallaxMapVertexShader::Output--><path codeLine="1159" d="M1305.51,1726.84 C1328.25,1837.66 1373.44,2057.93 1391.39,2145.42 " fill="none" id="eng.ParallaxMapVertexShader-backto-eng.ParallaxMapVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="1304.0585" cy="1719.7866" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1305.667" x2="1302.45" y1="1727.6233" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1296.2219" x2="1311.8951" y1="1721.3951" y2="1718.1781"/><!--MD5=[521ce0edbd7e44667b399e17cecfe467]
reverse link eng.PhongShader to eng.PhongShader::VertexShaderOutput--><path codeLine="1162" d="M302.1,2559.28 C293.93,2593.82 283.86,2636.42 276.79,2666.34 " fill="none" id="eng.PhongShader-backto-eng.PhongShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="303.7439" cy="2552.3364" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="301.9077" x2="305.58" y1="2560.1229" y2="2544.55"/><line style="stroke:#A80036;stroke-width:1.0;" x1="295.9574" x2="311.5303" y1="2550.5003" y2="2554.1726"/><!--MD5=[cc83a2a7308b75de629a79f217fb833d]
reverse link eng.PhongShadowMappingShader to eng.PhongShadowMappingShader::VertexShaderOutput--><path codeLine="1165" d="M841.71,2553.78 C795.65,2589.2 736.33,2634.81 695.33,2666.34 " fill="none" id="eng.PhongShadowMappingShader-backto-eng.PhongShadowMappingShader::VertexShaderOutput" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="847.3827" cy="2549.4325" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="841.0454" x2="853.72" y1="2554.3149" y2="2544.55"/><line style="stroke:#A80036;stroke-width:1.0;" x1="842.5002" x2="852.2652" y1="2543.0952" y2="2555.7698"/><!--MD5=[3d23d131c4461cb6fc49e64a270f9246]
reverse link eng.PhongShadowMappingVertexShader to eng.PhongShadowMappingVertexShader::Output--><path codeLine="1168" d="M789.21,1726.84 C803.02,1837.66 830.47,2057.93 841.38,2145.42 " fill="none" id="eng.PhongShadowMappingVertexShader-backto-eng.PhongShadowMappingVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="788.3404" cy="1719.8885" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="789.3308" x2="787.35" y1="1727.8269" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="780.4019" x2="796.2789" y1="1720.8789" y2="1718.8981"/><!--MD5=[5a2b2a956f011173da05db18ca7b047d]
reverse link eng.PhongVertexShader to eng.PhongVertexShader::Output--><path codeLine="1171" d="M272.92,1727.18 C277.81,1838.11 287.51,2058.02 291.36,2145.42 " fill="none" id="eng.PhongVertexShader-backto-eng.PhongVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="272.6005" cy="1719.9423" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="272.9509" x2="272.25" y1="1727.9346" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="264.6082" x2="280.5928" y1="1720.2928" y2="1719.5918"/><!--MD5=[57a3d3af704b8486d5f617a07d35543c]
reverse link eng.SSAOGeometryPassVertexShader to eng.SSAOGeometryPassVertexShader::Output--><path codeLine="1174" d="M4363.6,1734.04 C4372.26,1846.89 4388.57,2059.55 4395.15,2145.28 " fill="none" id="eng.SSAOGeometryPassVertexShader-backto-eng.SSAOGeometryPassVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="4363.0395" cy="1726.7767" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="4363.649" x2="4362.43" y1="1734.7535" y2="1718.8"/><line style="stroke:#A80036;stroke-width:1.0;" x1="4355.0627" x2="4371.0162" y1="1727.3862" y2="1726.1673"/><!--MD5=[3c2e7b84831de19620c2cd127128d7fa]
reverse link eng.TextureVertexShader to eng.TextureVertexShader::Output--><path codeLine="1177" d="M2879.51,1723.47 C2975.19,1833.15 3170.54,2057.04 3247.65,2145.42 " fill="none" id="eng.TextureVertexShader-backto-eng.TextureVertexShader::Output" style="stroke:#A80036;stroke-width:1.0;"/><ellipse cx="2874.7232" cy="1717.9749" fill="#FFFFFF" rx="8" ry="8" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2879.9864" x2="2869.46" y1="1723.9997" y2="1711.95"/><line style="stroke:#A80036;stroke-width:1.0;" x1="2868.6983" x2="2880.748" y1="1723.238" y2="1712.7117"/><!--MD5=[60355a0da86c3c557f89ff216581e445]
link eng.Pool to eng.AlphaBlending128--><!--MD5=[bf0a283ab827964142e6beb89e30a94f]
link eng.AlphaBlending128 to eng.AlphaBlending32--><!--MD5=[35d9761acacc9f5ed64a567c687c43da]
link eng.AlphaBlending32 to eng.AlphaDiscard128--><!--MD5=[eafcb2386096b002a881e1ec49e8b9f1]
link eng.AlphaDiscard128 to eng.AlphaDiscard32--><!--MD5=[9b8be7e6398cd21e21640ce395391aeb]
link eng.AlphaDiscard32 to eng.ClampT1--><!--MD5=[098bc0080bf193d4e64c02c981aecf9e]
link eng.Pool to eng.GenericBlending--><!--MD5=[a6dfce888b42ee7f11af2685b16b71d4]
link eng.GenericBlending to eng.GenericBlendingColor128,B128,B32--><!--MD5=[05ffda881ab0681b9e38b0902a8a6d80]
link eng.GenericBlendingColor128,B128,B32 to eng.GenericBlendingColor32,B128,B32--><!--MD5=[4a53ae0d34c278f3e22c231897441bcb]
link eng.GenericBlendingColor32,B128,B32 to eng.GenericDiscard--><!--MD5=[fca2a8db32590aae79ab92d8b69a36ee]
link eng.GenericDiscard to eng.GenericDiscardColor128,D128,D32--><!--MD5=[e87da28f2f61e1b6a5d067a692319344]
link eng.GenericDiscardColor128,D128,D32 to eng.GenericDiscardColor32,D128,D32--><!--MD5=[bccdab7974e8fb4a6ecbfa33884378f5]
link eng.GenericBlending to eng.HDRT1--><!--MD5=[18c0aec7f04bbaddfb310423bdd87895]
link eng.HDRT1 to eng.IdentityT1--><!--MD5=[ba2b035d42589ad07d507cbad0ad5f01]
link eng.IdentityT1 to eng.IdentityT2--><!--MD5=[851f9a30e36884135ed6be023d2f6ab7]
link eng.IdentityT2 to eng.NoVariables--><!--MD5=[656df05ed3051fb4dcc39bd3f7abb152]
link eng.NoVariables to eng.OneVariable--><!--MD5=[d9c5bd41d91038d159681c78875cebf5]
link eng.OneVariable to eng.PipelineResult--><!--MD5=[1c2cc2375b5d93596a43718caa892fe1]
link eng.HDRT1 to eng.PointLight--><!--MD5=[6903c3eff410538427f20cf1c16d1e74]
link eng.PointLight to eng.Properties--><!--MD5=[05771ed45250a252f0269ae2318e588f]
link eng.Properties to eng.ThreeVariables--><!--MD5=[f82e958e82195a3bd982f8a436db0685]
link eng.ThreeVariables to eng.TransformationConversion--><!--MD5=[d58cb02785303c30cc27d53d8081926e]
link eng.TransformationConversion to eng.TransformationConversionColor,Color,T1,T2--><!--MD5=[b9f5f38ed879b86ab7030902c7d8af7b]
link eng.TransformationConversionColor,Color,T1,T2 to eng.TransformationConversionColor128,Color32,T1,T2--><!--MD5=[2f53040f989698753227fe4172e43b65]
link eng.PointLight to eng.TransformationConversionColor32,Color128,T1,T2--><!--MD5=[d570b05663bd957e35f256542f9a579d]
link eng.TransformationConversionColor32,Color128,T1,T2 to eng.TransparentTriangle--><!--MD5=[ba020911c35cee00f095695c65cdb23d]
link eng.TransparentTriangle to eng.TwoVariables--><!--MD5=[0a9dc99875e2faf67885aadb79bd7e2f]
link eng.TwoVariables to eng.TypeNameMap--><!--MD5=[2f94c64f90781bfe7a1504e14c5ffd88]
link eng.TypeNameMap to eng.WorldSpaceTriangle--><!--MD5=[03325042a5c63d863be61ba90fe171ab]
@startuml





/' Objects '/

class Application {
	+Application()
	-renderer_ : SFMLRenderer
	-userInterface_ : UserInterface
	-pause : bool
	-cameraControl_ : eng::CameraControl
	-mainAppWindow_ : sf::RenderWindow
	-currentSceneIndex_ : size_t
	-{static} defaultHeight_ : static constexpr const Pixels
	-{static} defaultWidth_ : static constexpr const Pixels
	-{static} mainWindowMsg_ : static constexpr const char*
	-scenes_ : std::vector<eng::Scene>
	-onClose() : void
	-onKeyPressOrRelease(sf::Keyboard::Key key, bool mode) : void
	-onMouseEnter() : void
	-onMouseMove(glm::vec2 newPosition) : void
	-processEvents() : void
	+run() : void
	-update(float dt) : void
}


class SFMLRenderer {
	+SFMLRenderer(Pixels width, Pixels height, sf::RenderWindow& mainAppWindow)
	-windowHeight_ : Pixels
	-windowWidth_ : Pixels
	-renderer_ : eng::Renderer
	-screenSprite_ : sf::Sprite
	-screenTexture_ : sf::Texture
	+render(eng::Scene& scene) : size_t
	-mainAppWindow_ : std::reference_wrapper<sf::RenderWindow>
	+renderToFile(eng::Scene& scene, const std::string& file) : void
}


class UserInterface {
	+UserInterface(sf::RenderWindow& window_)
	-pause : bool
	-currentTime_ : float
	-framesPerSecond_ : float
	-lastTime_ : float
	-font_ : sf::Font
	-text2_ : sf::Text
	-text3_ : sf::Text
	-text4_ : sf::Text
	-text5_ : sf::Text
	-text_ : sf::Text
	-frames_ : size_t
	-mainAppWindow_ : std::reference_wrapper<sf::RenderWindow>
	+togglePause() : void
	+updateAndDraw(float deltaTime, size_t trianglesCount, size_t& sceneIndex, std::vector<eng::Scene>& scenes) : void
}


namespace eng {
	class Assets {
		-Assets()
		+{static} get() : Assets&
		-cubemapTexture : CubemapTexture
		+{static} getCubemapTexture() : CubemapTextureRef
		+{static} getCubemapTexture(std::string filename, bool defaultFormat, const std::string& imageFormat) : CubemapTextureRef
		+{static} getMeshData(std::string filename, float scale, bool in, bool ov) : MeshDataRef
		-texture : Texture
		+{static} getTexture() : TextureRef
		+{static} getTexture(std::string filename) : TextureRef
		-shadowMappingInfo_ : std::optional<ShadowMappingInfo>
		+{static} getShadowMappingInfo() : std::optional<ShadowMappingInfo>&
		+{static} setShadowMappingInfo(const std::optional<ShadowMappingInfo>& info) : void
	}

	class BloomPipeline {
		+BloomPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color128, DefaultConversion, NoBlending, AlphaDiscard>
		-result_ : ColorBuffer32
		-bloom_buffer1_ : ColorBuffer96
		-bloom_buffer2_ : ColorBuffer96
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Camera {
		+Camera(glm::vec3 position, glm::vec3 direction)
		-viewMatrix_ : glm::mat4
		+getViewMatrix() : glm::mat4& {query}
		-direction_ : glm::vec3
		-position_ : glm::vec3
		+getDirection() : glm::vec3& {query}
		+getPosition() : glm::vec3& {query}
		+setDirection(glm::vec3 direction) : void
		+setPosition(glm::vec3 position) : void
	}

	class CameraControl {
		+CameraControl(glm::vec3 position, glm::vec3 direction)
		-pitch_ : float
		-yaw_ : float
		-direction_ : glm::vec3
		+getDirection() : glm::vec3 {query}
		+getPosition() : glm::vec3 {query}
		-position_ : glm::vec3
		+keyPressedOrReleased(sf::Keyboard::Key key, bool mode) : void
		+mouseMove(glm::vec2 delta) : void
		+setDirection(glm::vec3 dir) : void
		+setPosition(glm::vec3 pos) : void
		+update(float deltaTime) : void
	}

	class ColorAndDepthBuffer <template<typename ColorType, template<typename Color1, typename Color2>class ConvertionType, template<typename Color>class BlendingType, template<typename Color>class DiscardType>> {
		+ColorAndDepthBuffer(Pixels width, Pixels height, ColorType clearColor)
		+{static} blend(Clr source, Clr destination) : Clr
		+getClearColor() : Color {query}
		+getPixelColor(Pixels x, Pixels y) : Color {query}
		+{static} convertColor(Color1 color) : Color2
		+getColorBuffer() : ColorBuffer& {query}
		+getColorBuffer() : ColorBuffer&
		-clearColor_ : ColorType
		+getPixelDepth(Pixels x, Pixels y) : Depth {query}
		+getDepthBuffer() : DepthBuffer& {query}
		+getDepthBuffer() : DepthBuffer&
		+getHeight() : Pixels {query}
		+getWidth() : Pixels {query}
		-height_ : Pixels
		-width_ : Pixels
		-colorBuffer_ : Vector2d<Color>
		-depthBuffer_ : Vector2d<Depth>
		+{static} discard(Clr color) : bool
		-writeToDepthBuffer_ : bool
		+clear() : void
		-depthCheckSetPixelColor(Pixels x, Pixels y, Depth z, ColorType color) : void
		+setClearColor(ColorType clr) : void
		-setPixelColor(Pixels x, Pixels y, ColorType color) : void
		+setPixelColor(Pixels x, Pixels y, ColorType color, Depth z) : void
		-setPixelDepth(Pixels x, Pixels y, Depth z) : void
		+setWriteToDepthBuffer(bool b) : void
	}

	class ConvertingPipeline {
		+ConvertingPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color128, DefaultConversion, NoBlending, NoDiscard>
		-result_ : ColorBuffer32
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class DeferredShadingPipeline {
		+DeferredShadingPipeline(Pixels width, Pixels height)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-gBuffer_ : ColorAndDepthBuffer<GeometryInfo, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : Mesh<GeometryPassVertexShader, GeometryPassShader>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Mesh <template<typename VertexShader, typename FragmentShader>> {
		+Mesh(reference_wrapper<const MeshData> mesh, VertexShaderUniform vertexShaderUniform, FragmentShaderUniform fragmentShaderUniform, const ObjectTransform& objectTransform, bool wireframeMode, bool writeToDepthBuffer, Color32 wireframeColor, bool drawingEnabled, bool transparent, bool drawBackface)
		-wireframeColor_ : Color32
		-fragmentShader_ : FragmentShader
		+getFragmentShader() : FragmentShader&
		-fragmentShaderUniform_ : FragmentShaderUniform
		+getFragmentShaderUniform() : FragmentShaderUniform& {query}
		+getFragmentShaderUniform() : FragmentShaderUniform&
		+getMeshData() : MeshDataRef {query}
		-objectTransform_ : ObjectTransform
		+getTransform() : ObjectTransform& {query}
		+getTransform() : ObjectTransform&
		-vertexShader_ : VertexShader
		-vertexShaderUniform_ : VertexShaderUniform
		+getVertexShaderUniform() : VertexShaderUniform& {query}
		+getVertexShaderUniform() : VertexShaderUniform&
		-drawBackface_ : bool
		-drawingEnabled_ : bool
		+getDrawBackface() : bool {query}
		+getDrawingEnabled() : bool {query}
		+getIsTransparent() : bool {query}
		+getWireframeMode() : bool {query}
		+getWriteToDepthBuffer() : bool {query}
		-isTransparent_ : bool
		-wireframeMode_ : bool
		-writeToDepthBuffer_ : bool
		+getCenter(const eng::MeshData& mesh, const eng::Face& face, const glm::mat4& model) : glm::vec3
		+getWireframeColor() : glm::vec3 {query}
		-mesh_ : reference_wrapper<const MeshData>
		+getTriangleCount() : size_t {query}
		+getDistances(const Camera& camera) : std::vector<Distance>
		+draw(const Camera& camera, ProjectionInfo& projectionInfo, const LightsVec& lights, Buffer& buffer) : void
		+drawFace(const Camera& camera, ProjectionInfo& projectionInfo, const LightsVec& lights, Buffer& buffer, size_t faceIndex) : void
		+setDrawingMode(bool wireframeMode, bool drawingEnabled, bool writeToDepthBuffer, Color32 wireframeColor, bool transparent) : void
		+setFragmentShaderUniform(FragmentShaderUniform fragmentShaderUniform) : void
		+setIsTransparent(bool transparent) : void
		+setMeshData(reference_wrapper<const MeshData> mesh) : void
		+setTransform(const ObjectTransform& objectTransform) : void
		+setVertexShaderUniform(VertexShaderUniform vertexShaderUniform) : void
		+setWireframeColor(Color32 color) : void
	}

	class ObjectTransform {
		+ObjectTransform()
		+ObjectTransform(glm::vec3 pos)
		+ObjectTransform(glm::vec3 pos, glm::vec3 scale)
		-modelInvalid_ : bool
		-model_ : glm::mat4
		+getModel() : glm::mat4&
		+getOrientation() : glm::quat {query}
		-orientation_ : glm::quat
		+getPosition() : glm::vec3 {query}
		+getScale() : glm::vec3 {query}
		-position_ : glm::vec3
		-scale_ : glm::vec3
		+setOrientation(const glm::quat orientation) : void
		+setPosition(const glm::vec3 position) : void
		+setScale(const glm::vec3 scale) : void
	}

	class OnePassPipeline <template<template<typename Color1, typename Color2>class Conversion, template<typename Color>class Blending, template<typename Color>class Discard>> {
		+OnePassPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color32, Conversion, Blending, Discard>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class OnePassTransparentPipeline <template<template<typename Color1, typename Color2>class Conversion, template<typename Color>class Blending, template<typename Color>class Discard>> {
		+OnePassTransparentPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color32, Conversion, Blending, Discard>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Pool {
		-Pool()
		+{static} get() : Pool&
		+{static} getPool() : std::pmr::monotonic_buffer_resource*
	}

	class ProjectionInfo {
		+ProjectionInfo(Pixels width, Pixels height, Depth near, Depth far, Degrees fov)
		+ProjectionInfo(Pixels width, Pixels height, bool dummy, Distance frustrumSize, Depth near, Depth far)
		-aspectRatio_ : AspectRatio
		-farPlaneDistance_ : Depth
		+getFarPlaneDistance() : Depth {query}
		+getNearPlaneDistance() : Depth {query}
		-nearPlaneDistance_ : Depth
		+getHeight() : Pixels {query}
		+getWidth() : Pixels {query}
		-screenHeight_ : Pixels
		-screenWidth_ : Pixels
		-projectionMatrix_ : glm::mat4
		+getProjectionMatrix() : glm::mat4& {query}
		-{static} defaultFieldOfViewAngle_ : static constexpr const Degrees
		-{static} defaultFarPlaneDistance_ : static constexpr const Depth
		-{static} defaultNearPlaneDistance_ : static constexpr const Depth
	}

	class Renderer {
		+Renderer(Pixels width, Pixels height)
		-blendingPipeline_ : BlendingPipeline
		-blendingSortingPipeline_ : BlendingSortingPipeline
		-bloomPipeline_ : BloomPipeline
		-convertingPipeline_ : ConvertingPipeline
		-defaultPipeline_ : DefaultPipeline
		-deferredShadingPipeline_ : DeferredShadingPipeline
		-hdrPipeline_ : HDRPipeline
		+renderScene(Scene& scene) : PipelineResult
		-projectionInfo_ : ProjectionInfo
		+getProjectionInfo() : ProjectionInfo&
		-ssaoPipeline_ : SSAOPipeline
		-shadowMappingPipeline_ : ShadowMappingPipeline
	}

	class SSAOPipeline {
		+SSAOPipeline(Pixels width, Pixels height)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-gBuffer_ : ColorAndDepthBuffer<GeometryInfo, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : Mesh<SSAOGeometryPassVertexShader, GeometryPassShader>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
		-blurredOcclusionTexture : Vector2d<float>
		-occlusionTexture : Vector2d<float>
		-{static} noiseTextureSize : static constexpr size_t
		-{static} sampleCount : static constexpr size_t
		-ssaoKernel : std::vector<glm::vec3>
		-ssaoNoise : std::vector<glm::vec3>
	}

	class Scene {
		+Scene()
		+Scene(const std::string& name)
		-camera_ : Camera
		+getCamera() : Camera& {query}
		+getCamera() : Camera&
		-pointLights_ : LightsVec
		+getPointLights() : LightsVec& {query}
		+getPointLights() : LightsVec&
		-objects_ : ObjectsVec
		+getAllObjects() : ObjectsVec& {query}
		+getAllObjects() : ObjectsVec&
		-name_ : std::string
		-pipeline_ : std::string
		+getName() : std::string& {query}
		+getName() : std::string&
		+getPipeline() : std::string& {query}
		+getPipeline() : std::string&
		+addObject(std::string name, const T& t) : void
	}

	class ShadowMappingPipeline {
		+ShadowMappingPipeline(Pixels width, Pixels height, Pixels depthMapWidth, Pixels depthMapHeight)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-depthMapBuffer_ : ColorAndDepthBuffer<Color32, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : FlatMesh
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Vector2d <template<typename T>> {
		+Vector2d(size_t width, size_t height, const T& elem)
		+get(size_t x, size_t y) : T& {query}
		+get(size_t i) : T&
		+get(size_t i) : T& {query}
		+get_pointer() : T* {query}
		+getHeight() : size_t {query}
		+getWidth() : size_t {query}
		-matrixHeight_ : size_t
		-matrixWidth_ : size_t
		-vector_ : std::pmr::vector<T>
		+fill(const T& elem) : void
		+set(size_t x, size_t y, const T& elem) : void
	}

	enum CameraControl::MovementDirection {
		Backward
		Down
		Forward
		Left
		Right
		Up
	}

	class AlphaBlending128 {
		+{static} blend(Color128 source, Color128 destination) : Color128
	}

	class AlphaBlending32 {
		+{static} blend(Color32 source, Color32 destination) : Color32
	}

	class AlphaDiscard128 {
		+{static} discard(Color128 color) : bool
	}

	class AlphaDiscard32 {
		+{static} discard(Color32 color) : bool
	}

	class BasicVertexShader {
		+run(const WorldSpaceTriangle& tr) : BasicVertexShaderOutput
		+normalMatrix : glm::mat3
		+model : glm::mat4
		+projection : glm::mat4
		+view : glm::mat4
		+vm : glm::mat4
		+viewPos : glm::vec3
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class BasicVertexShader::BasicVertexShaderOutput {
		+v0 : glm::vec3
		+v1 : glm::vec3
		+v2 : glm::vec3
		+cv0 : glm::vec4
		+cv1 : glm::vec4
		+cv2 : glm::vec4
	}

	class ClampT1 {
		+{static} transform(Color128 color) : Color128
	}

	class CubemapShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec3> var, const LightsVec& lights) : glm::vec4
	}

	class CubemapTexture {
		+CubemapTexture()
		+CubemapTexture(const std::string& folder, bool defaultFormat, const std::string& imageFormat)
		+sample(glm::vec3 direction) : Color128 {query}
		+textures : array<Texture, 6>
		+defaultFormat : bool
		+fileName : std::string
		+imageFormat : std::string
	}

	class CubemapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class CubemapVertexShader::Output {
		+uniformOutput : CubemapShader::VertexShaderOutput
		+triangle : Triangle<CubemapShader::Var>
	}

	class EmptyStruct {
	}

	class Face {
		+i : size_t
		+j : size_t
		+k : size_t
		+ni : size_t
		+nj : size_t
		+nk : size_t
		+ti : size_t
		+tj : size_t
		+tk : size_t
	}

	class FlatShader {
		+computePixelColor(NoVariables var, const LightsVec& lights) : Color128
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
	}

	class FlatVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class FlatVertexShader::Output {
		+uniformOutput : FlatShader::VertexShaderOutput
		+triangle : Triangle<FlatShader::Var>
	}

	class FragmentShaderUniform {
		+cubemapTexture : CubemapTextureRef
		+diffuseTexture : TextureRef
		+displacementTexture : TextureRef
		+normalTexture : TextureRef
		+flatColor : glm::vec3
	}

	class GenericBlending <template<typename Color, typename B128, typename B32>> {
		+{static} blend(Color source, Color destination) : Color
	}

	class GenericBlendingColor128,B128,B32 <template<typename B128, typename B32>> {
		+{static} blend(Color128 source, Color128 destination) : Color128
	}

	class GenericBlendingColor32,B128,B32 <template<typename B128, typename B32>> {
		+{static} blend(Color32 source, Color32 destination) : Color32
	}

	class GenericDiscard <template<typename Color, typename D128, typename D32>> {
		+{static} discard(Color color) : bool
	}

	class GenericDiscardColor128,D128,D32 <template<typename D128, typename D32>> {
		+{static} discard(Color128 color) : bool
	}

	class GenericDiscardColor32,D128,D32 <template<typename D128, typename D32>> {
		+{static} discard(Color32 color) : bool
	}

	class GeometryInfo {
		+diffuseColor : glm::vec3
		+normal : glm::vec3
		+position : glm::vec3
	}

	class GeometryPassShader {
		+uniform : FragmentShaderUniform
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : GeometryInfo
		+vso : VertexShaderOutput
	}

	class GeometryPassShader::VertexShaderOutput {
		+normal : glm::vec3
	}

	class GeometryPassVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class GeometryPassVertexShader::Output {
		+uniformOutput : GeometryPassShader::VertexShaderOutput
		+triangle : Triangle<GeometryPassShader::Var>
	}

	class HDRT1 {
		+{static} transform(Color128 color) : Color128
	}

	class IdentityT1 {
		+{static} transform(Color128 color) : Color128
	}

	class IdentityT2 {
		+{static} transform(Color32 color) : Color32
	}

	class MeshData {
		+{static} generateCubeData(float size, bool invertNormals) : MeshData
		+invertNormals : bool
		+onlyVertices : bool
		+scale : float
		+fileName : std::string
		+faces : std::vector<Face>
		+textureCoords : std::vector<glm::vec2>
		+bitangents : std::vector<glm::vec3>
		+normals : std::vector<glm::vec3>
		+tangents : std::vector<glm::vec3>
		+vertices : std::vector<glm::vec3>
		+generateTBNVectors() : void
	}

	class NoBlending <template<typename Color>> {
		+{static} blend(Color source, Color destination) : Color
	}

	class NoDiscard <template<typename Color>> {
		+{static} discard(Color color) : bool
	}

	class NoVariables {
		+operator*(float t) : NoVariables {query}
		+operator+(const NoVariables& oth) : NoVariables {query}
		+operator*=(float t) : void
	}

	class NormalMapShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class NormalMapShader::VertexShaderOutput {
		+invTBN : glm::mat3
		+viewPos : glm::vec3
	}

	class NormalMapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class NormalMapVertexShader::Output {
		+uniformOutput : NormalMapShader::VertexShaderOutput
		+triangle : Triangle<NormalMapShader::Var>
	}

	class NormalShader {
		+uniform : FragmentShaderUniform
		+computePixelColor(NoVariables var, const LightsVec& lights) : glm::vec4
		+vso : vec3
	}

	class NormalVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class NormalVertexShader::Output {
		+uniformOutput : NormalShader::VertexShaderOutput
		+triangle : Triangle<NormalShader::Var>
	}

	class OneVariable <template<typename T>> {
		+operator*(float t_) : OneVariable {query}
		+operator+(const OneVariable& oth) : OneVariable {query}
		+t : T
		+operator*=(float t_) : void
	}

	class ParallaxMapShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class ParallaxMapShader::VertexShaderOutput {
		+TBN : glm::mat3
		+viewPos : glm::vec3
	}

	class ParallaxMapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class ParallaxMapVertexShader::Output {
		+uniformOutput : ParallaxMapShader::VertexShaderOutput
		+triangle : Triangle<ParallaxMapShader::Var>
	}

	class PhongShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class PhongShader::VertexShaderOutput {
		+normal : glm::vec3
		+viewPos : glm::vec3
	}

	class PhongShadowMappingShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(ThreeVariables<glm::vec4, glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class PhongShadowMappingShader::VertexShaderOutput {
		+normal : glm::vec3
		+viewPos : glm::vec3
	}

	class PhongShadowMappingVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class PhongShadowMappingVertexShader::Output {
		+uniformOutput : PhongShadowMappingShader::VertexShaderOutput
		+triangle : Triangle<PhongShadowMappingShader::Var>
	}

	class PhongVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class PhongVertexShader::Output {
		+uniformOutput : PhongShader::VertexShaderOutput
		+triangle : Triangle<PhongShader::Var>
	}

	class PipelineResult {
		+buffer : const Color32*
		+trianglesCount : size_t
	}

	class PointLight {
		+PointLight(glm::vec3 position, glm::vec3 color, float intensity, float specularCoefficient, float diffuseCoefficient, float linearAttenuationCoefficient, float quadraticAttenuationCoefficient, float cubicAttenuationCoefficient)
		+cubicAttenuationCoefficient : float
		+diffuseCoefficient : float
		+intensity : float
		+linearAttenuationCoefficient : float
		+quadraticAttenuationCoefficient : float
		+specularCoefficient : float
		+color : glm::vec3
		+position : glm::vec3
		+{static} defaultCubicAttenuationCoefficient : static constexpr const float
		+{static} defaultDiffuseCoefficient : static constexpr const float
		+{static} defaultIntensity : static constexpr const float
		+{static} defaultLinearAttenuationCoefficient : static constexpr const float
		+{static} defaultQuadraticAttenuationCoefficient : static constexpr const float
		+{static} defaultSpecularCoefficient : static constexpr const float
	}

	class Properties {
		+cubemapDefaultFormat : bool
		+drawBackface : bool
		+drawingEnabled : bool
		+isTransparent : bool
		+meshInvertNormals : bool
		+meshOnlyVertices : bool
		+wireframeMode : bool
		+writeToDepthBuffer : bool
		+meshScale : float
		+flatColor : glm::vec3
		+transformPosition : glm::vec3
		+transformScale : glm::vec3
		+wireframeColor : glm::vec3
		+cubemapImageFormat : std::string
		+cubemapTextureName : std::string
		+diffuseTextureName : std::string
		+displacementTextureName : std::string
		+meshFileName : std::string
		+name : std::string
		+normalTextureName : std::string
		+typeName : std::string
	}

	class SSAOGeometryPassVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+normalMatrix : glm::mat3
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class SSAOGeometryPassVertexShader::Output {
		+uniformOutput : GeometryPassShader::VertexShaderOutput
		+triangle : Triangle<GeometryPassShader::Var>
	}

	class ShadowMappingInfo {
		+depthMap : std::reference_wrapper<const DepthBuffer>
		+lightSpaceMatrix : std::reference_wrapper<const glm::mat4>
	}

	class Texture {
		+Texture()
		+Texture(const std::string& file)
		+sample(glm::vec2 uv) : Color128 {query}
		+colorBuffer : ColorBuffer128
		+textureHeight : Pixels
		+textureWidth : Pixels
		+fileName : std::string
	}

	class TextureShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class TextureVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class TextureVertexShader::Output {
		+uniformOutput : TextureShader::VertexShaderOutput
		+triangle : Triangle<TextureShader::Var>
	}

	class ThreeVariables <template<typename T1, typename T2, typename T3>> {
		+t1 : T1
		+t2 : T2
		+t3 : T3
		+operator*(float t) : ThreeVariables {query}
		+operator+(const ThreeVariables& oth) : ThreeVariables {query}
		+operator*=(float t) : void
	}

	class TransformationConversion <template<typename Color1, typename Color2, typename T1, typename T2>> {
		+{static} convertColor(Color1 color) : Color2
	}

	class TransformationConversionColor,Color,T1,T2 <template<typename Color, typename T1, typename T2>> {
		+{static} convertColor(Color color) : Color
	}

	class TransformationConversionColor128,Color32,T1,T2 <template<typename T1, typename T2>> {
		+{static} convertColor(Color128 color) : Color32
	}

	class TransformationConversionColor32,Color128,T1,T2 <template<typename T1, typename T2>> {
		+{static} convertColor(Color32 color) : Color128
	}

	class TransparentTriangle {
		+distance : float
		+faceIndex : size_t
		+meshName : std::string_view
	}

	class Triangle <template<typename Var>> {
		+v0 : Var
		+v1 : Var
		+v2 : Var
		+p0 : glm::vec4
		+p1 : glm::vec4
		+p2 : glm::vec4
	}

	class TwoVariables <template<typename T1, typename T2>> {
		+t1 : T1
		+t2 : T2
		+operator*(float t) : TwoVariables {query}
		+operator+(const TwoVariables& oth) : TwoVariables {query}
		+operator*=(float t) : void
	}

	class TypeNameMap <template<typename T>> {
		+{static} name : static const std::string
	}

	class UVShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class WorldSpaceTriangle {
		+t0 : glm::vec2
		+t1 : glm::vec2
		+t2 : glm::vec2
		+bitangent : glm::vec3
		+normal : glm::vec3
		+tangent : glm::vec3
		+v0 : glm::vec3
		+v1 : glm::vec3
		+v2 : glm::vec3
	}
}





/' Inheritance relationships '/




/' Aggregation relationships '/

.Application *- - eng.CameraControl


.Application *- - .SFMLRenderer


.Application *- - eng.Scene


.Application *- - .UserInterface


eng.Assets *- - eng.CubemapTexture


eng.Assets *- - eng.ShadowMappingInfo


eng.Assets *- - eng.Texture


eng.BloomPipeline *- - eng.ColorAndDepthBuffer


eng.BloomPipeline *- - eng.NoBlending


eng.ColorAndDepthBuffer "2" *- - eng.Vector2d


eng.ConvertingPipeline *- - eng.ColorAndDepthBuffer


eng.ConvertingPipeline *- - eng.NoBlending


eng.ConvertingPipeline *- - eng.NoDiscard


eng.CubemapShader *- - eng.EmptyStruct


eng.CubemapShader *- - eng.FragmentShaderUniform


eng.CubemapTexture *- - eng.Texture


eng.CubemapVertexShader *- - eng.BasicVertexShader


eng.CubemapVertexShader::Output "2" *- - eng.CubemapShader


eng.CubemapVertexShader::Output *- - eng.Triangle


eng.DeferredShadingPipeline "2" *- - eng.ColorAndDepthBuffer


eng.DeferredShadingPipeline *- - eng.GeometryInfo


eng.DeferredShadingPipeline *- - eng.GeometryPassShader


eng.DeferredShadingPipeline *- - eng.GeometryPassVertexShader


eng.DeferredShadingPipeline *- - eng.Mesh


eng.DeferredShadingPipeline "2" *- - eng.NoBlending


eng.DeferredShadingPipeline "2" *- - eng.NoDiscard


eng.FlatShader *- - eng.EmptyStruct


eng.FlatShader *- - eng.FragmentShaderUniform


eng.FlatVertexShader *- - eng.BasicVertexShader


eng.FlatVertexShader::Output "2" *- - eng.FlatShader


eng.FlatVertexShader::Output *- - eng.Triangle


eng.GeometryPassShader *- - eng.FragmentShaderUniform


eng.GeometryPassVertexShader *- - eng.BasicVertexShader


eng.GeometryPassVertexShader::Output "2" *- - eng.GeometryPassShader


eng.GeometryPassVertexShader::Output *- - eng.GeometryPassShader::VertexShaderOutput


eng.GeometryPassVertexShader::Output *- - eng.Triangle


eng.Mesh *- - eng.FragmentShaderUniform


eng.Mesh *- - eng.MeshData


eng.Mesh *- - eng.ObjectTransform


eng.MeshData *- - eng.Face


eng.NormalMapShader *- - eng.FragmentShaderUniform


eng.NormalMapVertexShader *- - eng.BasicVertexShader


eng.NormalMapVertexShader::Output "2" *- - eng.NormalMapShader


eng.NormalMapVertexShader::Output *- - eng.NormalMapShader::VertexShaderOutput


eng.NormalMapVertexShader::Output *- - eng.Triangle


eng.NormalShader *- - eng.FragmentShaderUniform


eng.NormalVertexShader *- - eng.BasicVertexShader


eng.NormalVertexShader::Output "2" *- - eng.NormalShader


eng.NormalVertexShader::Output *- - eng.Triangle


eng.OnePassPipeline *- - eng.ColorAndDepthBuffer


eng.OnePassTransparentPipeline *- - eng.ColorAndDepthBuffer


eng.ParallaxMapShader *- - eng.FragmentShaderUniform


eng.ParallaxMapVertexShader *- - eng.BasicVertexShader


eng.ParallaxMapVertexShader::Output "2" *- - eng.ParallaxMapShader


eng.ParallaxMapVertexShader::Output *- - eng.ParallaxMapShader::VertexShaderOutput


eng.ParallaxMapVertexShader::Output *- - eng.Triangle


eng.PhongShader *- - eng.FragmentShaderUniform


eng.PhongShadowMappingShader *- - eng.FragmentShaderUniform


eng.PhongShadowMappingVertexShader *- - eng.BasicVertexShader


eng.PhongShadowMappingVertexShader::Output "2" *- - eng.PhongShadowMappingShader


eng.PhongShadowMappingVertexShader::Output *- - eng.PhongShadowMappingShader::VertexShaderOutput


eng.PhongShadowMappingVertexShader::Output *- - eng.Triangle


eng.PhongVertexShader *- - eng.BasicVertexShader


eng.PhongVertexShader::Output "2" *- - eng.PhongShader


eng.PhongVertexShader::Output *- - eng.PhongShader::VertexShaderOutput


eng.PhongVertexShader::Output *- - eng.Triangle


eng.Renderer *- - eng.BloomPipeline


eng.Renderer *- - eng.ConvertingPipeline


eng.Renderer *- - eng.DeferredShadingPipeline


eng.Renderer *- - eng.ProjectionInfo


eng.Renderer *- - eng.SSAOPipeline


eng.Renderer *- - eng.ShadowMappingPipeline


.SFMLRenderer *- - eng.Renderer


.SFMLRenderer *- - eng.Texture


eng.SSAOGeometryPassVertexShader *- - eng.BasicVertexShader


eng.SSAOGeometryPassVertexShader::Output "2" *- - eng.GeometryPassShader


eng.SSAOGeometryPassVertexShader::Output *- - eng.GeometryPassShader::VertexShaderOutput


eng.SSAOGeometryPassVertexShader::Output *- - eng.Triangle


eng.SSAOPipeline "2" *- - eng.ColorAndDepthBuffer


eng.SSAOPipeline *- - eng.GeometryInfo


eng.SSAOPipeline *- - eng.GeometryPassShader


eng.SSAOPipeline *- - eng.Mesh


eng.SSAOPipeline "2" *- - eng.NoBlending


eng.SSAOPipeline "2" *- - eng.NoDiscard


eng.SSAOPipeline *- - eng.SSAOGeometryPassVertexShader


eng.SSAOPipeline "2" *- - eng.Vector2d


eng.Scene *- - eng.Camera


eng.ShadowMappingPipeline "2" *- - eng.ColorAndDepthBuffer


eng.ShadowMappingPipeline "2" *- - eng.NoBlending


eng.ShadowMappingPipeline "2" *- - eng.NoDiscard


eng.TextureShader *- - eng.EmptyStruct


eng.TextureShader *- - eng.FragmentShaderUniform


eng.TextureVertexShader *- - eng.BasicVertexShader


eng.TextureVertexShader::Output "2" *- - eng.TextureShader


eng.TextureVertexShader::Output *- - eng.Triangle


eng.UVShader *- - eng.EmptyStruct


eng.UVShader *- - eng.FragmentShaderUniform






/' Nested objects '/

eng.BasicVertexShader +- - eng.BasicVertexShader::BasicVertexShaderOutput


eng.CameraControl +- - eng.CameraControl::MovementDirection


eng.CubemapVertexShader +- - eng.CubemapVertexShader::Output


eng.FlatVertexShader +- - eng.FlatVertexShader::Output


eng.GeometryPassShader +- - eng.GeometryPassShader::VertexShaderOutput


eng.GeometryPassVertexShader +- - eng.GeometryPassVertexShader::Output


eng.NormalMapShader +- - eng.NormalMapShader::VertexShaderOutput


eng.NormalMapVertexShader +- - eng.NormalMapVertexShader::Output


eng.NormalVertexShader +- - eng.NormalVertexShader::Output


eng.ParallaxMapShader +- - eng.ParallaxMapShader::VertexShaderOutput


eng.ParallaxMapVertexShader +- - eng.ParallaxMapVertexShader::Output


eng.PhongShader +- - eng.PhongShader::VertexShaderOutput


eng.PhongShadowMappingShader +- - eng.PhongShadowMappingShader::VertexShaderOutput


eng.PhongShadowMappingVertexShader +- - eng.PhongShadowMappingVertexShader::Output


eng.PhongVertexShader +- - eng.PhongVertexShader::Output


eng.SSAOGeometryPassVertexShader +- - eng.SSAOGeometryPassVertexShader::Output


eng.TextureVertexShader +- - eng.TextureVertexShader::Output




@enduml

@startuml






class Application {
	+Application()
	-renderer_ : SFMLRenderer
	-userInterface_ : UserInterface
	-pause : bool
	-cameraControl_ : eng::CameraControl
	-mainAppWindow_ : sf::RenderWindow
	-currentSceneIndex_ : size_t
	-{static} defaultHeight_ : static constexpr const Pixels
	-{static} defaultWidth_ : static constexpr const Pixels
	-{static} mainWindowMsg_ : static constexpr const char*
	-scenes_ : std::vector<eng::Scene>
	-onClose() : void
	-onKeyPressOrRelease(sf::Keyboard::Key key, bool mode) : void
	-onMouseEnter() : void
	-onMouseMove(glm::vec2 newPosition) : void
	-processEvents() : void
	+run() : void
	-update(float dt) : void
}


class SFMLRenderer {
	+SFMLRenderer(Pixels width, Pixels height, sf::RenderWindow& mainAppWindow)
	-windowHeight_ : Pixels
	-windowWidth_ : Pixels
	-renderer_ : eng::Renderer
	-screenSprite_ : sf::Sprite
	-screenTexture_ : sf::Texture
	+render(eng::Scene& scene) : size_t
	-mainAppWindow_ : std::reference_wrapper<sf::RenderWindow>
	+renderToFile(eng::Scene& scene, const std::string& file) : void
}


class UserInterface {
	+UserInterface(sf::RenderWindow& window_)
	-pause : bool
	-currentTime_ : float
	-framesPerSecond_ : float
	-lastTime_ : float
	-font_ : sf::Font
	-text2_ : sf::Text
	-text3_ : sf::Text
	-text4_ : sf::Text
	-text5_ : sf::Text
	-text_ : sf::Text
	-frames_ : size_t
	-mainAppWindow_ : std::reference_wrapper<sf::RenderWindow>
	+togglePause() : void
	+updateAndDraw(float deltaTime, size_t trianglesCount, size_t& sceneIndex, std::vector<eng::Scene>& scenes) : void
}


namespace eng {
	class Assets {
		-Assets()
		+{static} get() : Assets&
		-cubemapTexture : CubemapTexture
		+{static} getCubemapTexture() : CubemapTextureRef
		+{static} getCubemapTexture(std::string filename, bool defaultFormat, const std::string& imageFormat) : CubemapTextureRef
		+{static} getMeshData(std::string filename, float scale, bool in, bool ov) : MeshDataRef
		-texture : Texture
		+{static} getTexture() : TextureRef
		+{static} getTexture(std::string filename) : TextureRef
		-shadowMappingInfo_ : std::optional<ShadowMappingInfo>
		+{static} getShadowMappingInfo() : std::optional<ShadowMappingInfo>&
		+{static} setShadowMappingInfo(const std::optional<ShadowMappingInfo>& info) : void
	}

	class BloomPipeline {
		+BloomPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color128, DefaultConversion, NoBlending, AlphaDiscard>
		-result_ : ColorBuffer32
		-bloom_buffer1_ : ColorBuffer96
		-bloom_buffer2_ : ColorBuffer96
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Camera {
		+Camera(glm::vec3 position, glm::vec3 direction)
		-viewMatrix_ : glm::mat4
		+getViewMatrix() : glm::mat4& {query}
		-direction_ : glm::vec3
		-position_ : glm::vec3
		+getDirection() : glm::vec3& {query}
		+getPosition() : glm::vec3& {query}
		+setDirection(glm::vec3 direction) : void
		+setPosition(glm::vec3 position) : void
	}

	class CameraControl {
		+CameraControl(glm::vec3 position, glm::vec3 direction)
		-pitch_ : float
		-yaw_ : float
		-direction_ : glm::vec3
		+getDirection() : glm::vec3 {query}
		+getPosition() : glm::vec3 {query}
		-position_ : glm::vec3
		+keyPressedOrReleased(sf::Keyboard::Key key, bool mode) : void
		+mouseMove(glm::vec2 delta) : void
		+setDirection(glm::vec3 dir) : void
		+setPosition(glm::vec3 pos) : void
		+update(float deltaTime) : void
	}

	class ColorAndDepthBuffer <template<typename ColorType, template<typename Color1, typename Color2>class ConvertionType, template<typename Color>class BlendingType, template<typename Color>class DiscardType>> {
		+ColorAndDepthBuffer(Pixels width, Pixels height, ColorType clearColor)
		+{static} blend(Clr source, Clr destination) : Clr
		+getClearColor() : Color {query}
		+getPixelColor(Pixels x, Pixels y) : Color {query}
		+{static} convertColor(Color1 color) : Color2
		+getColorBuffer() : ColorBuffer& {query}
		+getColorBuffer() : ColorBuffer&
		-clearColor_ : ColorType
		+getPixelDepth(Pixels x, Pixels y) : Depth {query}
		+getDepthBuffer() : DepthBuffer& {query}
		+getDepthBuffer() : DepthBuffer&
		+getHeight() : Pixels {query}
		+getWidth() : Pixels {query}
		-height_ : Pixels
		-width_ : Pixels
		-colorBuffer_ : Vector2d<Color>
		-depthBuffer_ : Vector2d<Depth>
		+{static} discard(Clr color) : bool
		-writeToDepthBuffer_ : bool
		+clear() : void
		-depthCheckSetPixelColor(Pixels x, Pixels y, Depth z, ColorType color) : void
		+setClearColor(ColorType clr) : void
		-setPixelColor(Pixels x, Pixels y, ColorType color) : void
		+setPixelColor(Pixels x, Pixels y, ColorType color, Depth z) : void
		-setPixelDepth(Pixels x, Pixels y, Depth z) : void
		+setWriteToDepthBuffer(bool b) : void
	}

	class ConvertingPipeline {
		+ConvertingPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color128, DefaultConversion, NoBlending, NoDiscard>
		-result_ : ColorBuffer32
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class DeferredShadingPipeline {
		+DeferredShadingPipeline(Pixels width, Pixels height)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-gBuffer_ : ColorAndDepthBuffer<GeometryInfo, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : Mesh<GeometryPassVertexShader, GeometryPassShader>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Mesh <template<typename VertexShader, typename FragmentShader>> {
		+Mesh(reference_wrapper<const MeshData> mesh, VertexShaderUniform vertexShaderUniform, FragmentShaderUniform fragmentShaderUniform, const ObjectTransform& objectTransform, bool wireframeMode, bool writeToDepthBuffer, Color32 wireframeColor, bool drawingEnabled, bool transparent, bool drawBackface)
		-wireframeColor_ : Color32
		-fragmentShader_ : FragmentShader
		+getFragmentShader() : FragmentShader&
		-fragmentShaderUniform_ : FragmentShaderUniform
		+getFragmentShaderUniform() : FragmentShaderUniform& {query}
		+getFragmentShaderUniform() : FragmentShaderUniform&
		+getMeshData() : MeshDataRef {query}
		-objectTransform_ : ObjectTransform
		+getTransform() : ObjectTransform& {query}
		+getTransform() : ObjectTransform&
		-vertexShader_ : VertexShader
		-vertexShaderUniform_ : VertexShaderUniform
		+getVertexShaderUniform() : VertexShaderUniform& {query}
		+getVertexShaderUniform() : VertexShaderUniform&
		-drawBackface_ : bool
		-drawingEnabled_ : bool
		+getDrawBackface() : bool {query}
		+getDrawingEnabled() : bool {query}
		+getIsTransparent() : bool {query}
		+getWireframeMode() : bool {query}
		+getWriteToDepthBuffer() : bool {query}
		-isTransparent_ : bool
		-wireframeMode_ : bool
		-writeToDepthBuffer_ : bool
		+getCenter(const eng::MeshData& mesh, const eng::Face& face, const glm::mat4& model) : glm::vec3
		+getWireframeColor() : glm::vec3 {query}
		-mesh_ : reference_wrapper<const MeshData>
		+getTriangleCount() : size_t {query}
		+getDistances(const Camera& camera) : std::vector<Distance>
		+draw(const Camera& camera, ProjectionInfo& projectionInfo, const LightsVec& lights, Buffer& buffer) : void
		+drawFace(const Camera& camera, ProjectionInfo& projectionInfo, const LightsVec& lights, Buffer& buffer, size_t faceIndex) : void
		+setDrawingMode(bool wireframeMode, bool drawingEnabled, bool writeToDepthBuffer, Color32 wireframeColor, bool transparent) : void
		+setFragmentShaderUniform(FragmentShaderUniform fragmentShaderUniform) : void
		+setIsTransparent(bool transparent) : void
		+setMeshData(reference_wrapper<const MeshData> mesh) : void
		+setTransform(const ObjectTransform& objectTransform) : void
		+setVertexShaderUniform(VertexShaderUniform vertexShaderUniform) : void
		+setWireframeColor(Color32 color) : void
	}

	class ObjectTransform {
		+ObjectTransform()
		+ObjectTransform(glm::vec3 pos)
		+ObjectTransform(glm::vec3 pos, glm::vec3 scale)
		-modelInvalid_ : bool
		-model_ : glm::mat4
		+getModel() : glm::mat4&
		+getOrientation() : glm::quat {query}
		-orientation_ : glm::quat
		+getPosition() : glm::vec3 {query}
		+getScale() : glm::vec3 {query}
		-position_ : glm::vec3
		-scale_ : glm::vec3
		+setOrientation(const glm::quat orientation) : void
		+setPosition(const glm::vec3 position) : void
		+setScale(const glm::vec3 scale) : void
	}

	class OnePassPipeline <template<template<typename Color1, typename Color2>class Conversion, template<typename Color>class Blending, template<typename Color>class Discard>> {
		+OnePassPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color32, Conversion, Blending, Discard>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class OnePassTransparentPipeline <template<template<typename Color1, typename Color2>class Conversion, template<typename Color>class Blending, template<typename Color>class Discard>> {
		+OnePassTransparentPipeline(Pixels width, Pixels height)
		-buffer_ : ColorAndDepthBuffer<Color32, Conversion, Blending, Discard>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Pool {
		-Pool()
		+{static} get() : Pool&
		+{static} getPool() : std::pmr::monotonic_buffer_resource*
	}

	class ProjectionInfo {
		+ProjectionInfo(Pixels width, Pixels height, Depth near, Depth far, Degrees fov)
		+ProjectionInfo(Pixels width, Pixels height, bool dummy, Distance frustrumSize, Depth near, Depth far)
		-aspectRatio_ : AspectRatio
		-farPlaneDistance_ : Depth
		+getFarPlaneDistance() : Depth {query}
		+getNearPlaneDistance() : Depth {query}
		-nearPlaneDistance_ : Depth
		+getHeight() : Pixels {query}
		+getWidth() : Pixels {query}
		-screenHeight_ : Pixels
		-screenWidth_ : Pixels
		-projectionMatrix_ : glm::mat4
		+getProjectionMatrix() : glm::mat4& {query}
		-{static} defaultFieldOfViewAngle_ : static constexpr const Degrees
		-{static} defaultFarPlaneDistance_ : static constexpr const Depth
		-{static} defaultNearPlaneDistance_ : static constexpr const Depth
	}

	class Renderer {
		+Renderer(Pixels width, Pixels height)
		-blendingPipeline_ : BlendingPipeline
		-blendingSortingPipeline_ : BlendingSortingPipeline
		-bloomPipeline_ : BloomPipeline
		-convertingPipeline_ : ConvertingPipeline
		-defaultPipeline_ : DefaultPipeline
		-deferredShadingPipeline_ : DeferredShadingPipeline
		-hdrPipeline_ : HDRPipeline
		+renderScene(Scene& scene) : PipelineResult
		-projectionInfo_ : ProjectionInfo
		+getProjectionInfo() : ProjectionInfo&
		-ssaoPipeline_ : SSAOPipeline
		-shadowMappingPipeline_ : ShadowMappingPipeline
	}

	class SSAOPipeline {
		+SSAOPipeline(Pixels width, Pixels height)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-gBuffer_ : ColorAndDepthBuffer<GeometryInfo, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : Mesh<SSAOGeometryPassVertexShader, GeometryPassShader>
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
		-blurredOcclusionTexture : Vector2d<float>
		-occlusionTexture : Vector2d<float>
		-{static} noiseTextureSize : static constexpr size_t
		-{static} sampleCount : static constexpr size_t
		-ssaoKernel : std::vector<glm::vec3>
		-ssaoNoise : std::vector<glm::vec3>
	}

	class Scene {
		+Scene()
		+Scene(const std::string& name)
		-camera_ : Camera
		+getCamera() : Camera& {query}
		+getCamera() : Camera&
		-pointLights_ : LightsVec
		+getPointLights() : LightsVec& {query}
		+getPointLights() : LightsVec&
		-objects_ : ObjectsVec
		+getAllObjects() : ObjectsVec& {query}
		+getAllObjects() : ObjectsVec&
		-name_ : std::string
		-pipeline_ : std::string
		+getName() : std::string& {query}
		+getName() : std::string&
		+getPipeline() : std::string& {query}
		+getPipeline() : std::string&
		+addObject(std::string name, const T& t) : void
	}

	class ShadowMappingPipeline {
		+ShadowMappingPipeline(Pixels width, Pixels height, Pixels depthMapWidth, Pixels depthMapHeight)
		-result_ : ColorAndDepthBuffer<Color32, ClampConversion, NoBlending, NoDiscard>
		-depthMapBuffer_ : ColorAndDepthBuffer<Color32, DefaultConversion, NoBlending, NoDiscard>
		-mesh_ : FlatMesh
		+renderScene(Scene& scene, ProjectionInfo& projectionInfo) : PipelineResult
	}

	class Vector2d <template<typename T>> {
		+Vector2d(size_t width, size_t height, const T& elem)
		+get(size_t x, size_t y) : T& {query}
		+get(size_t i) : T&
		+get(size_t i) : T& {query}
		+get_pointer() : T* {query}
		+getHeight() : size_t {query}
		+getWidth() : size_t {query}
		-matrixHeight_ : size_t
		-matrixWidth_ : size_t
		-vector_ : std::pmr::vector<T>
		+fill(const T& elem) : void
		+set(size_t x, size_t y, const T& elem) : void
	}

	enum CameraControl::MovementDirection {
		Backward
		Down
		Forward
		Left
		Right
		Up
	}

	class AlphaBlending128 {
		+{static} blend(Color128 source, Color128 destination) : Color128
	}

	class AlphaBlending32 {
		+{static} blend(Color32 source, Color32 destination) : Color32
	}

	class AlphaDiscard128 {
		+{static} discard(Color128 color) : bool
	}

	class AlphaDiscard32 {
		+{static} discard(Color32 color) : bool
	}

	class BasicVertexShader {
		+run(const WorldSpaceTriangle& tr) : BasicVertexShaderOutput
		+normalMatrix : glm::mat3
		+model : glm::mat4
		+projection : glm::mat4
		+view : glm::mat4
		+vm : glm::mat4
		+viewPos : glm::vec3
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class BasicVertexShader::BasicVertexShaderOutput {
		+v0 : glm::vec3
		+v1 : glm::vec3
		+v2 : glm::vec3
		+cv0 : glm::vec4
		+cv1 : glm::vec4
		+cv2 : glm::vec4
	}

	class ClampT1 {
		+{static} transform(Color128 color) : Color128
	}

	class CubemapShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec3> var, const LightsVec& lights) : glm::vec4
	}

	class CubemapTexture {
		+CubemapTexture()
		+CubemapTexture(const std::string& folder, bool defaultFormat, const std::string& imageFormat)
		+sample(glm::vec3 direction) : Color128 {query}
		+textures : array<Texture, 6>
		+defaultFormat : bool
		+fileName : std::string
		+imageFormat : std::string
	}

	class CubemapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class CubemapVertexShader::Output {
		+uniformOutput : CubemapShader::VertexShaderOutput
		+triangle : Triangle<CubemapShader::Var>
	}

	class EmptyStruct {
	}

	class Face {
		+i : size_t
		+j : size_t
		+k : size_t
		+ni : size_t
		+nj : size_t
		+nk : size_t
		+ti : size_t
		+tj : size_t
		+tk : size_t
	}

	class FlatShader {
		+computePixelColor(NoVariables var, const LightsVec& lights) : Color128
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
	}

	class FlatVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class FlatVertexShader::Output {
		+uniformOutput : FlatShader::VertexShaderOutput
		+triangle : Triangle<FlatShader::Var>
	}

	class FragmentShaderUniform {
		+cubemapTexture : CubemapTextureRef
		+diffuseTexture : TextureRef
		+displacementTexture : TextureRef
		+normalTexture : TextureRef
		+flatColor : glm::vec3
	}

	class GenericBlending <template<typename Color, typename B128, typename B32>> {
		+{static} blend(Color source, Color destination) : Color
	}

	class GenericBlendingColor128,B128,B32 <template<typename B128, typename B32>> {
		+{static} blend(Color128 source, Color128 destination) : Color128
	}

	class GenericBlendingColor32,B128,B32 <template<typename B128, typename B32>> {
		+{static} blend(Color32 source, Color32 destination) : Color32
	}

	class GenericDiscard <template<typename Color, typename D128, typename D32>> {
		+{static} discard(Color color) : bool
	}

	class GenericDiscardColor128,D128,D32 <template<typename D128, typename D32>> {
		+{static} discard(Color128 color) : bool
	}

	class GenericDiscardColor32,D128,D32 <template<typename D128, typename D32>> {
		+{static} discard(Color32 color) : bool
	}

	class GeometryInfo {
		+diffuseColor : glm::vec3
		+normal : glm::vec3
		+position : glm::vec3
	}

	class GeometryPassShader {
		+uniform : FragmentShaderUniform
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : GeometryInfo
		+vso : VertexShaderOutput
	}

	class GeometryPassShader::VertexShaderOutput {
		+normal : glm::vec3
	}

	class GeometryPassVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class GeometryPassVertexShader::Output {
		+uniformOutput : GeometryPassShader::VertexShaderOutput
		+triangle : Triangle<GeometryPassShader::Var>
	}

	class HDRT1 {
		+{static} transform(Color128 color) : Color128
	}

	class IdentityT1 {
		+{static} transform(Color128 color) : Color128
	}

	class IdentityT2 {
		+{static} transform(Color32 color) : Color32
	}

	class MeshData {
		+{static} generateCubeData(float size, bool invertNormals) : MeshData
		+invertNormals : bool
		+onlyVertices : bool
		+scale : float
		+fileName : std::string
		+faces : std::vector<Face>
		+textureCoords : std::vector<glm::vec2>
		+bitangents : std::vector<glm::vec3>
		+normals : std::vector<glm::vec3>
		+tangents : std::vector<glm::vec3>
		+vertices : std::vector<glm::vec3>
		+generateTBNVectors() : void
	}

	class NoBlending <template<typename Color>> {
		+{static} blend(Color source, Color destination) : Color
	}

	class NoDiscard <template<typename Color>> {
		+{static} discard(Color color) : bool
	}

	class NoVariables {
		+operator*(float t) : NoVariables {query}
		+operator+(const NoVariables& oth) : NoVariables {query}
		+operator*=(float t) : void
	}

	class NormalMapShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class NormalMapShader::VertexShaderOutput {
		+invTBN : glm::mat3
		+viewPos : glm::vec3
	}

	class NormalMapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class NormalMapVertexShader::Output {
		+uniformOutput : NormalMapShader::VertexShaderOutput
		+triangle : Triangle<NormalMapShader::Var>
	}

	class NormalShader {
		+uniform : FragmentShaderUniform
		+computePixelColor(NoVariables var, const LightsVec& lights) : glm::vec4
		+vso : vec3
	}

	class NormalVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class NormalVertexShader::Output {
		+uniformOutput : NormalShader::VertexShaderOutput
		+triangle : Triangle<NormalShader::Var>
	}

	class OneVariable <template<typename T>> {
		+operator*(float t_) : OneVariable {query}
		+operator+(const OneVariable& oth) : OneVariable {query}
		+t : T
		+operator*=(float t_) : void
	}

	class ParallaxMapShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class ParallaxMapShader::VertexShaderOutput {
		+TBN : glm::mat3
		+viewPos : glm::vec3
	}

	class ParallaxMapVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class ParallaxMapVertexShader::Output {
		+uniformOutput : ParallaxMapShader::VertexShaderOutput
		+triangle : Triangle<ParallaxMapShader::Var>
	}

	class PhongShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(TwoVariables<glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class PhongShader::VertexShaderOutput {
		+normal : glm::vec3
		+viewPos : glm::vec3
	}

	class PhongShadowMappingShader {
		+uniform : FragmentShaderUniform
		+vso : VertexShaderOutput
		+computePixelColor(ThreeVariables<glm::vec4, glm::vec3, glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class PhongShadowMappingShader::VertexShaderOutput {
		+normal : glm::vec3
		+viewPos : glm::vec3
	}

	class PhongShadowMappingVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class PhongShadowMappingVertexShader::Output {
		+uniformOutput : PhongShadowMappingShader::VertexShaderOutput
		+triangle : Triangle<PhongShadowMappingShader::Var>
	}

	class PhongVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class PhongVertexShader::Output {
		+uniformOutput : PhongShader::VertexShaderOutput
		+triangle : Triangle<PhongShader::Var>
	}

	class PipelineResult {
		+buffer : const Color32*
		+trianglesCount : size_t
	}

	class PointLight {
		+PointLight(glm::vec3 position, glm::vec3 color, float intensity, float specularCoefficient, float diffuseCoefficient, float linearAttenuationCoefficient, float quadraticAttenuationCoefficient, float cubicAttenuationCoefficient)
		+cubicAttenuationCoefficient : float
		+diffuseCoefficient : float
		+intensity : float
		+linearAttenuationCoefficient : float
		+quadraticAttenuationCoefficient : float
		+specularCoefficient : float
		+color : glm::vec3
		+position : glm::vec3
		+{static} defaultCubicAttenuationCoefficient : static constexpr const float
		+{static} defaultDiffuseCoefficient : static constexpr const float
		+{static} defaultIntensity : static constexpr const float
		+{static} defaultLinearAttenuationCoefficient : static constexpr const float
		+{static} defaultQuadraticAttenuationCoefficient : static constexpr const float
		+{static} defaultSpecularCoefficient : static constexpr const float
	}

	class Properties {
		+cubemapDefaultFormat : bool
		+drawBackface : bool
		+drawingEnabled : bool
		+isTransparent : bool
		+meshInvertNormals : bool
		+meshOnlyVertices : bool
		+wireframeMode : bool
		+writeToDepthBuffer : bool
		+meshScale : float
		+flatColor : glm::vec3
		+transformPosition : glm::vec3
		+transformScale : glm::vec3
		+wireframeColor : glm::vec3
		+cubemapImageFormat : std::string
		+cubemapTextureName : std::string
		+diffuseTextureName : std::string
		+displacementTextureName : std::string
		+meshFileName : std::string
		+name : std::string
		+normalTextureName : std::string
		+typeName : std::string
	}

	class SSAOGeometryPassVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+normalMatrix : glm::mat3
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class SSAOGeometryPassVertexShader::Output {
		+uniformOutput : GeometryPassShader::VertexShaderOutput
		+triangle : Triangle<GeometryPassShader::Var>
	}

	class ShadowMappingInfo {
		+depthMap : std::reference_wrapper<const DepthBuffer>
		+lightSpaceMatrix : std::reference_wrapper<const glm::mat4>
	}

	class Texture {
		+Texture()
		+Texture(const std::string& file)
		+sample(glm::vec2 uv) : Color128 {query}
		+colorBuffer : ColorBuffer128
		+textureHeight : Pixels
		+textureWidth : Pixels
		+fileName : std::string
	}

	class TextureShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class TextureVertexShader {
		+bvs : BasicVertexShader
		+run(const WorldSpaceTriangle& tr) : Output
		+uniform : VertexShaderUniform
		+setMVP(glm::mat4 model_, glm::mat4 view_, glm::mat4 projection_, glm::vec3 viewPos_) : void
	}

	class TextureVertexShader::Output {
		+uniformOutput : TextureShader::VertexShaderOutput
		+triangle : Triangle<TextureShader::Var>
	}

	class ThreeVariables <template<typename T1, typename T2, typename T3>> {
		+t1 : T1
		+t2 : T2
		+t3 : T3
		+operator*(float t) : ThreeVariables {query}
		+operator+(const ThreeVariables& oth) : ThreeVariables {query}
		+operator*=(float t) : void
	}

	class TransformationConversion <template<typename Color1, typename Color2, typename T1, typename T2>> {
		+{static} convertColor(Color1 color) : Color2
	}

	class TransformationConversionColor,Color,T1,T2 <template<typename Color, typename T1, typename T2>> {
		+{static} convertColor(Color color) : Color
	}

	class TransformationConversionColor128,Color32,T1,T2 <template<typename T1, typename T2>> {
		+{static} convertColor(Color128 color) : Color32
	}

	class TransformationConversionColor32,Color128,T1,T2 <template<typename T1, typename T2>> {
		+{static} convertColor(Color32 color) : Color128
	}

	class TransparentTriangle {
		+distance : float
		+faceIndex : size_t
		+meshName : std::string_view
	}

	class Triangle <template<typename Var>> {
		+v0 : Var
		+v1 : Var
		+v2 : Var
		+p0 : glm::vec4
		+p1 : glm::vec4
		+p2 : glm::vec4
	}

	class TwoVariables <template<typename T1, typename T2>> {
		+t1 : T1
		+t2 : T2
		+operator*(float t) : TwoVariables {query}
		+operator+(const TwoVariables& oth) : TwoVariables {query}
		+operator*=(float t) : void
	}

	class TypeNameMap <template<typename T>> {
		+{static} name : static const std::string
	}

	class UVShader {
		+vso : EmptyStruct
		+uniform : FragmentShaderUniform
		+computePixelColor(OneVariable<glm::vec2> var, const LightsVec& lights) : glm::vec4
	}

	class WorldSpaceTriangle {
		+t0 : glm::vec2
		+t1 : glm::vec2
		+t2 : glm::vec2
		+bitangent : glm::vec3
		+normal : glm::vec3
		+tangent : glm::vec3
		+v0 : glm::vec3
		+v1 : glm::vec3
		+v2 : glm::vec3
	}
}










.Application *- - eng.CameraControl


.Application *- - .SFMLRenderer


.Application *- - eng.Scene


.Application *- - .UserInterface


eng.Assets *- - eng.CubemapTexture


eng.Assets *- - eng.ShadowMappingInfo


eng.Assets *- - eng.Texture


eng.BloomPipeline *- - eng.ColorAndDepthBuffer


eng.BloomPipeline *- - eng.NoBlending


eng.ColorAndDepthBuffer "2" *- - eng.Vector2d


eng.ConvertingPipeline *- - eng.ColorAndDepthBuffer


eng.ConvertingPipeline *- - eng.NoBlending


eng.ConvertingPipeline *- - eng.NoDiscard


eng.CubemapShader *- - eng.EmptyStruct


eng.CubemapShader *- - eng.FragmentShaderUniform


eng.CubemapTexture *- - eng.Texture


eng.CubemapVertexShader *- - eng.BasicVertexShader


eng.CubemapVertexShader::Output "2" *- - eng.CubemapShader


eng.CubemapVertexShader::Output *- - eng.Triangle


eng.DeferredShadingPipeline "2" *- - eng.ColorAndDepthBuffer


eng.DeferredShadingPipeline *- - eng.GeometryInfo


eng.DeferredShadingPipeline *- - eng.GeometryPassShader


eng.DeferredShadingPipeline *- - eng.GeometryPassVertexShader


eng.DeferredShadingPipeline *- - eng.Mesh


eng.DeferredShadingPipeline "2" *- - eng.NoBlending


eng.DeferredShadingPipeline "2" *- - eng.NoDiscard


eng.FlatShader *- - eng.EmptyStruct


eng.FlatShader *- - eng.FragmentShaderUniform


eng.FlatVertexShader *- - eng.BasicVertexShader


eng.FlatVertexShader::Output "2" *- - eng.FlatShader


eng.FlatVertexShader::Output *- - eng.Triangle


eng.GeometryPassShader *- - eng.FragmentShaderUniform


eng.GeometryPassVertexShader *- - eng.BasicVertexShader


eng.GeometryPassVertexShader::Output "2" *- - eng.GeometryPassShader


eng.GeometryPassVertexShader::Output *- - eng.GeometryPassShader::VertexShaderOutput


eng.GeometryPassVertexShader::Output *- - eng.Triangle


eng.Mesh *- - eng.FragmentShaderUniform


eng.Mesh *- - eng.MeshData


eng.Mesh *- - eng.ObjectTransform


eng.MeshData *- - eng.Face


eng.NormalMapShader *- - eng.FragmentShaderUniform


eng.NormalMapVertexShader *- - eng.BasicVertexShader


eng.NormalMapVertexShader::Output "2" *- - eng.NormalMapShader


eng.NormalMapVertexShader::Output *- - eng.NormalMapShader::VertexShaderOutput


eng.NormalMapVertexShader::Output *- - eng.Triangle


eng.NormalShader *- - eng.FragmentShaderUniform


eng.NormalVertexShader *- - eng.BasicVertexShader


eng.NormalVertexShader::Output "2" *- - eng.NormalShader


eng.NormalVertexShader::Output *- - eng.Triangle


eng.OnePassPipeline *- - eng.ColorAndDepthBuffer


eng.OnePassTransparentPipeline *- - eng.ColorAndDepthBuffer


eng.ParallaxMapShader *- - eng.FragmentShaderUniform


eng.ParallaxMapVertexShader *- - eng.BasicVertexShader


eng.ParallaxMapVertexShader::Output "2" *- - eng.ParallaxMapShader


eng.ParallaxMapVertexShader::Output *- - eng.ParallaxMapShader::VertexShaderOutput


eng.ParallaxMapVertexShader::Output *- - eng.Triangle


eng.PhongShader *- - eng.FragmentShaderUniform


eng.PhongShadowMappingShader *- - eng.FragmentShaderUniform


eng.PhongShadowMappingVertexShader *- - eng.BasicVertexShader


eng.PhongShadowMappingVertexShader::Output "2" *- - eng.PhongShadowMappingShader


eng.PhongShadowMappingVertexShader::Output *- - eng.PhongShadowMappingShader::VertexShaderOutput


eng.PhongShadowMappingVertexShader::Output *- - eng.Triangle


eng.PhongVertexShader *- - eng.BasicVertexShader


eng.PhongVertexShader::Output "2" *- - eng.PhongShader


eng.PhongVertexShader::Output *- - eng.PhongShader::VertexShaderOutput


eng.PhongVertexShader::Output *- - eng.Triangle


eng.Renderer *- - eng.BloomPipeline


eng.Renderer *- - eng.ConvertingPipeline


eng.Renderer *- - eng.DeferredShadingPipeline


eng.Renderer *- - eng.ProjectionInfo


eng.Renderer *- - eng.SSAOPipeline


eng.Renderer *- - eng.ShadowMappingPipeline


.SFMLRenderer *- - eng.Renderer


.SFMLRenderer *- - eng.Texture


eng.SSAOGeometryPassVertexShader *- - eng.BasicVertexShader


eng.SSAOGeometryPassVertexShader::Output "2" *- - eng.GeometryPassShader


eng.SSAOGeometryPassVertexShader::Output *- - eng.GeometryPassShader::VertexShaderOutput


eng.SSAOGeometryPassVertexShader::Output *- - eng.Triangle


eng.SSAOPipeline "2" *- - eng.ColorAndDepthBuffer


eng.SSAOPipeline *- - eng.GeometryInfo


eng.SSAOPipeline *- - eng.GeometryPassShader


eng.SSAOPipeline *- - eng.Mesh


eng.SSAOPipeline "2" *- - eng.NoBlending


eng.SSAOPipeline "2" *- - eng.NoDiscard


eng.SSAOPipeline *- - eng.SSAOGeometryPassVertexShader


eng.SSAOPipeline "2" *- - eng.Vector2d


eng.Scene *- - eng.Camera


eng.ShadowMappingPipeline "2" *- - eng.ColorAndDepthBuffer


eng.ShadowMappingPipeline "2" *- - eng.NoBlending


eng.ShadowMappingPipeline "2" *- - eng.NoDiscard


eng.TextureShader *- - eng.EmptyStruct


eng.TextureShader *- - eng.FragmentShaderUniform


eng.TextureVertexShader *- - eng.BasicVertexShader


eng.TextureVertexShader::Output "2" *- - eng.TextureShader


eng.TextureVertexShader::Output *- - eng.Triangle


eng.UVShader *- - eng.EmptyStruct


eng.UVShader *- - eng.FragmentShaderUniform







eng.BasicVertexShader +- - eng.BasicVertexShader::BasicVertexShaderOutput


eng.CameraControl +- - eng.CameraControl::MovementDirection


eng.CubemapVertexShader +- - eng.CubemapVertexShader::Output


eng.FlatVertexShader +- - eng.FlatVertexShader::Output


eng.GeometryPassShader +- - eng.GeometryPassShader::VertexShaderOutput


eng.GeometryPassVertexShader +- - eng.GeometryPassVertexShader::Output


eng.NormalMapShader +- - eng.NormalMapShader::VertexShaderOutput


eng.NormalMapVertexShader +- - eng.NormalMapVertexShader::Output


eng.NormalVertexShader +- - eng.NormalVertexShader::Output


eng.ParallaxMapShader +- - eng.ParallaxMapShader::VertexShaderOutput


eng.ParallaxMapVertexShader +- - eng.ParallaxMapVertexShader::Output


eng.PhongShader +- - eng.PhongShader::VertexShaderOutput


eng.PhongShadowMappingShader +- - eng.PhongShadowMappingShader::VertexShaderOutput


eng.PhongShadowMappingVertexShader +- - eng.PhongShadowMappingVertexShader::Output


eng.PhongVertexShader +- - eng.PhongVertexShader::Output


eng.SSAOGeometryPassVertexShader +- - eng.SSAOGeometryPassVertexShader::Output


eng.TextureVertexShader +- - eng.TextureVertexShader::Output




@enduml

PlantUML version 1.2021.7(Sun May 23 15:40:07 MSK 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1251
Language: ru
Country: RU
--></g></svg>